const { exec } = require('child_process');

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π cart_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function testCartInBrowser() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ì–†–£–ó–ö–ò –ö–û–†–ó–ò–ù–´ –í –ë–†–ê–£–ó–ï–†–ï\n');
  console.log('=' .repeat(60));
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
    const { data: cart, error } = await supabase
      .from('project_carts')
      .select('*')
      .eq('status', 'active')
      .order('created_at', { ascending: false })
      .limit(1)
      .single();
    
    if (error || !cart) {
      console.log('‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ test-cart-flow.js');
      return;
    }
    
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞:', cart.id);
    console.log('   - –¢–æ–≤–∞—Ä–æ–≤:', cart.cart_items?.items?.length);
    console.log('   - –°—É–º–º–∞:', cart.total_amount);
    console.log('   - –ü–æ—Å—Ç–∞–≤—â–∏–∫:', cart.supplier_company_name);
    
    const url = `http://localhost:3000/dashboard/create-project?from_cart=true&cart_id=${cart.id}`;
    
    console.log('\nüåê –û—Ç–∫—Ä—ã–≤–∞–µ–º URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
    console.log(url);
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    exec(`open "${url}"`, (error) => {
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', error);
        return;
      }
      console.log('\n‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç!');
      console.log('\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools (F12) –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Console');
      console.log('2. –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –ª–æ–≥–∏ [CartLoader] —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ—Ä–∑–∏–Ω—ã');
      console.log('3. –®–∞–≥ 2 –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
      console.log('4. –®–∞–≥ 4 –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã');
      console.log('5. –®–∞–≥ 5 –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞');
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

testCartInBrowser();