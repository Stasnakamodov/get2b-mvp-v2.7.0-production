const { createClient } = require('@supabase/supabase-js')
const fs = require('fs')
const path = require('path')

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è SUPABASE_URL –∏–ª–∏ SUPABASE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function runMigration() {
  try {
    console.log('üîÑ –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏...')
    
    const sqlFile = path.join(__dirname, '../sql/create-catalog-category-view.sql')
    const sqlContent = fs.readFileSync(sqlFile, 'utf8')
    
    console.log('üìä –í—ã–ø–æ–ª–Ω—è–µ–º SQL –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è catalog views...')
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ —Ç–æ—á–∫–µ —Å –∑–∞–ø—è—Ç–æ–π)
    const sqlCommands = sqlContent
      .split(';')
      .map(cmd => cmd.trim())
      .filter(cmd => cmd.length > 0 && !cmd.startsWith('--') && !cmd.startsWith('SELECT'))
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${sqlCommands.length} SQL –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`)
    
    for (let i = 0; i < sqlCommands.length; i++) {
      const command = sqlCommands[i]
      if (command.trim()) {
        console.log(`‚è≥ –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É ${i + 1}/${sqlCommands.length}...`)
        
        const { data, error } = await supabase.rpc('exec_sql', { sql: command })
        
        if (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ ${i + 1}:`, error)
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        } else {
          console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ ${i + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`)
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ VIEW —Å–æ–∑–¥–∞–ª–∏—Å—å
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ VIEW...')
    
    const { data: viewCheck, error: viewError } = await supabase
      .from('catalog_categories_with_counts')
      .select('category, products_count, suppliers_count')
      .limit(5)
    
    if (viewError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ VIEW:', viewError)
    } else {
      console.log('‚úÖ VIEW catalog_categories_with_counts —Ä–∞–±–æ—Ç–∞–µ—Ç!')
      console.log('üìä –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', viewCheck?.length || 0)
      viewCheck?.forEach(cat => {
        console.log(`  - ${cat.category}: ${cat.products_count} —Ç–æ–≤–∞—Ä–æ–≤, ${cat.suppliers_count} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤`)
      })
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error)
  }
}

runMigration()