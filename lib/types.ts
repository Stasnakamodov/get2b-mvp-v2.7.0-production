import { ProjectStatus } from './types/project-status';

// –ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç–∏–ø–æ–≤
export type ProjectID = string & { readonly brand: unique symbol }
export type UserID = string & { readonly brand: unique symbol }

// –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤
export const createProjectID = (id: string): ProjectID => id as ProjectID
export const createUserID = (id: string): UserID => id as UserID

// –¢–∏–ø—ã –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π
export interface CompanyCard {
  id: string
  name: string
  inn: string
  address: string
  email: string
  phone: string
}

// –¢–∏–ø—ã –¥–ª—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–æ–≤
export interface BankAccount {
  id: string
  companyId: string
  name: string
  accountNumber: string
  swift: string
  bankName: string
  country: string
  currency: string
  isDefault: boolean
}

// –¢–∏–ø—ã –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
export interface SpecificationItem {
  id: string
  name: string
  code: string
  quantity: number
  unit: string
  pricePerUnit: number
  totalPrice: number
}

// –¢–∏–ø—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–Ω–æ–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç project_specifications)
export interface ProjectSpecificationItem {
  id?: string
  project_id: string
  user_id: string
  role: 'client' | 'supplier'
  item_name: string
  item_code?: string | null
  quantity?: number | null
  unit?: string | null
  price?: number | null
  currency?: string | null
  total?: number | null
  supplier_name?: string | null
  image_url?: string | null
  invoice_file_url?: string | null
  category_name?: string | null
  subcategory_name?: string | null
  catalog_product_id?: string | null
  created_at?: string
  updated_at?: string
}

// –¢–∏–ø—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
export interface SpecificationItemsRequest {
  id: string
  title: string
  supplier: string
  status: string
  totalAmount: number
  currency: string
  createdAt: string
  items: SpecificationItem[]
  additionalInfo?: string
}

// –¢–∏–ø—ã –¥–ª—è —Ç–∏–ø–æ–≤ –∏–Ω–≤–æ–π—Å–æ–≤
export interface InvoiceType {
  id: string
  name: string
}

// –¢–∏–ø—ã –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
export interface ProjectDraft {
  id: string
  createdAt: string
  company: string | null
  bankAccount: string | null
  invoiceType: string
  specificationItems: string | null
  selectedItems: { specId: string; itemIds: string[] }[]
  newSpecification?: {
    supplier: string
    currency: string
    expectedDeliveryDate: string
    additionalInfo: string
    items: {
      id: string
      name: string
      code: string
      quantity: number
      unit: string
      price: number
      total: number
    }[]
  } | null
}

// –¢–∏–ø—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
export interface Project {
  id: ProjectID
  title: string
  company: CompanyCard
  bankAccount: BankAccount
  invoiceType: string
  specificationItems: SpecificationItemsRequest | null
  selectedItems: {
    specificationItems: SpecificationItemsRequest
    items: SpecificationItem[]
  }[]
  createdAt: string
  updatedAt: string
  status: ProjectStatus
  current_step: number
  client_confirmation_url?: string
  client_confirmation_uploaded_at?: string
  client_confirmation_status?: string
}

// –¢–∏–ø—ã –æ—à–∏–±–æ–∫
export class ProjectError extends Error {
  constructor(message: string) {
    super(message)
    this.name = "ProjectError"
  }
}

export class NetworkError extends Error {
  constructor(message: string) {
    super(message)
    this.name = "NetworkError"
  }
}

// ========================================
// üéØ –¢–ò–ü–´ –î–õ–Ø CATEGORY-FIRST –ö–ê–¢–ê–õ–û–ì–ê
// ========================================

// –¢–∏–ø—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏
export interface CatalogCategory {
  id?: number
  key?: string
  name: string
  category: string  // ‚ö†Ô∏è –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - alias –¥–ª—è name
  products_count: number
  suppliers_count: number
  min_price: number | null
  max_price: number | null
  available_rooms: ('verified' | 'user')[]
  countries: string[]
  icon: string
  description: string
  price_range?: string | null
  rooms_info: {
    has_verified: boolean
    has_user: boolean
    total_rooms: number
  }
  // üå≥ –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∏–µ—Ä–∞—Ä—Ö–∏–∏
  parent_id?: number | null
  level?: number  // 1 = –æ—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, 2 = –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è
  sort_order?: number
  has_subcategories?: boolean
  subcategories?: CatalogCategory[]  // –í–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  category_path?: string  // –ü–æ–ª–Ω—ã–π –ø—É—Ç—å "–û—Å–Ω–æ–≤–Ω–∞—è ‚Üí –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è"
}

// –¢–∏–ø –¥–ª—è –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
export interface CategoryTree {
  main_category: CatalogCategory
  subcategories: CatalogCategory[]
  total_products: number
  total_suppliers: number
}

// –¢–∏–ø—ã —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
export interface CatalogProduct {
  id: string
  product_name: string
  description: string | null
  price: string
  currency: string
  min_order: string | null
  in_stock: boolean
  images: string[] | null
  item_code: string | null
  created_at: string
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ
  supplier_id: string
  supplier_name: string
  supplier_company_name: string | null
  supplier_category: string
  supplier_country: string
  supplier_city: string | null
  supplier_email: string | null
  supplier_phone: string | null
  supplier_website: string | null
  supplier_rating: number | null
  supplier_reviews: number | null
  supplier_projects: number | null
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã
  room_type: 'verified' | 'user'
  room_icon: string
  room_description: string
  
  // –ü–æ–ª—è –¥–ª—è Step2 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
  item_name: string
  step2_supplier_name: string
  image_url: string
}

// –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
export interface CatalogSupplierGroup {
  supplier_id: string
  supplier_name: string
  supplier_company_name: string | null
  supplier_category: string
  supplier_country: string
  supplier_city: string | null
  supplier_email: string | null
  supplier_phone: string | null
  supplier_website: string | null
  supplier_rating: number | null
  supplier_reviews: number | null
  supplier_projects: number | null
  room_type: 'verified' | 'user'
  room_icon: string
  room_description: string
  products_count: number
  products: {
    id: string
    product_name: string
    description: string | null
    price: string
    currency: string
    min_order: string | null
    in_stock: boolean
    item_code: string | null
    image_url: string
    item_name: string
  }[]
}

// –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
export interface SupplierAutofillData {
  supplier_info: {
    id: string
    name: string
    company_name: string | null
    category: string
    country: string
    city: string | null
    description: string | null
    logo_url: string | null
    contact_email: string | null
    contact_phone: string | null
    website: string | null
    contact_person: string | null
    room_type: 'verified' | 'user'
    room_icon: string
  }
  
  step2_data: {
    products: CatalogProduct[]
    supplier_name: string
  }
  
  step4_data: {
    payment_method: string
    payment_methods_available: string[]
    has_phantom_data: boolean
  }
  
  step5_data: {
    requisites: {
      company_name?: string
      contact_email?: string
      contact_phone?: string
      website?: string
      contact_person?: string
      country?: string
      city?: string
      bank_name?: string
      account_number?: string
      swift?: string
      recipient_name?: string
    }
    has_phantom_data: boolean
    phantom_projects_count: number
  }
  
  metadata: {
    supplier_type: 'verified' | 'user'
    has_products: boolean
    has_phantom_data: boolean
    phantom_data_confidence: number
  }
}

// API Responses
export interface CatalogCategoriesResponse {
  success: boolean
  categories: CatalogCategory[]
  summary: {
    total_categories: number
    total_products: number
    total_suppliers: number
    execution_time_ms: number
  }
  error?: string
}

export interface CatalogProductsByCategoryResponse {
  success: boolean
  category: string
  products: CatalogProduct[]
  suppliers: CatalogSupplierGroup[]
  pagination: {
    limit: number
    offset: number
    total: number
    has_more: boolean
  }
  summary: {
    total_products: number
    suppliers_count: number
    verified_products: number
    user_products: number
    execution_time_ms: number
  }
}

export interface SupplierAutofillResponse {
  success: boolean
  supplier_id: string
  autofill_data: SupplierAutofillData
  summary: {
    supplier_name: string
    supplier_type: 'verified' | 'user'
    products_count: number
    has_phantom_data: boolean
    execution_time_ms: number
  }
}

// –¢–∏–ø—ã –¥–ª—è Category-First —Ä–µ–∂–∏–º–∞ CatalogModal
export type CatalogMode = 'supplier-first' | 'category-first'

export interface CategoryFirstState {
  selectedCategory: string | null
  selectedProduct: CatalogProduct | null
  selectedSupplier: CatalogSupplierGroup | null
  autofillData: SupplierAutofillData | null
  currentStep: 'categories' | 'products' | 'supplier' | 'autofill'
}
