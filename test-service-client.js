require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

async function testServiceClient() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º service –∫–ª–∏–µ–Ω—Ç Supabase...\n');
  
  const supabaseUrl = process.env.SUPABASE_URL;
  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
  
  console.log('üîó URL:', supabaseUrl);
  console.log('üîë Service Key (–ø–µ—Ä–≤—ã–µ 20):', supabaseServiceKey?.substring(0, 20) + '...');
  
  if (!supabaseUrl || !supabaseServiceKey) {
    console.error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
    return;
  }
  
  const supabaseService = createClient(supabaseUrl, supabaseServiceKey, {
    auth: {
      autoRefreshToken: false,
      persistSession: false
    }
  });
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ
    console.log('üè† –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–Ω–∞—Ç–µ...');
    const { data: room, error: roomError } = await supabaseService
      .from('chat_rooms')
      .select('id, name, project_id')
      .eq('id', '1570961b-ca64-4de4-8170-a7ef99b2ae5b')
      .single();
    
    if (roomError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–º–Ω–∞—Ç—ã:', roomError);
    } else if (room) {
      console.log('‚úÖ –ö–æ–º–Ω–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞:', room.name, '(', room.project_id, ')');
    } else {
      console.log('‚ùå –ö–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    console.log('\nüíæ –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
    const testMessage = {
      room_id: '1570961b-ca64-4de4-8170-a7ef99b2ae5b',
      content: `SERVICE TEST ${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}`,
      sender_type: 'manager',
      sender_manager_id: '987654321',
      sender_name: 'Service Test Manager',
      message_type: 'text'
    };
    
    const { data: newMessage, error: saveError } = await supabaseService
      .from('chat_messages')
      .insert(testMessage)
      .select()
      .single();
    
    if (saveError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', saveError);
    } else {
      console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! ID:', newMessage.id);
      console.log('üìù –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:', newMessage.content);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testServiceClient(); 