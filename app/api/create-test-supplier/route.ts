import { NextRequest, NextResponse } from "next/server";
import { supabase } from "@/lib/supabaseClient";

export async function POST(request: NextRequest) {
  try {
    console.log("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞...");

    const { data, error } = await supabase
      .from('supplier_profiles')
      .upsert({
        id: '86cc190d-0c80-463b-b0df-39a25b22365f',
        user_id: '86cc190d-0c80-463b-b0df-39a25b22365f',
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –¥–ª—è —Ñ–∞–π–ª–æ–≤',
        company_name: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è –û–û–û',
        category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
        country: '–†–æ—Å—Å–∏—è',
        description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ –≤ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏',
        accreditation_status: 'none',
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      }, {
        onConflict: 'id'
      })
      .select()
      .single();

    if (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:", error);
      return NextResponse.json({ error: error.message }, { status: 500 });
    }

    console.log("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω:", data.id);
    return NextResponse.json({ 
      success: true, 
      supplier: data 
    });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error);
    return NextResponse.json({ 
      error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" 
    }, { status: 500 });
  }
} 