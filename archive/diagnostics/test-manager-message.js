require('dotenv').config({ path: '.env.local' });

async function sendTestManagerMessage() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º webhook payload –æ—Ç Telegram
  const webhookPayload = {
    update_id: Date.now(),
    message: {
      message_id: Date.now(),
      from: {
        id: 987654321,
        is_bot: false,
        first_name: "–ú–µ–Ω–µ–¥–∂–µ—Ä",
        last_name: "Get2B",
        username: "manager_get2b"
      },
      chat: {
        id: parseInt(process.env.TELEGRAM_CHAT_ID),
        type: "private"
      },
      date: Math.floor(Date.now() / 1000),
      text: `–ü—Ä–∏–≤–µ—Ç! –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ${new Date().toLocaleTimeString()}`,
      reply_to_message: {
        message_id: 123,
        from: {
          id: 8195945436,
          is_bot: true,
          first_name: "Get2B ChatBot"
        },
        chat: {
          id: parseInt(process.env.TELEGRAM_CHAT_ID),
          type: "private"
        },
        date: Math.floor(Date.now() / 1000) - 60,
        text: "üÜî –ü—Ä–æ–µ–∫—Ç: 1570961b-ca64-4de4-8170-a7ef99b2ae5b"
      }
    }
  };

  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é webhook payload...');
    const response = await fetch('http://localhost:3000/api/telegram-chat-webhook', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(webhookPayload)
    });

    const result = await response.text();
    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç webhook:', response.status, result);
    
    if (response.status === 200) {
      console.log('üéâ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —á–∞—Ç–µ!');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

sendTestManagerMessage(); 