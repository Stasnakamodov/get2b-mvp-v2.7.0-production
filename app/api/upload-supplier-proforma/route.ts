import { NextRequest, NextResponse } from "next/server";
import { createClient } from '@supabase/supabase-js';

export async function POST(request: NextRequest) {
  try {
    console.log("üì§ API /upload-supplier-proforma –≤—ã–∑–≤–∞–Ω");

    const formData = await request.formData();
    const file = formData.get('file') as File;
    const supplierType = formData.get('supplierType') as string; // 'construction' –∏–ª–∏ 'electronics'
    const supplierName = formData.get('supplierName') as string;

    if (!file || !supplierType || !supplierName) {
      return NextResponse.json(
        { error: "–§–∞–π–ª, —Ç–∏–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" },
        { status: 400 }
      );
    }

    // Initialize Supabase client
    const supabase = createClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL!,
      process.env.SUPABASE_SERVICE_ROLE_KEY!
    );

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const { data: suppliers, error: suppliersError } = await supabase
      .from('catalog_verified_suppliers')
      .select('id, name, category')
      .ilike('category', `%${supplierType === 'construction' ? '—Å—Ç—Ä–æ–∏—Ç–µ–ª' : '—ç–ª–µ–∫—Ç—Ä–æ–Ω'}%`)
      .limit(1);

    if (suppliersError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:", suppliersError);
      return NextResponse.json({ error: "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞" }, { status: 500 });
    }

    let supplierId;
    if (suppliers && suppliers.length > 0) {
      supplierId = suppliers[0].id;
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫: ${suppliers[0].name} (${suppliers[0].category})`);
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      const { data: newSupplier, error: createError } = await supabase
        .from('catalog_user_suppliers')
        .insert({
          name: supplierName,
          company_name: `${supplierName} Company`,
          category: supplierType === 'construction' ? '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã' : '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
          room_type: 'user',
          is_active: true,
          country: 'Russia',
          city: 'Moscow'
        })
        .select('id')
        .single();

      if (createError) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:", createError);
        return NextResponse.json({ error: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞" }, { status: 500 });
      }

      supplierId = newSupplier.id;
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫: ${supplierName} (ID: ${supplierId})`);
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Ñ–∞–π–ª–∞
    const fileExtension = file.name.split('.').pop();
    const fileName = `template_${supplierType}_${Date.now()}.${fileExtension}`;
    const storagePath = `${supplierId}/templates/${fileName}`;

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ storage
    const fileBuffer = await file.arrayBuffer();
    const { data: uploadData, error: uploadError } = await supabase.storage
      .from('supplier-proformas')
      .upload(storagePath, fileBuffer, {
        contentType: file.type,
        upsert: true
      });

    if (uploadError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", uploadError);
      return NextResponse.json({ error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞" }, { status: 500 });
    }

    console.log("‚úÖ –ü—Ä–æ—Ñ–æ—Ä–º–∞-—à–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω–∞:", {
      supplierId,
      supplierName,
      fileName,
      storagePath
    });

    return NextResponse.json({
      success: true,
      data: {
        supplierId,
        supplierName,
        fileName,
        storagePath,
        uploadPath: uploadData.path
      }
    });

  } catch (error) {
    console.error('‚ùå [API] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–æ—Ä–º—ã:', error);
    return NextResponse.json(
      {
        error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–æ—Ä–º—ã',
        details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      },
      { status: 500 }
    );
  }
}