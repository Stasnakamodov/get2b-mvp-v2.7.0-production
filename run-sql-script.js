const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase  
const supabase = createClient(
  'https://ejkhdhexkadecpbjjmsz.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVqa2hkaGV4a2FkZWNwYmpqbXN6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NzAzNzE0MiwiZXhwIjoyMDYyNjEzMTQyfQ.aJiZwDPyWRmEh7jGJe9QW6pV3k0x9b2f1UmT8_X3WFA'
);

async function runSqlScript() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–∞...');
    
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    const sqlContent = fs.readFileSync('./create-natural-suppliers.sql', 'utf8');
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ —Ç–æ—á–∫–µ —Å –∑–∞–ø—è—Ç–æ–π
    const commands = sqlContent
      .split(';')
      .map(cmd => cmd.trim())
      .filter(cmd => cmd && !cmd.startsWith('--') && cmd !== '');
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${commands.length} SQL –∫–æ–º–∞–Ω–¥`);
    
    for (let i = 0; i < commands.length; i++) {
      const command = commands[i];
      console.log(`\n‚ö° –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É ${i + 1}/${commands.length}:`);
      console.log(command.substring(0, 100) + '...');
      
      const { data, error } = await supabase.rpc('execute_sql', {
        sql_query: command + ';'
      });
      
      if (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ ${i + 1}:`, error);
        continue;
      }
      
      console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ ${i + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
    }
    
    console.log('\nüéâ SQL —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const { data: suppliers, error: selectError } = await supabase
      .from('catalog_verified_suppliers')
      .select('name, category, city, logo_url')
      .eq('is_active', true);
      
    if (selectError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', selectError);
      return;
    }
    
    console.log('\nüìä –°–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', suppliers?.length || 0);
    suppliers?.forEach(supplier => {
      console.log(`- ${supplier.name} (${supplier.category}) - ${supplier.city}`);
    });
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

runSqlScript();