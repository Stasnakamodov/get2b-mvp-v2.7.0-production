// –¢–µ—Å—Ç –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏
const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://ejkhdhexkadecpbjjmsz.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVqa2hkaGV4a2FkZWNwYmpqbXN6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwMzcxNDIsImV4cCI6MjA2MjYxMzE0Mn0.DHcfdHrQmPiG4AkwDaCa9AXYB7zQPJlK7VuXt-g1uUU';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testNewStorageArchitecture() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –±–∞–∫–µ—Ç–æ–≤
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∫–µ—Ç–æ–≤...');
    
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();
    
    if (bucketsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–∫–µ—Ç–æ–≤:', bucketsError);
      return;
    }

    const requiredBuckets = ['project-images', 'accreditation-certificates', 'accreditation-documents'];
    const existingBuckets = buckets.map(b => b.name);
    
    console.log('üì¶ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–∫–µ—Ç—ã:', existingBuckets);
    
    for (const bucket of requiredBuckets) {
      if (existingBuckets.includes(bucket)) {
        console.log(`‚úÖ –ë–∞–∫–µ—Ç "${bucket}" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
      } else {
        console.log(`‚ùå –ë–∞–∫–µ—Ç "${bucket}" –ù–ï –Ω–∞–π–¥–µ–Ω`);
      }
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã...');
    
    const { data: tableInfo, error: tableError } = await supabase
      .from('accreditation_applications')
      .select('documents_bucket, certificates_bucket, images_bucket')
      .limit(1);

    if (tableError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞–±–ª–∏—Ü–µ:', tableError);
    } else {
      console.log('‚úÖ –ù–æ–≤—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ:', Object.keys(tableInfo[0] || {}));
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞—è–≤–æ–∫...');
    
    const { data: applications, error: appsError } = await supabase
      .from('accreditation_applications')
      .select('id, supplier_name, documents_bucket, certificates_bucket, images_bucket, legal_documents_count, certificates_count, products_count')
      .order('created_at', { ascending: false })
      .limit(5);

    if (appsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫:', appsError);
    } else {
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞—è–≤–æ–∫: ${applications.length}`);
      
      applications.forEach((app, index) => {
        console.log(`\nüìÑ –ó–∞—è–≤–∫–∞ ${index + 1}:`);
        console.log(`   ID: ${app.id}`);
        console.log(`   –ü–æ—Å—Ç–∞–≤—â–∏–∫: ${app.supplier_name}`);
        console.log(`   –ë–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${app.documents_bucket || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
        console.log(`   –ë–∞–∫–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: ${app.certificates_bucket || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
        console.log(`   –ë–∞–∫–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${app.images_bucket || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
        console.log(`   –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${app.legal_documents_count || 0}`);
        console.log(`   –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: ${app.certificates_count || 0}`);
        console.log(`   –¢–æ–≤–∞—Ä–æ–≤: ${app.products_count || 0}`);
      });
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –≤ –Ω–æ–≤—ã–µ –±–∞–∫–µ—Ç—ã
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ –Ω–æ–≤—ã–µ –±–∞–∫–µ—Ç—ã...');
    
    const testApplicationId = 'test-new-architecture-' + Date.now();
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testImageContent = Buffer.from('Test image content');
    const testCertContent = Buffer.from('Test certificate content');
    const testDocContent = Buffer.from('Test legal document content');

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ project-images
    const imagePath = `accreditation/${testApplicationId}/products/0/images/test_image.png`;
    const { data: imageUpload, error: imageError } = await supabase.storage
      .from('project-images')
      .upload(imagePath, testImageContent, {
        contentType: 'image/png',
        cacheControl: '3600',
        upsert: false
      });

    if (imageError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', imageError);
    } else {
      console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ project-images');
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ accreditation-certificates
    const certPath = `accreditation/${testApplicationId}/products/0/certificates/test_certificate.pdf`;
    const { data: certUpload, error: certError } = await supabase.storage
      .from('accreditation-certificates')
      .upload(certPath, testCertContent, {
        contentType: 'application/pdf',
        cacheControl: '3600',
        upsert: false
      });

    if (certError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:', certError);
    } else {
      console.log('‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ accreditation-certificates');
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ accreditation-documents
    const docPath = `accreditation/${testApplicationId}/legal/test_document.pdf`;
    const { data: docUpload, error: docError } = await supabase.storage
      .from('accreditation-documents')
      .upload(docPath, testDocContent, {
        contentType: 'application/pdf',
        cacheControl: '3600',
        upsert: false
      });

    if (docError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', docError);
    } else {
      console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ accreditation-documents');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ URL
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö URL...');
    
    if (!imageError) {
      const { data: imageUrl } = supabase.storage
        .from('project-images')
        .getPublicUrl(imagePath);
      console.log('üîó URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', imageUrl.publicUrl);
    }

    if (!certError) {
      const { data: certUrl } = supabase.storage
        .from('accreditation-certificates')
        .getPublicUrl(certPath);
      console.log('üîó URL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:', certUrl.publicUrl);
    }

    if (!docError) {
      const { data: docUrl } = supabase.storage
        .from('accreditation-documents')
        .getPublicUrl(docPath);
      console.log('üîó URL –¥–æ–∫—É–º–µ–Ω—Ç–∞:', docUrl.publicUrl);
    }

    // 6. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    console.log('\n6Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...');
    
    if (!imageError) {
      await supabase.storage.from('project-images').remove([imagePath]);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
    }
    
    if (!certError) {
      await supabase.storage.from('accreditation-certificates').remove([certPath]);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É–¥–∞–ª–µ–Ω');
    }
    
    if (!docError) {
      await supabase.storage.from('accreditation-documents').remove([docPath]);
      console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω');
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testNewStorageArchitecture(); 