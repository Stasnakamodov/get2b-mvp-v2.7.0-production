import { NextRequest, NextResponse } from "next/server";
import * as XLSX from 'xlsx';

export async function POST(request: NextRequest) {
  try {
    console.log("üìä API /parse-proforma –≤—ã–∑–≤–∞–Ω");

    const formData = await request.formData();
    const file = formData.get('file') as File;

    if (!file) {
      return NextResponse.json(
        { error: "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" },
        { status: 400 }
      );
    }

    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ ArrayBuffer
    const arrayBuffer = await file.arrayBuffer();
    const workbook = XLSX.read(arrayBuffer, { type: 'array' });

    // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
    const firstSheetName = workbook.SheetNames[0];
    const worksheet = workbook.Sheets[firstSheetName];

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
    const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ—Ñ–æ—Ä–º—ã
    const analysis = {
      fileName: file.name,
      sheetName: firstSheetName,
      totalRows: jsonData.length,
      data: jsonData,
      parsed: {
        supplier: '',
        items: [] as any[],
        total: '',
        paymentInfo: [] as string[]
      }
    };

    // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ - –∏—â–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è
    for (let i = 0; i < jsonData.length; i++) {
      const row = jsonData[i] as any[];
      if (!row || row.length === 0) continue;

      const firstCell = String(row[0] || '').toLowerCase();

      // –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ
      if (firstCell.includes('supplier') || firstCell.includes('–ø–æ—Å—Ç–∞–≤—â–∏–∫') || firstCell.includes('company')) {
        analysis.parsed.supplier = row.join(' ').trim();
      }

      // –ò—â–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É
      if (firstCell.includes('total') || firstCell.includes('–∏—Ç–æ–≥–æ') || firstCell.includes('—Å—É–º–º–∞')) {
        analysis.parsed.total = row.join(' ').trim();
      }

      // –ò—â–µ–º —Ç–æ–≤–∞—Ä—ã (—Å—Ç—Ä–æ–∫–∏ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏)
      if (row.some(cell => typeof cell === 'number' && cell > 0)) {
        analysis.parsed.items.push(row);
      }

      // –ò—â–µ–º –ø–ª–∞—Ç–µ–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      if (firstCell.includes('bank') || firstCell.includes('–±–∞–Ω–∫') || firstCell.includes('account') || firstCell.includes('—Å—á–µ—Ç') || firstCell.includes('iban') || firstCell.includes('swift')) {
        analysis.parsed.paymentInfo.push(row.join(' ').trim());
      }
    }

    console.log("‚úÖ –§–∞–π–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:", {
      name: file.name,
      rows: jsonData.length,
      supplier: analysis.parsed.supplier,
      itemsCount: analysis.parsed.items.length
    });

    return NextResponse.json({
      success: true,
      analysis
    });

  } catch (error) {
    console.error('‚ùå [API] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø—Ä–æ—Ñ–æ—Ä–º—ã:', error);
    return NextResponse.json(
      {
        error: '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø—Ä–æ—Ñ–æ—Ä–º—ã',
        details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      },
      { status: 500 }
    );
  }
}