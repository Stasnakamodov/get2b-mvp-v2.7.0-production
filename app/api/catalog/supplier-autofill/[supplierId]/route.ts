import { NextRequest, NextResponse } from 'next/server'
import { supabase } from '@/lib/supabaseClient'

// üéØ API ENDPOINT: –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è Steps 2,4,5
// GET /api/catalog/supplier-autofill/{supplierId}
export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ supplierId: string }> }
) {
  const startTime = Date.now()
  
  try {
    const resolvedParams = await params
    const supplierId = resolvedParams.supplierId
    console.log(`üîÆ [API] –ó–∞–ø—Ä–æ—Å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: ${supplierId}`)

    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    const { searchParams } = new URL(request.url)
    const roomType = searchParams.get('room_type') || 'auto' // 'verified', 'user', 'auto'
    const includePhantomData = searchParams.get('include_phantom') === 'true'

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è RLS
    const authHeader = request.headers.get('authorization')
    let currentUserId = null
    
    if (authHeader) {
      try {
        const token = authHeader.replace('Bearer ', '')
        const { data: { user } } = await supabase.auth.getUser(token)
        currentUserId = user?.id
      } catch (error) {
        console.log('‚ö†Ô∏è [API] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–æ–∫–µ–Ω–∞')
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
    let supplierData = null
    let supplierType = roomType

    // 1. –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞—Ö
    if (roomType === 'auto' || roomType === 'verified') {
      const { data: verifiedSupplier, error: verifiedError } = await supabase
        .from('catalog_verified_suppliers')
        .select(`
          *,
          catalog_verified_products (
            id, name, description, price, currency, min_order, in_stock, images, sku
          )
        `)
        .eq('id', supplierId)
        .eq('is_active', true)
        .single()

      if (!verifiedError && verifiedSupplier) {
        supplierData = verifiedSupplier
        supplierType = 'verified'
      }
    }

    // 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ verified, –∏—â–µ–º –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö
    if (!supplierData && (roomType === 'auto' || roomType === 'user')) {
      const { data: userSupplier, error: userError } = await supabase
        .from('catalog_user_suppliers')
        .select(`
          *,
          catalog_user_products (
            id, name, description, price, currency, min_order, in_stock, images, sku
          )
        `)
        .eq('id', supplierId)
        .eq('user_id', currentUserId)
        .eq('is_active', true)
        .single()

      if (!userError && userSupplier) {
        supplierData = userSupplier
        supplierType = 'user'
      }
    }

    if (!supplierData) {
      console.log(`‚ùå [API] –ü–æ—Å—Ç–∞–≤—â–∏–∫ ${supplierId} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`)
      return NextResponse.json({
        success: false,
        error: '–ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
        supplier_id: supplierId
      }, { status: 404 })
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤)
    let phantomData = null
    if (includePhantomData && currentUserId) {
      phantomData = await getPhantomSupplierData(supplierData.name, currentUserId)
    }

    // 4. –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    const autofillData = {
      // –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–¥–ª—è Step1 –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
      supplier_info: {
        id: supplierData.id,
        name: supplierData.name,
        company_name: supplierData.company_name,
        category: supplierData.category,
        country: supplierData.country,
        city: supplierData.city,
        description: supplierData.description,
        logo_url: supplierData.logo_url,
        contact_email: supplierData.contact_email,
        contact_phone: supplierData.contact_phone,
        website: supplierData.website,
        contact_person: supplierData.contact_person,
        room_type: supplierType,
        room_icon: supplierType === 'verified' ? 'üß°' : 'üîµ'
      },

      // –î–∞–Ω–Ω—ã–µ –¥–ª—è Step2 (—Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)
      step2_data: {
        products: supplierType === 'verified' 
          ? supplierData.catalog_verified_products || []
          : supplierData.catalog_user_products || [],
        supplier_name: supplierData.name // –î–ª—è project_specifications.supplier_name
      },

      // –î–∞–Ω–Ω—ã–µ –¥–ª—è Step4 (—Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã)
      step4_data: {
        payment_method: phantomData?.payment_method || getDefaultPaymentMethod(supplierData),
        payment_methods_available: supplierData.payment_methods || ['bank-transfer'],
        has_phantom_data: !!phantomData?.payment_method
      },

      // –î–∞–Ω–Ω—ã–µ –¥–ª—è Step5 (—Ä–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)
      step5_data: {
        requisites: phantomData?.requisites || getDefaultRequisites(supplierData),
        has_phantom_data: !!phantomData?.requisites,
        phantom_projects_count: phantomData?.projects_used || 0
      },

      // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      metadata: {
        supplier_type: supplierType,
        has_products: (supplierType === 'verified' 
          ? supplierData.catalog_verified_products?.length 
          : supplierData.catalog_user_products?.length) > 0,
        has_phantom_data: !!phantomData,
        phantom_data_confidence: phantomData?.confidence_score || 0
      }
    }

    const executionTime = Date.now() - startTime
    console.log(`‚úÖ [API] –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–æ –∑–∞ ${executionTime}–º—Å:`, {
      supplier_name: supplierData.name,
      supplier_type: supplierType,
      products_count: autofillData.step2_data.products.length,
      has_phantom_data: autofillData.metadata.has_phantom_data
    })

    return NextResponse.json({
      success: true,
      supplier_id: supplierId,
      autofill_data: autofillData,
      summary: {
        supplier_name: supplierData.name,
        supplier_type: supplierType,
        products_count: autofillData.step2_data.products.length,
        has_phantom_data: autofillData.metadata.has_phantom_data,
        execution_time_ms: executionTime
      }
    })

  } catch (error) {
    console.error('‚ùå [API] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', error)
    
    return NextResponse.json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      supplier_id: 'unknown'
    }, { status: 500 })
  }
}

// üîÆ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
async function getPhantomSupplierData(supplierName: string, userId: string) {
  try {
    console.log(`üîç [PHANTOM] –ü–æ–∏—Å–∫ —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: ${supplierName}`)

    // 1. –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å —ç—Ç–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö
    const { data: specifications, error: specsError } = await supabase
      .from('project_specifications')
      .select('project_id, supplier_name')
      .ilike('supplier_name', `%${supplierName}%`)
      .eq('user_id', userId)

    if (specsError || !specifications?.length) {
      console.log(`‚ÑπÔ∏è [PHANTOM] –ü—Ä–æ–µ–∫—Ç—ã —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º "${supplierName}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`)
      return null
    }

    const projectIds = [...new Set(specifications.map(s => s.project_id))]
    console.log(`üîç [PHANTOM] –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º: ${projectIds.length}`)

    // 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
    const { data: projects, error: projectsError } = await supabase
      .from('projects')
      .select(`
        id, name, status, payment_method, amount, currency, created_at,
        project_requisites (*)
      `)
      .in('id', projectIds)
      .eq('user_id', userId)

    if (projectsError || !projects?.length) {
      console.log(`‚ÑπÔ∏è [PHANTOM] –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã`)
      return null
    }

    // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    const completedProjects = projects.filter(p => p.status === 'completed')
    const paymentMethods = projects.map(p => p.payment_method).filter(Boolean)
    const allRequisites = projects.flatMap(p => p.project_requisites || [])

    if (completedProjects.length === 0) {
      console.log(`‚ÑπÔ∏è [PHANTOM] –ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º "${supplierName}"`)
      return null
    }

    // 4. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
    const paymentMethodCounts = paymentMethods.reduce((acc, method) => {
      acc[method] = (acc[method] || 0) + 1
      return acc
    }, {} as Record<string, number>)

    const mostUsedPaymentMethod = Object.entries(paymentMethodCounts)
      .sort(([,a], [,b]) => (b as number) - (a as number))[0]?.[0]

    // 5. –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    const relevantRequisites = allRequisites
      .filter(r => r.type === mostUsedPaymentMethod)
      .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())[0]

    const phantomData = {
      payment_method: mostUsedPaymentMethod,
      requisites: relevantRequisites?.data,
      projects_used: completedProjects.length,
      confidence_score: Math.min(completedProjects.length / 3, 1), // –ú–∞–∫—Å–∏–º—É–º 1.0 –ø—Ä–∏ 3+ –ø—Ä–æ–µ–∫—Ç–∞—Ö
      last_used: completedProjects[0]?.created_at
    }

    console.log(`‚úÖ [PHANTOM] –§–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã:`, {
      payment_method: phantomData.payment_method,
      has_requisites: !!phantomData.requisites,
      projects_count: phantomData.projects_used,
      confidence: phantomData.confidence_score
    })

    return phantomData

  } catch (error) {
    console.error('‚ùå [PHANTOM] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error)
    return null
  }
}

// üìÑ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function getDefaultPaymentMethod(supplier: any): string {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  if (supplier.payment_methods && Array.isArray(supplier.payment_methods)) {
    return supplier.payment_methods[0] || 'bank-transfer'
  }
  return 'bank-transfer'
}

// üí∞ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function getDefaultRequisites(supplier: any) {
  // –§–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  return {
    company_name: supplier.company_name || supplier.name,
    contact_email: supplier.contact_email,
    contact_phone: supplier.contact_phone,
    website: supplier.website,
    contact_person: supplier.contact_person,
    country: supplier.country,
    city: supplier.city,
    // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø–æ–ª—è –±—É–¥—É—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø—É—Å—Ç—ã–º–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    bank_name: '',
    account_number: '',
    swift: '',
    recipient_name: supplier.company_name || supplier.name
  }
}