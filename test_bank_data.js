// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
const testText = `–ë–ê–ù–ö
–ë–ò–ö
044525593
–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞
–ê–û "–ê–õ–¨–§–ê-–ë–ê–ù–ö"
–ò–ù–ù / –ö–ü–ü –±–∞–Ω–∫–∞
7728168971 / 770801001
–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç
40702810802520005607
–ö–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π —Å—á–µ—Ç
30101810200000000593`;

console.log("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...");

// –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ë–ò–ö
const bikMatch = testText.match(/–ë–ò–ö[^0-9]*(\d{9})/i);
console.log("–¢–µ—Å—Ç 1 - –ë–ò–ö:", bikMatch ? bikMatch[1] : "–ù–µ –Ω–∞–π–¥–µ–Ω");

// –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞
const accountMatch = testText.match(/–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç\s*\n\s*(\d{20})/i);
console.log("–¢–µ—Å—Ç 2 - –†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç:", accountMatch ? accountMatch[1] : "–ù–µ –Ω–∞–π–¥–µ–Ω");

// –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
const lines = testText.split('\n');
for (let i = 0; i < lines.length; i++) {
  const line = lines[i].trim();
  
  // –ü–æ–∏—Å–∫ –ë–ò–ö
  if (line.includes('–ë–ò–ö')) {
    if (i + 1 < lines.length) {
      const nextLine = lines[i + 1].trim();
      const bikMatch = nextLine.match(/(\d{9})/);
      if (bikMatch) {
        console.log("–¢–µ—Å—Ç 3 - –ë–ò–ö –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É:", bikMatch[1]);
        break;
      }
    }
  }
  
  // –ü–æ–∏—Å–∫ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞
  if (line.includes('–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç')) {
    if (i + 1 < lines.length) {
      const nextLine = lines[i + 1].trim();
      const accountMatch = nextLine.match(/(\d{20})/);
      if (accountMatch) {
        console.log("–¢–µ—Å—Ç 3 - –†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É:", accountMatch[1]);
        break;
      }
    }
  }
}

console.log("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"); 