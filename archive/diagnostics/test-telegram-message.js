// –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —á–µ—Ä–µ–∑ Telegram webhook

const testTelegramMessage = async () => {
  // –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å reply
  const telegramUpdate = {
    message: {
      message_id: 123,
      from: {
        id: 123456789,
        first_name: "–ú–µ–Ω–µ–¥–∂–µ—Ä –¢–µ—Å—Ç",
        username: "manager_test"
      },
      chat: {
        id: 123456789,
        type: "private"
      },
      text: "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å! –ú—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.",
      reply_to_message: {
        text: "üÜî –ü—Ä–æ–µ–∫—Ç: b7f63bf3-3cfa-4b2c-8a42-ee7b19c53c2d\nüìù –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞"
      }
    }
  };

  try {
    console.log('ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
    
    const response = await fetch('http://localhost:3000/api/telegram-chat-webhook', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(telegramUpdate)
    });

    const result = await response.json();
    
    console.log('üì° –°—Ç–∞—Ç—É—Å:', response.status);
    console.log('üì¶ –û—Ç–≤–µ—Ç:', JSON.stringify(result, null, 2));
    
    if (response.ok) {
      console.log('‚úÖ Telegram webhook —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞:', result);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
};

testTelegramMessage(); 