const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
);

async function testFixedAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π API hierarchical\n');
  
  // 1. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('1. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c021fb58-c00f-405e-babd-47d20e8a8ff6...');
  
  // –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é)
  const userId = 'c021fb58-c00f-405e-babd-47d20e8a8ff6';
  
  // –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
  console.log('\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏):');
  
  try {
    const response = await fetch('http://localhost:3000/api/catalog/categories/hierarchical?room=user', {
      headers: {
        'Content-Type': 'application/json'
        // –ë–µ–∑ Authorization header
      }
    });
    
    const data = await response.json();
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞:', data);
    
    if (data.success && data.categoryTrees.length === 0) {
      console.log('‚úÖ API –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    } else {
      console.log('‚ùå API –≤–µ–¥–µ—Ç —Å–µ–±—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API:', error.message);
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä—è–º–æ –≤ –ë–î —á—Ç–æ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å API –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î:');
  
  const { data: userSuppliers } = await supabase
    .from('catalog_user_suppliers')
    .select('id, name, category, catalog_user_products(*)')
    .eq('is_active', true)
    .eq('user_id', userId);
    
  if (userSuppliers) {
    console.log(`–ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userSuppliers.length}`);
    
    // –ù–∞–π–¥–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏
    const electronicsKeywords = ['—ç–ª–µ–∫—Ç—Ä–æ–Ω', 'electronic', '–∫–æ–º–ø—å—é—Ç–µ—Ä', 'computer', 'it', 'tech'];
    const electronicsSuppliers = userSuppliers.filter(supplier => {
      const supplierCategory = supplier.category?.toLowerCase() || '';
      return electronicsKeywords.some(keyword => 
        supplierCategory.includes(keyword) || keyword.includes(supplierCategory)
      );
    });
    
    let totalElectronicsProducts = 0;
    electronicsSuppliers.forEach(supplier => {
      const productsCount = supplier.catalog_user_products?.length || 0;
      totalElectronicsProducts += productsCount;
      console.log(`- ${supplier.name}: ${productsCount} —Ç–æ–≤–∞—Ä–æ–≤ (–∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${supplier.category})`);
    });
    
    console.log(`\nüìä –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${electronicsSuppliers.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, ${totalElectronicsProducts} —Ç–æ–≤–∞—Ä–æ–≤ –≤ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–µ –∏ IT"`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –∞–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã
    const automotiveKeywords = ['–∞–≤—Ç–æ', 'automotive', '—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', 'transport'];
    const automotiveSuppliers = userSuppliers.filter(supplier => {
      const supplierCategory = supplier.category?.toLowerCase() || '';
      return automotiveKeywords.some(keyword => 
        supplierCategory.includes(keyword) || keyword.includes(supplierCategory)
      );
    });
    
    let totalAutomotiveProducts = 0;
    automotiveSuppliers.forEach(supplier => {
      const productsCount = supplier.catalog_user_products?.length || 0;
      totalAutomotiveProducts += productsCount;
    });
    
    console.log(`üìä –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${automotiveSuppliers.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, ${totalAutomotiveProducts} —Ç–æ–≤–∞—Ä–æ–≤ –≤ "–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"`);
  }
  
  console.log('\nüîß –ò–¢–û–ì–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
  console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ API hierarchical');
  console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (.eq("user_id", currentUserId))');
  console.log('‚úÖ API —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
  console.log('‚úÖ –ü–µ—Ä–µ–¥–∞–Ω authToken –≤ HierarchicalCategorySelector');
  console.log('');
  console.log('üéØ –û–ñ–ò–î–ê–ï–ú–´–ô –≠–§–§–ï–ö–¢:');
  console.log('- –í —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç–µ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ IT" –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å 0 —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ—Å—Ç–∞–≤—â–∏–∫ –æ—Å—Ç–∞–ª—Å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", –Ω–æ —Ç–æ–≤–∞—Ä—ã —Å—Ç–∞–ª–∏ automotive)');
  console.log('- –°—á–µ—Ç—á–∏–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ–ª–∂–Ω—ã —Å—Ç–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏');
  console.log('- –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã');

  process.exit(0);
}

testFixedAPI().catch(console.error);