"use client"

import React from "react"
import dynamic from "next/dynamic"
import { useState, useEffect } from "react"
import Link from "next/link"
import {
  Building2,
  FileText,
  DollarSign,
  FileCheck,
  ArrowRightLeft,
  Truck,
  CheckCircle,
  Clock,
  ChevronRight,
  Plus,
  Trash2,
  XCircle,
  AlertCircle,
} from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { motion } from "framer-motion"
import { supabase } from "@/lib/supabaseClient"
import ProjectTimeline from "@/components/ui/ProjectTimeline"
import { useDeleteTemplate } from "./create-project/hooks/useDeleteTemplate"
import { useRouter } from "next/navigation"
import { useProjectTemplates } from "./create-project/hooks/useSaveTemplate"

// –¢–∏–ø—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
interface Project {
  id: string
  name: string
  company_data?: {
    name: string
    legalName?: string
    inn?: string
    kpp?: string
    ogrn?: string
    email?: string
    // ... –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
  }
  amount: number
  currency?: string
  created_at: string
  status: string
  current_step: number
  max_step_reached?: number
  receipts?: string
  user_id: string
  // ... –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –∏–∑ –±–∞–∑—ã
}

// –≠—Ç–∞–ø—ã –ø—Ä–æ–µ–∫—Ç–∞
const projectSteps = [
  { id: 1, title: "–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞", description: "–í—ã–±–æ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏", icon: Building2 },
  { id: 2, title: "–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è", description: "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏", icon: FileText },
  { id: 3, title: "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞", description: "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞", icon: DollarSign },
  { id: 4, title: "–ú–µ—Ç–æ–¥", description: "–í—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞", icon: FileCheck },
  { id: 5, title: "–†–µ–∫–≤–∏–∑–∏—Ç—ã", description: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã", icon: ArrowRightLeft },
  { id: 6, title: "–ü–æ–ª—É—á–µ–Ω–∏–µ", description: "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤", icon: Truck },
  { id: 7, title: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", description: "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏", icon: CheckCircle },
]

function getProjectStatusLabel(step: number, status: string, receipts?: string) {
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è 6 —à–∞–≥–∞ (–ø–æ–ª—É—á–µ–Ω–∏–µ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞)
  if (step === 6) {
    if (status === 'waiting_manager_receipt') {
      return {
        color: '#facc15', // –∂—ë–ª—Ç—ã–π
        text: '–û–∂–∏–¥–∞–Ω–∏–µ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
        Icon: Clock,
      };
    } else if (status === 'in_work') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      let hasManagerReceipt = false;
      if (receipts) {
        try {
          const receiptsData = JSON.parse(receipts);
          hasManagerReceipt = !!receiptsData.manager_receipt;
        } catch {
          // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç
          hasManagerReceipt = !!receipts;
        }
      }
      
      if (hasManagerReceipt) {
        return {
          color: '#22c55e', // –∑–µ–ª—ë–Ω—ã–π
          text: '–ß–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≥–æ—Ç–æ–≤',
          Icon: CheckCircle,
        };
      } else {
        return {
          color: '#facc15', // –∂—ë–ª—Ç—ã–π
          text: '–û–∂–∏–¥–∞–Ω–∏–µ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
          Icon: Clock,
        };
      }
    }
  }

  let color = '#6b7280';
  let text = '–í —Ä–∞–±–æ—Ç–µ';
  let Icon = FileText;

  if ((status === 'completed' || step === 7) && status !== 'waiting_client_confirmation') {
    color = '#22c55e'; text = '–ó–∞–≤–µ—Ä—à—ë–Ω'; Icon = CheckCircle;
  } else if (status === 'waiting_client_confirmation' && step === 7) {
    color = '#3b82f6'; text = '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞'; Icon = Clock;
  } else if (step === 3) {
    if (status === 'waiting_receipt') {
      if (!receipts) {
        color = '#3b82f6'; text = '–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞'; Icon = Clock;
      } else {
        color = '#3b82f6'; text = '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ–∫–∞'; Icon = Clock;
      }
    } else if (status === 'receipt_rejected') {
      color = '#ef4444'; text = '–ß–µ–∫ –æ—Ç–∫–ª–æ–Ω—ë–Ω'; Icon = XCircle;
    } else if (status === 'receipt_approved') {
      color = '#22c55e'; text = '–ß–µ–∫ –æ–¥–æ–±—Ä–µ–Ω'; Icon = CheckCircle;
    } else {
      color = '#6b7280'; text = '–í —Ä–∞–±–æ—Ç–µ'; Icon = DollarSign;
    }
  } else if (step === 2) {
    if (status === 'waiting_approval') {
      color = '#3b82f6'; text = '–û–∂–∏–¥–∞–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è'; Icon = Clock;
    } else if (status === 'rejected') {
      color = '#ef4444'; text = '–û—Ç–∫–ª–æ–Ω—ë–Ω'; Icon = XCircle;
    } else if (status === 'in_progress') {
      color = '#6b7280'; text = '–í —Ä–∞–±–æ—Ç–µ'; Icon = FileText;
    } else {
      color = '#6b7280'; text = '–í —Ä–∞–±–æ—Ç–µ'; Icon = FileText;
    }
  } else if (step === 5) {
    if (status === 'filling_requisites' || status === 'in_progress') {
      color = '#3b82f6'; text = '–í–≤–æ–¥ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤'; Icon = FileCheck;
    }
  } else if (status === 'receipt_approved') {
    color = '#f59e42'; text = '–û–∂–∏–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞'; Icon = Truck;
  } else if (status === 'waiting' || status === 'pending') {
    color = '#facc15'; text = '–û–∂–∏–¥–∞–µ—Ç'; Icon = Clock;
  } else if (status === 'waiting_approval') {
    color = '#3b82f6'; text = '–û–∂–∏–¥–∞–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è'; Icon = Clock;
  } else if (status === 'rejected') {
    color = '#ef4444'; text = '–û—Ç–∫–ª–æ–Ω—ë–Ω'; Icon = XCircle;
  }
  return { color, text, Icon };
}

// --- –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —à–∞–≥ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ ---
function getCorrectStepForCard(project: any) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ current_step –∏–∑ –±–∞–∑—ã
  if (project.current_step) return project.current_step;
  return 1;
}

function DashboardPageContent() {
  const [isLoaded, setIsLoaded] = useState(false)
  const [projects, setProjects] = useState<Project[]>([])
  const { deleteTemplate, isDeleting, error: deleteError, success: deleteSuccess } = useDeleteTemplate()
  const { templates, loading: loadingTemplates, error: errorTemplates, fetchTemplates } = useProjectTemplates();
  const router = useRouter()
  const FINAL_STEP = 7; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
  const [templateRole, setTemplateRole] = useState<'client' | 'supplier'>('client');

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  const [debugInfo, setDebugInfo] = useState<{
    user: any;
    userLoaded: boolean;
    projectsLoaded: boolean;
    projectsError: string | null;
    templatesLoaded: boolean;
  }>({
    user: null,
    userLoaded: false,
    projectsLoaded: false,
    projectsError: null,
    templatesLoaded: false
  });

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∏–∑ Supabase
    const fetchProjects = async () => {
      try {
        const { data: { user }, error: userError } = await supabase.auth.getUser();
        setDebugInfo(prev => ({ ...prev, userLoaded: true, user }));
        
        if (userError) {
          console.error("‚ùå [DASHBOARD] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", userError.message);
          setDebugInfo(prev => ({ ...prev, projectsError: userError.message }));
          return;
        }
        if (!user) {
          console.log("‚ö†Ô∏è [DASHBOARD] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
          setDebugInfo(prev => ({ ...prev, projectsError: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }));
          return;
        }
        
        const { data, error } = await supabase
          .from("projects")
          .select("*")
          .eq("user_id", user.id)
          .order("created_at", { ascending: false });
          
        setDebugInfo(prev => ({ ...prev, projectsLoaded: true }));
          
        if (!error && data) {
          console.log("üîç [DASHBOARD] –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏–∑ –±–∞–∑—ã:", data);
          setProjects(data.map((p: any) => ({
            ...p,
            currentStep: p.current_step || 1,
          })));
          setDebugInfo(prev => ({ ...prev, projectsError: null }));
        } else if (error) {
          console.error("‚ùå [DASHBOARD] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:", error.message || error);
          setDebugInfo(prev => ({ ...prev, projectsError: error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' }));
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã UI –Ω–µ —Å–ª–æ–º–∞–ª—Å—è
          setProjects([]);
        }
      } catch (err) {
        console.error("‚ùå [DASHBOARD] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤:", err);
        setDebugInfo(prev => ({ ...prev, projectsError: err instanceof Error ? err.message : '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞' }));
        setProjects([]);
      }
    };
    
    fetchProjects();
    fetchTemplates(); // —à–∞–±–ª–æ–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    setIsLoaded(true);

    // --- Polling —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ ---
    const pollingInterval = setInterval(() => {
      fetchProjects();
      // fetchTemplates(); // –±–æ–ª—å—à–µ –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º —Ç—É—Ç
    }, 30000); // 30 —Å–µ–∫—É–Ω–¥, –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å
    return () => {
      clearInterval(pollingInterval);
    };
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞
  const handleDeleteTemplate = async (id: string) => {
    await deleteTemplate(id);
    await fetchTemplates();
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞
  const createProjectFromTemplate = async (templateId: string) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞
    console.log(`–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞ ${templateId}`)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
  const deleteProject = async (id: string) => {
    // –£–¥–∞–ª—è–µ–º –∏–∑ Supabase
    await supabase.from("projects").delete().eq("id", id);
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setProjects((prev) => prev.filter((project) => project.id !== id));
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –∏–∑ project_templates
  const handleDeleteProjectTemplate = async (id: string) => {
    await supabase.from("project_templates").delete().eq("id", id);
    await fetchTemplates();
  };

  // –í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2,
      },
    },
  }

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { 
        type: "spring" as const, 
        stiffness: 300, 
        damping: 24 
      },
    },
  }

  const stageIconVariants = {
    hidden: { scale: 0, opacity: 0 },
    visible: (custom: number) => ({
      scale: 1,
      opacity: 1,
      transition: {
        delay: custom * 0.1,
        type: "spring" as const,
        stiffness: 260,
        damping: 20,
      },
    }),
  }

  const stageLineVariants = {
    hidden: { scaleX: 0, originX: 0 },
    visible: {
      scaleX: 1,
      transition: {
        delay: 0.3,
        duration: 0.8,
        ease: "easeInOut" as const,
      },
    },
  }

  const buttonVariants = {
    hidden: { opacity: 0, scale: 0.8 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        delay: 0.6,
        type: "spring" as const,
        stiffness: 200,
        damping: 15,
      },
    },
    hover: {
      scale: 1.05,
      transition: { 
        type: "spring" as const, 
        stiffness: 400, 
        damping: 10 
      },
    },
    tap: { scale: 0.95 },
  }

  // –õ–æ–≥–∏–∫–∞: –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å 3 –ø—Ä–æ–µ–∫—Ç–∞ ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º, –¥–æ–±–∏–≤–∞—Ç—å –∑–∞–∫—Ä—ã—Ç—ã–º–∏
  const notClosedProjects = projects ? projects.filter((p) => p.status !== "completed") : [];
  const closedProjects = projects ? projects.filter((p) => p.status === "completed") : [];
  let visibleProjects = [];
  if (notClosedProjects.length >= 3) {
    visibleProjects = notClosedProjects.slice(0, 3);
  } else {
    visibleProjects = [
      ...notClosedProjects,
      ...closedProjects.slice(0, 3 - notClosedProjects.length)
    ];
  }
  const [showAll, setShowAll] = useState(false);
  const showButton = projects && projects.length > 3;
  const allVisible = showAll ? projects : visibleProjects;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç" —Å —É—á—ë—Ç–æ–º —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
  const handleCreateProjectClick = async () => {
    router.push(`/dashboard/create-project`); // –í–°–ï–ì–î–ê —á–∏—Å—Ç—ã–π URL
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ —Ä–æ–ª–∏
  const filteredTemplates = templates.filter((tpl: any) => tpl.role === templateRole);

  return (
    <div className="container mx-auto py-4">
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="flex justify-between items-center mb-8"
      >
        <h1 className="text-3xl font-bold text-foreground">–í–∞—à–∏ —Å–¥–µ–ª–∫–∏</h1>
        <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
          <Button onClick={handleCreateProjectClick} className="flex items-center gap-2 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 shadow-md hover:shadow-lg transition-all duration-300">
              <Plus size={16} />
              –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
            </Button>
        </motion.div>
      </motion.div>

      {/* –°–µ–∫—Ü–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
      <motion.div initial="hidden" animate="visible" variants={containerVariants} className="mb-12">
        <motion.div variants={itemVariants} className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-semibold text-foreground">–í–∞—à–∏ —Å–¥–µ–ª–∫–∏</h2>
          <motion.div whileHover="hover" whileTap="tap" variants={buttonVariants}>
            <Link href="/dashboard/active-projects">
              <Button variant="outline" className="flex items-center gap-1">
                –í—Å–µ —Å–¥–µ–ª–∫–∏
                <ChevronRight size={16} />
              </Button>
            </Link>
          </motion.div>
        </motion.div>

        <div className="space-y-8">
          {allVisible.length > 0 ? (
            allVisible.map((project, projectIndex) => {
              const step = getCorrectStepForCard(project);
              const { color, text, Icon } = getProjectStatusLabel(step, String(project.status), project.receipts);
              return (
                <motion.div key={project.id} variants={itemVariants} custom={projectIndex} layout>
                  <Card className="overflow-hidden bg-card border-border shadow-xl hover:shadow-2xl transition-all duration-300 relative">
                    <CardContent className="p-6">
                      <motion.div
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 0.1 * projectIndex, duration: 0.5 }}
                        className="flex justify-between items-start mb-4"
                      >
                        <div>
                          <h3 className="text-xl font-semibold text-foreground">{project.name}</h3>
                          <p className="text-muted-foreground">
                            {project.company_data?.name || '–ö–æ–º–ø–∞–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'} ‚Ä¢ {project.amount || '0'} {project.currency || 'USD'} ‚Ä¢ {new Date(project.created_at).toLocaleDateString('ru-RU')}
                          </p>
                        </div>
                        <div className="flex items-center gap-3">
                          {/* –õ–µ–π–±–ª —Å—Ç–∞—Ç—É—Å–∞ –∏ —ç—Ç–∞–ø–∞ */}
                          <span style={{
                            display: 'inline-flex', alignItems: 'center', gap: 6,
                            padding: '6px 14px', borderRadius: '16px', fontWeight: 'bold', color: '#fff', background: color, fontSize: 14
                          }}>
                            <Icon size={18} style={{ marginRight: 6 }} />
                            {text} {step ? `‚Ä¢ –®–∞–≥ ${step}` : ''}
                          </span>
                          {/* –ö–æ—Ä–∑–∏–Ω–∞ */}
                          <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}>
                            <Button variant="destructive" size="icon" className="h-8 w-8" onClick={() => deleteProject(project.id)}>
                              <Trash2 size={16} />
                            </Button>
                          </motion.div>
                        </div>
                      </motion.div>

                      {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ç–∞–ø–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ */}
                      <div className="relative mt-8 mb-6">
                        <ProjectTimeline steps={projectSteps} currentStep={step} maxStepReached={step} />
                      </div>

                      <motion.div
                        className="flex justify-end gap-4 mt-6"
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 1.2 + 0.1 * projectIndex, duration: 0.5 }}
                      >
                        <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                          <Link href={`/dashboard/project/${project.id}`}>
                                        <Button variant="outline" className="border-border hover:border-border/80">
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ <ChevronRight size={16} className="ml-1" />
            </Button>
                          </Link>
                        </motion.div>
                        <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                          <Link
                            href={`/dashboard/create-project?step=${step}&projectId=${project.id}`}
                          >
                            <Button className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700">
                              –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
                            </Button>
                          </Link>
                        </motion.div>
                      </motion.div>
                    </CardContent>
                  </Card>
                </motion.div>
              )
            })
          ) : (
            <Card className="overflow-hidden bg-card border-border shadow-xl">
              <CardContent className="p-6 text-center">
                <p className="text-muted-foreground py-8">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</p>
                <Link href="/dashboard/create-project">
                  <Button className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700">
                    <Plus size={16} className="mr-2" />
                    –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç
                  </Button>
                </Link>
              </CardContent>
            </Card>
          )}
          {showButton && !showAll && (
            <div className="flex justify-center mt-4">
              <Button onClick={() => setShowAll(true)}>
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
              </Button>
            </div>
          )}
        </div>
      </motion.div>

      {/* –°–µ–∫—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
      <motion.div initial="hidden" animate="visible" variants={containerVariants} className="mb-12">
        <motion.div variants={itemVariants} className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-semibold text-foreground">–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–µ–∫—Ç–æ–≤</h2>
          <div className="flex gap-2">
            <Button
              variant={templateRole === 'client' ? 'default' : 'outline'}
              onClick={() => setTemplateRole('client')}
            >
              –ö–ª–∏–µ–Ω—Ç—ã
            </Button>
            <Button
              variant={templateRole === 'supplier' ? 'default' : 'outline'}
              onClick={() => setTemplateRole('supplier')}
            >
              –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏
            </Button>
            <motion.div whileHover="hover" whileTap="tap" variants={buttonVariants}>
              <Button 
                variant="outline" 
                className="flex items-center gap-1"
                onClick={() => router.push('/dashboard/create-project?mode=template&role=client')}
              >
                <Plus size={16} />
                –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω
              </Button>
            </motion.div>
          </div>
        </motion.div>

        <motion.div variants={containerVariants} className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {loadingTemplates && !isLoaded ? (
            <div className="col-span-full text-center text-muted-foreground py-8">–ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...</div>
          ) : errorTemplates ? (
            <div className="col-span-full text-center text-red-500 py-8">–û—à–∏–±–∫–∞: {errorTemplates}</div>
          ) : filteredTemplates && filteredTemplates.length > 0 ? (
            filteredTemplates.map((template: any, index: number) => (
              <motion.div
                key={template.id}
                variants={itemVariants}
                custom={index}
                whileHover={{ y: -5, transition: { duration: 0.2 } }}
              >
                <Card className="overflow-hidden h-full bg-card border-border shadow-lg hover:shadow-xl transition-all duration-300">
                  <CardContent className="p-6 h-full flex flex-col">
                    <motion.h3
                      className="text-lg font-semibold mb-2 text-foreground"
                      initial={{ opacity: 0, x: -20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: 0.2 + index * 0.1 }}
                    >
                      {template.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}
                    </motion.h3>
                    <motion.p
                      className="text-muted-foreground text-sm mb-6 flex-grow"
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      transition={{ delay: 0.3 + index * 0.1 }}
                    >
                      {template.description || ''}
                    </motion.p>
                    <motion.div
                      className="flex justify-between"
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: 0.4 + index * 0.1 }}
                    >
                      <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => handleDeleteProjectTemplate(template.id)}
                          disabled={isDeleting}
                          className="border-border hover:border-border/80"
                        >
                          {isDeleting ? "–£–¥–∞–ª—è–µ–º..." : "–£–¥–∞–ª–∏—Ç—å"}
                        </Button>
                      </motion.div>
                      <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                        <Button
                          size="sm"
                          onClick={() => {
                            window.location.href = `/dashboard/create-project?templateId=${template.id}`;
                          }}
                          className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700"
                        >
                          <Plus size={16} className="mr-1" />
                          –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                        </Button>
                      </motion.div>
                    </motion.div>
                  </CardContent>
                </Card>
              </motion.div>
            ))
          ) : (
            <Card className="col-span-full overflow-hidden bg-card border-border shadow-lg">
              <CardContent className="p-6 text-center">
                <p className="text-muted-foreground py-8">–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤</p>
                <Button 
                  className="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700"
                  onClick={() => router.push('/dashboard/create-project?mode=template&role=client')}
                >
                  <Plus size={16} className="mr-2" />
                  –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω
                </Button>
              </CardContent>
            </Card>
          )}
        </motion.div>
      </motion.div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –≤–∏–¥–∂–µ—Ç—ã */}
      <motion.div initial="hidden" animate="visible" variants={containerVariants}>
        <motion.h2 variants={itemVariants} className="text-2xl font-semibold mb-6 text-foreground">
          –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        </motion.h2>
        <motion.div variants={containerVariants} className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <motion.div variants={itemVariants} custom={0} whileHover={{ y: -5, transition: { duration: 0.2 } }}>
            <Card className="bg-card border-border shadow-lg hover:shadow-xl transition-all duration-300">
              <CardContent className="p-6">
                <h3 className="text-lg font-medium mb-2 text-foreground">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
                <motion.p
                  className="text-3xl font-bold text-blue-500"
                  initial={{ opacity: 0, scale: 0.5 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{
                    delay: 0.5,
                    type: "spring",
                    stiffness: 200,
                  }}
                >
                  {projects ? projects.filter((p) => p.status !== "completed" && p.status !== "rejected").length : 0}
                </motion.p>
              </CardContent>
            </Card>
          </motion.div>
          <motion.div variants={itemVariants} custom={1} whileHover={{ y: -5, transition: { duration: 0.2 } }}>
            <Card className="bg-card border-border shadow-lg hover:shadow-xl transition-all duration-300">
              <CardContent className="p-6">
                <h3 className="text-lg font-medium mb-2 text-foreground">–û–∂–∏–¥–∞—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
                <motion.p
                  className="text-3xl font-bold text-amber-500"
                  initial={{ opacity: 0, scale: 0.5 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{
                    delay: 0.6,
                    type: "spring",
                    stiffness: 200,
                  }}
                >
                  {/* –¢–æ–ª—å–∫–æ –ø—Ä–æ–µ–∫—Ç—ã, –≥–¥–µ –∫–ª–∏–µ–Ω—Ç –∂–¥—ë—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ Telegram */}
                  {projects ? projects.filter((p) => ["waiting_approval", "waiting_receipt"].includes(p.status)).length : 0}
                </motion.p>
              </CardContent>
            </Card>
          </motion.div>
          <motion.div variants={itemVariants} custom={2} whileHover={{ y: -5, transition: { duration: 0.2 } }}>
            <Card className="bg-card border-border shadow-lg hover:shadow-xl transition-all duration-300">
              <CardContent className="p-6">
                <h3 className="text-lg font-medium mb-2 text-foreground">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
                <motion.p
                  className="text-3xl font-bold text-green-500"
                  initial={{ opacity: 0, scale: 0.5 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{
                    delay: 0.7,
                    type: "spring",
                    stiffness: 200,
                  }}
                >
                  {projects ? projects.filter((p) => p.status === "completed").length : 0}
                </motion.p>
              </CardContent>
            </Card>
          </motion.div>
          <motion.div variants={itemVariants} custom={3} whileHover={{ y: -5, transition: { duration: 0.2 } }}>
            <Card className="bg-card border-border shadow-lg hover:shadow-xl transition-all duration-300">
              <CardContent className="p-6">
                <h3 className="text-lg font-medium mb-2 text-foreground">–û—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
                <motion.p
                  className="text-3xl font-bold text-red-500"
                  initial={{ opacity: 0, scale: 0.5 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{
                    delay: 0.8,
                    type: "spring",
                    stiffness: 200,
                  }}
                >
                  {/* –£—á–∏—Ç—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã */}
                  {projects ? projects.filter((p) => ["rejected", "receipt_rejected"].includes(p.status)).length : 0}
                </motion.p>
              </CardContent>
            </Card>
          </motion.div>
        </motion.div>
      </motion.div>

      {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–Ω–µ–ª—å */}
      <motion.div 
        initial="hidden" 
        animate="visible" 
        variants={containerVariants}
        className="mt-8"
      >
        <Card className="bg-red-900/20 border-red-800 shadow-lg">
          <CardContent className="p-6">
            <h3 className="text-lg font-semibold mb-4 text-red-400">üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 text-sm">
              <div>
                <div className="font-medium text-foreground">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</div>
                <div className={debugInfo.userLoaded ? 'text-green-400' : 'text-yellow-400'}>
                  {debugInfo.userLoaded ? (debugInfo.user ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω') : '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...'}
                </div>
                {debugInfo.user && (
                  <div className="text-xs text-muted-foreground mt-1">
                    ID: {debugInfo.user.id?.substring(0, 8)}...
                  </div>
                )}
              </div>
              
              <div>
                <div className="font-medium text-foreground">–ü—Ä–æ–µ–∫—Ç—ã:</div>
                <div className={debugInfo.projectsLoaded ? 'text-green-400' : 'text-yellow-400'}>
                  {debugInfo.projectsLoaded ? `‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ (${projects.length})` : '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...'}
                </div>
                {debugInfo.projectsError && (
                  <div className="text-xs text-red-400 mt-1">
                    –û—à–∏–±–∫–∞: {debugInfo.projectsError}
                  </div>
                )}
              </div>
              
              <div>
                <div className="font-medium text-foreground">–®–∞–±–ª–æ–Ω—ã:</div>
                <div className={!loadingTemplates ? 'text-green-400' : 'text-yellow-400'}>
                  {!loadingTemplates ? `‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ (${templates.length})` : '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...'}
                </div>
                {errorTemplates && (
                  <div className="text-xs text-red-400 mt-1">
                    –û—à–∏–±–∫–∞: {errorTemplates}
                  </div>
                )}
              </div>
              
              <div>
                <div className="font-medium text-foreground">Supabase:</div>
                <div className="text-green-400">‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω</div>
                <div className="text-xs text-muted-foreground mt-1">
                  –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                </div>
              </div>
            </div>
            
            {(debugInfo.projectsError || errorTemplates) && (
              <div className="mt-4 p-3 bg-red-900/30 border border-red-700 rounded">
                <div className="font-medium text-red-400 mb-2">–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º:</div>
                <ul className="text-xs text-muted-foreground space-y-1">
                  <li>‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏–ª–∏ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞</li>
                  <li>‚Ä¢ –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–∞–º projects –∏–ª–∏ project_templates</li>
                  <li>‚Ä¢ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º</li>
                  <li>‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Supabase</li>
                  <li>‚Ä¢ TypeScript –æ—à–∏–±–∫–∏ –≤ —Ç–∏–ø–∞—Ö –¥–∞–Ω–Ω—ã—Ö</li>
                </ul>
              </div>
            )}
          </CardContent>
        </Card>
      </motion.div>
    </div>
  )
}

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è SSR
const DashboardPage = dynamic(() => Promise.resolve(DashboardPageContent), {
  ssr: false,
  loading: () => (
    <div className="container mx-auto py-4">
      <div className="animate-pulse">
        <div className="h-8 bg-gray-300 rounded w-1/4 mb-6"></div>
        <div className="space-y-4">
          <div className="h-32 bg-gray-300 rounded"></div>
          <div className="h-32 bg-gray-300 rounded"></div>
          <div className="h-32 bg-gray-300 rounded"></div>
        </div>
      </div>
    </div>
  )
})

export default DashboardPage
