// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Ç–æ–≤–∞—Ä–∞–º–∏

const testImportAPI = async () => {
  console.log('üß™ [TEST] –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç API –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤');
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º Shenzhou International
  const testSupplierId = '55b015f5-5b83-4b88-9e7c-8a28ec70887e'; // ID –∏–∑ SQL —Ñ–∞–π–ª–∞
  const testURL = 'http://localhost:3002/api/catalog/import-supplier';
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage (–≤ –±—Ä–∞—É–∑–µ—Ä–µ)
  if (typeof window === 'undefined') {
    console.log('‚ùå [TEST] –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    return;
  }
  
  const token = localStorage.getItem('token') || localStorage.getItem('supabase.auth.token');
  console.log('üîê [TEST] –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', token ? '–î–ê' : '–ù–ï–¢');
  
  if (!token) {
    console.log('‚ùå [TEST] –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage');
    return;
  }
  
  try {
    console.log('üöÄ [TEST] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –∫ API...');
    
    const response = await fetch(testURL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify({
        verified_supplier_id: testSupplierId
      })
    });
    
    console.log('üì° [TEST] –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω. Status:', response.status);
    
    const responseText = await response.text();
    console.log('üìÑ [TEST] Raw response:', responseText);
    
    let responseData;
    try {
      responseData = JSON.parse(responseText);
      console.log('‚úÖ [TEST] Parsed response:', responseData);
    } catch (e) {
      console.log('‚ö†Ô∏è [TEST] –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON:', e.message);
      return;
    }
    
    if (response.ok) {
      console.log('üéâ [TEST] –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω!');
      console.log('üì¶ [TEST] –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', responseData.imported_products_count || 0);
    } else {
      console.log('‚ùå [TEST] –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', responseData.error);
    }
    
  } catch (error) {
    console.log('üí• [TEST] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
const checkSupplierData = async () => {
  console.log('üîç [CHECK] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ –±–∞–∑–µ...');
  
  const checkURL = 'http://localhost:3002/api/catalog/suppliers/verified';
  
  try {
    const response = await fetch(checkURL, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const data = await response.json();
    console.log('üìä [CHECK] –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', data?.length || 0);
    
    const shenzhou = data?.find(s => s.name?.includes('Shenzhou'));
    if (shenzhou) {
      console.log('‚úÖ [CHECK] Shenzhou International –Ω–∞–π–¥–µ–Ω:', shenzhou);
    } else {
      console.log('‚ùå [CHECK] Shenzhou International –ù–ï –Ω–∞–π–¥–µ–Ω');
    }
    
  } catch (error) {
    console.log('üí• [CHECK] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  window.testImportAPI = testImportAPI;
  window.checkSupplierData = checkSupplierData;
  console.log('‚úÖ –§—É–Ω–∫—Ü–∏–∏ testImportAPI() –∏ checkSupplierData() –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞');
}

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
checkSupplierData();