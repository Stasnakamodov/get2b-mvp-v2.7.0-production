import { NextRequest, NextResponse } from 'next/server'
import { sendTelegramDocumentClient } from '@/lib/telegram-client'

export async function POST(request: NextRequest) {
  try {
    console.log('üß™ [TEST] –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram')
    
    const { documentUrl, caption } = await request.json()
    
    console.log('üß™ [TEST] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', {
      documentUrl: documentUrl?.substring(0, 100) + '...',
      caption: caption?.substring(0, 100) + '...'
    })
    
    if (!documentUrl) {
      return NextResponse.json({ error: 'Document URL is required' }, { status: 400 })
    }
    
    console.log('üß™ [TEST] –í—ã–∑—ã–≤–∞–µ–º sendTelegramDocumentClient...')
    const result = await sendTelegramDocumentClient(documentUrl, caption)
    console.log('‚úÖ [TEST] sendTelegramDocumentClient –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ:', result)
    
    return NextResponse.json({
      success: true,
      message: '–¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
      result
    })
    
  } catch (error) {
    console.error('‚ùå [TEST] –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ:', error)
    return NextResponse.json({
      error: '–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏',
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 })
  }
} 