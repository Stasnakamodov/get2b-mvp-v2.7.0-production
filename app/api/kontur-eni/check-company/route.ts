import { NextRequest, NextResponse } from 'next/server';
import { konturEniService, CompanyCheckRequest } from '@/lib/services/KonturEniService';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { inn, ogrn, name, address } = body as CompanyCheckRequest;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!inn && !ogrn) {
      return NextResponse.json(
        { error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ò–ù–ù –∏–ª–∏ –û–ì–†–ù –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏' },
        { status: 400 }
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if (!process.env.KONTUR_ENI_API_KEY || !process.env.KONTUR_ENI_ORG_ID) {
      return NextResponse.json(
        { error: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ö–æ–Ω—Ç—É—Ä.–≠–Ω–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞' },
        { status: 500 }
      );
    }

    console.log('üîç [Kontur Eni] –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–ø–∞–Ω–∏–∏:', { inn, ogrn, name });

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–º–ø–∞–Ω–∏–∏
    const result = await konturEniService.checkCompany({
      inn,
      ogrn,
      name,
      address,
    });

    console.log('‚úÖ [Kontur Eni] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', {
      checkId: result.checkId,
      status: result.status,
      totalRisks: result.summary?.totalRisks,
      overallRisk: result.summary?.overallRisk,
    });

    return NextResponse.json({
      success: true,
      data: result,
    });

  } catch (error) {
    console.error('‚ùå [Kontur Eni] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏:', error);
    
    return NextResponse.json(
      { 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏',
        details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      },
      { status: 500 }
    );
  }
}

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const checkId = searchParams.get('checkId');

    if (!checkId) {
      return NextResponse.json(
        { error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å checkId –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤' },
        { status: 400 }
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if (!process.env.KONTUR_ENI_API_KEY || !process.env.KONTUR_ENI_ORG_ID) {
      return NextResponse.json(
        { error: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ö–æ–Ω—Ç—É—Ä.–≠–Ω–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞' },
        { status: 500 }
      );
    }

    console.log('üîç [Kontur Eni] –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:', checkId);

    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
    const result = await konturEniService.getCheckResults(checkId);

    console.log('‚úÖ [Kontur Eni] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', {
      checkId: result.checkId,
      status: result.status,
      totalRisks: result.summary?.totalRisks,
      overallRisk: result.summary?.overallRisk,
    });

    return NextResponse.json({
      success: true,
      data: result,
    });

  } catch (error) {
    console.error('‚ùå [Kontur Eni] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error);
    
    return NextResponse.json(
      { 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏',
        details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      },
      { status: 500 }
    );
  }
} 