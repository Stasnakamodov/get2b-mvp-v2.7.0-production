'use client'

import React, { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { Search, Plus, Star, MapPin, Phone, Mail, Globe, Building, Users, Package, Filter, CheckCircle, Clock, Zap, X, Upload, Image as ImageIcon, Edit, Trash2, Save, MessageCircle, Heart, ShoppingCart, Grid3X3, List, ArrowLeft } from 'lucide-react'

import { motion } from "framer-motion"
import { CATEGORY_CERTIFICATIONS } from '@/components/catalog-categories-and-certifications'
import { supabase } from '@/lib/supabaseClient'
import { AddSupplierModal } from './components/AddSupplierModal'
import InlineCategoryList from '@/components/catalog/InlineCategoryList'
import ProductGridByCategory from '@/components/catalog/ProductGridByCategory'
import type { CatalogCategory } from '@/lib/types'

export default function CatalogPage() {
  const router = useRouter()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  const [supabaseError, setSupabaseError] = useState<string | null>(null)
  const [supabaseConnected, setSupabaseConnected] = useState<boolean>(true)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const checkSupabaseConnection = async () => {
      try {
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        const { supabase } = await import('@/lib/supabaseClient')
        const { data, error } = await supabase.auth.getSession()
        
        if (error) {
          console.error('[SUPABASE CONNECTION ERROR]', error)
          setSupabaseError(error.message)
          setSupabaseConnected(false)
        } else {
          setSupabaseConnected(true)
          setSupabaseError(null)
        }
      } catch (err) {
        console.error('[SUPABASE IMPORT ERROR]', err)
        setSupabaseError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Supabase –∫–ª–∏–µ–Ω—Ç–∞')
        setSupabaseConnected(false)
      }
    }

    checkSupabaseConnection()
  }, [])

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ API
  const loadSuppliersFromAPI = async () => {
    console.log('üîÑ [DEBUG] –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ API...');
    setLoadingSuppliers(true)
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        console.error('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤');
        setRealSuppliers([]);
        return;
      }

      console.log('‚úÖ [DEBUG] –°–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞, –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API...');
      const response = await fetch('/api/catalog/user-suppliers', {
        headers: {
          'Authorization': `Bearer ${session.access_token}`,
        },
      });
      
      console.log('üì° [DEBUG] –û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);
      const data = await response.json();
      console.log('üìä [DEBUG] –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞ API:', data);
      
      if (data.suppliers) {
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', data.suppliers.length)
        console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', data.suppliers)
        
        // üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ö–ê–ñ–î–û–ì–û –ü–û–°–¢–ê–í–©–ò–ö–ê
        data.suppliers.forEach((supplier: any, index: number) => {
          console.log(`üîç –ü–æ—Å—Ç–∞–≤—â–∏–∫ ${index + 1} "${supplier.name}":`, {
            contact_email: supplier.contact_email,
            contact_phone: supplier.contact_phone, 
            contact_person: supplier.contact_person,
            website: supplier.website,
            min_order: supplier.min_order,
            response_time: supplier.response_time,
            employees: supplier.employees,
            established: supplier.established,
            description: supplier.description
          })
        })
        
        setRealSuppliers(data.suppliers)
      } else {
        console.warn('‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ API')
        console.log('üìä –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', data)
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        setRealSuppliers([])
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', error)
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      setRealSuppliers([])
    } finally {
      setLoadingSuppliers(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ API
  const loadVerifiedSuppliersFromAPI = async () => {
    setLoadingVerified(true)
    try {
      const response = await fetch('/api/catalog/verified-suppliers')
      const data = await response.json()
      
      if (data.suppliers) {
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', data.suppliers.length)
        console.log('üìä –î–∞–Ω–Ω—ã–µ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', data.suppliers)
        setVerifiedSuppliers(data.suppliers)
      } else {
        console.warn('‚ö†Ô∏è –ù–µ—Ç –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ API')
        console.log('üìä –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', data)
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        setVerifiedSuppliers([])
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', error)
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      setVerifiedSuppliers([])
    } finally {
      setLoadingVerified(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API
  const loadCategoriesFromAPI = async () => {
    try {
      setLoadingCategories(true)
      console.log('üîß [DEBUG] –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ API...')
      
      const response = await fetch('/api/catalog/categories')
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`)
      }
      
      const data = await response.json()
      console.log('üîß [DEBUG] –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', data)
      
      if (data.categories && Array.isArray(data.categories)) {
        setApiCategories(data.categories)
        console.log(`‚úÖ [API] –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`)
      } else {
        console.warn('‚ö†Ô∏è [API] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π')
        setApiCategories([])
      }
    } catch (error) {
      console.error('‚ùå [API] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error)
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const fallbackCategories = CATEGORY_CERTIFICATIONS.map(cat => ({
        key: cat.category.toLowerCase().replace(/\s+/g, '_'),
        name: cat.category,
        icon: 'üì¶'
      }))
      setApiCategories(fallbackCategories)
    } finally {
      setLoadingCategories(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —É–º–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  const loadRecommendations = async () => {
    setLoadingRecommendations(true)
    setRecommendationsError(null)
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: userData, error: userError } = await supabase.auth.getUser()
      if (userError || !userData?.user?.id) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      }
      
      const response = await fetch(`/api/catalog/recommendations?user_id=${userData.user.id}&limit=10`)
      const data = await response.json()
      
      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π')
      }
      
      if (data.success && data.recommendations) {
        console.log('üß† [SMART RECOMMENDATIONS] –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', data.recommendations)
        setRecommendations(data.recommendations)
      } else {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π')
      }
    } catch (error) {
      console.error('‚ùå [SMART RECOMMENDATIONS] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error)
      setRecommendationsError(error instanceof Error ? error.message : String(error))
    } finally {
      setLoadingRecommendations(false)
    }
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadSuppliersFromAPI()
    loadVerifiedSuppliersFromAPI()
    loadCategoriesFromAPI() // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  }, [])

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const loadSupplierProducts = async (supplierId: string, supplierType: string = 'user') => {
    setLoadingProducts(true)
    setSupplierProducts([])
    try {
      let response
      
      if (supplierType === 'verified') {
        // –î–ª—è verified (–æ—Ä–∞–Ω–∂–µ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞) –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞
        response = await fetch(`/api/catalog/products?supplier_id=${supplierId}&supplier_type=${supplierType}`)
      } else {
        // –î–ª—è user (—Å–∏–Ω—è—è –∫–æ–º–Ω–∞—Ç–∞) –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        const { data: { session } } = await supabase.auth.getSession();
        
        if (!session) {
          console.error('‚ùå [CATALOG] –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤');
          setSupplierProducts([]);
          return;
        }

        response = await fetch(`/api/catalog/products?supplier_id=${supplierId}&supplier_type=${supplierType}`, {
          headers: {
            'Authorization': `Bearer ${session.access_token}`,
          },
        });
      }
      
      const data = await response.json()
      
      if (data.products) {
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', data.products.length)
        console.log('üìä –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤:', data.products)
        setSupplierProducts(data.products)
      } else {
        console.warn('‚ö†Ô∏è –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API')
        console.log('üìä –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', data)
        setSupplierProducts([])
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
      setSupplierProducts([])
    } finally {
      setLoadingProducts(false)
    }
  }

  // –≠–•–û –ö–ê–†–¢–û–ß–ö–ò: –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ API
  const loadEchoCards = async () => {
    setLoadingEchoCards(true)
    setEchoCardsError(null)
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: userData, error: userError } = await supabase.auth.getUser()
      if (userError || !userData?.user?.id) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      }
      
      const response = await fetch(`/api/catalog/echo-cards?user_id=${userData.user.id}`)
      const data = await response.json()
      
      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫')
      }
      
      if (data.success && data.echo_cards) {
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫:', data.echo_cards.length)
        console.log('üìä –î–∞–Ω–Ω—ã–µ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫:', data.echo_cards)
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', data.summary)
        setEchoCards(data.echo_cards)
      } else {
        console.warn('‚ö†Ô∏è –ù–µ—Ç —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –æ—Ç–≤–µ—Ç–µ API')
        setEchoCards([])
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫:', error)
      setEchoCardsError(error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      setEchoCards([])
    } finally {
      setLoadingEchoCards(false)
    }
  }

  // –≠–•–û –ö–ê–†–¢–û–ß–ö–ò: –§—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥
  const importSupplierFromEchoCard = async (echoCard: any) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: userData, error: userError } = await supabase.auth.getUser()
      if (userError || !userData?.user?.id) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      }
      
      const requestData = {
        user_id: userData.user.id,
        supplier_key: echoCard.supplier_key,
        supplier_data: echoCard.supplier_info,
        products: echoCard.products || []
      }
      
      const response = await fetch('/api/catalog/echo-cards', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestData)
      })
      
      const data = await response.json()
      
      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
      }
      
      if (data.success) {
        console.log('‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω:', data.supplier)
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
        await loadSuppliersFromAPI()
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        setShowEchoCardsModal(false)
        return data
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
      throw error
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º
  const handleStartProject = (supplier: any) => {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–µ–∫—Ç —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º:', supplier.name)
    console.log('üîç [DEBUG] –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è handleStartProject:', {
      id: supplier.id,
      name: supplier.name,
      company_name: supplier.company_name,
      source_type: supplier.source_type,
      category: supplier.category
    })
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    const params = new URLSearchParams({
      supplierId: supplier.id.toString(),
      supplierName: supplier.name || '',
      mode: 'catalog'
    })
    
    console.log('üîó [DEBUG] URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', params.toString())
    router.push(`/dashboard/create-project?${params.toString()}`)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const handleEditSupplier = (supplier: any) => {
    console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplier.name)
    setEditingSupplier(supplier)
    setShowAddSupplierModal(true)
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞
  const [activeMode, setActiveMode] = useState<'clients' | 'catalog'>('clients')
  const [searchQuery, setSearchQuery] = useState('')
  const [selectedCategoryFilter, setSelectedCategoryFilter] = useState('all')
  const [selectedSupplier, setSelectedSupplier] = useState<any>(null)
  const [modalTab, setModalTab] = useState<'info' | 'products' | 'management'>('info')
  const [selectedProduct, setSelectedProduct] = useState<any>(null)
  const [quantity, setQuantity] = useState(1)
  const [currentPage, setCurrentPage] = useState(1)
  const productsPerPage = 8

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —É–º–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  const [recommendations, setRecommendations] = useState<any>(null)
  const [loadingRecommendations, setLoadingRecommendations] = useState(false)
  const [recommendationsError, setRecommendationsError] = useState<string | null>(null)

  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const [catalogMode, setCatalogMode] = useState<'suppliers' | 'categories'>('categories')
  const [selectedRoom, setSelectedRoom] = useState<'orange' | 'blue'>('orange')
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [authToken, setAuthToken] = useState<string>('')
  const [authLoading, setAuthLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤ –æ—Ä–∞–Ω–∂–µ–≤—É—é –∫–æ–º–Ω–∞—Ç—É (–∫–∞—Ç–∞–ª–æ–≥)
  useEffect(() => {
    if (catalogMode === 'suppliers' && selectedRoom === 'orange' && !recommendations && !loadingRecommendations) {
      loadRecommendations()
    }
  }, [catalogMode, selectedRoom])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const initAuth = async () => {
      try {
        setAuthLoading(true)
        const { data: { session } } = await supabase.auth.getSession()
        if (session?.access_token) {
          setAuthToken(session.access_token)
          console.log('‚úÖ [AUTH] –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞:', session.access_token.substring(0, 20) + '...')
        } else {
          console.log('‚ö†Ô∏è [AUTH] –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏')
        }
      } catch (error) {
        console.error('‚ùå [AUTH] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
      } finally {
        setAuthLoading(false)
      }
    }
    initAuth()
  }, [])

  // –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏
  const [realSuppliers, setRealSuppliers] = useState<any[]>([])
  const [verifiedSuppliers, setVerifiedSuppliers] = useState<any[]>([])
  const [loadingSuppliers, setLoadingSuppliers] = useState(false)
  const [loadingVerified, setLoadingVerified] = useState(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
  const [supplierProducts, setSupplierProducts] = useState<any[]>([])
  const [loadingProducts, setLoadingProducts] = useState(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
  const [showProductEditor, setShowProductEditor] = useState(false)
  const [editingProduct, setEditingProduct] = useState<any>(null)
  const [productFormData, setProductFormData] = useState({
    name: '',
    description: '',
    price: '',
    currency: 'USD',
    min_order: '',
    sku: '',
    in_stock: true,
    images: [] as string[]
  })
  const [uploadingProductImages, setUploadingProductImages] = useState(false)

  // –ù–û–í–û–ï: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã –ª–æ–≥–æ—Ç–∏–ø–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const [logoInputRef, setLogoInputRef] = useState<HTMLInputElement | null>(null)
  const [uploadingSupplierLogo, setUploadingSupplierLogo] = useState(false)

  // –ù–û–í–û–ï: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–≤–∞—Ä–∞
  const [showProductModal, setShowProductModal] = useState(false)
  
  // –≠–•–û –ö–ê–†–¢–û–ß–ö–ò: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [showEchoCardsModal, setShowEchoCardsModal] = useState(false)
  const [echoCards, setEchoCards] = useState<any[]>([])
  const [loadingEchoCards, setLoadingEchoCards] = useState(false)
  const [echoCardsError, setEchoCardsError] = useState<string | null>(null)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —à–∞–≥–æ–≤ –∏–º–ø–æ—Ä—Ç–∞ (–¥–ª—è –∫–∞–∂–¥–æ–π —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏)
  const [importStepsSelection, setImportStepsSelection] = useState<{[key: string]: {
    step2_products: boolean,
    step4_payment: boolean, 
    step5_requisites: boolean
  }}>({})

  // üéØ –°–û–°–¢–û–Ø–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ô –ò –ö–û–†–ó–ò–ù–´
  const [selectedCategoryData, setSelectedCategoryData] = useState<any>(null)
  // –£–±—Ä–∞–ª–∏ showCategorySelector - –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  
  // üõí –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
  const [cart, setCart] = useState<any[]>([])
  const [showCart, setShowCart] = useState(false)
  const [activeSupplier, setActiveSupplier] = useState<string | null>(null) // –ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ —à–∞–≥–æ–≤ –¥–ª—è —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
  const initializeStepsSelection = (supplierKey: string) => {
    if (!importStepsSelection[supplierKey]) {
      setImportStepsSelection(prev => ({
        ...prev,
        [supplierKey]: {
          step2_products: true,    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
          step4_payment: true,     // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
          step5_requisites: true   // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
        }
      }))
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —à–∞–≥–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
  const updateStepSelection = (supplierKey: string, step: 'step2_products' | 'step4_payment' | 'step5_requisites', value: boolean) => {
    setImportStepsSelection(prev => ({
      ...prev,
      [supplierKey]: {
        ...prev[supplierKey],
        [step]: value
      }
    }))
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API
  const [apiCategories, setApiCategories] = useState<any[]>([])
  const [loadingCategories, setLoadingCategories] = useState(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const [showAddSupplierModal, setShowAddSupplierModal] = useState(false)
  const [editingSupplier, setEditingSupplier] = useState<any>(null)
  const [echoCardForImport, setEchoCardForImport] = useState<any>(null)
  const [supplierFormStep, setSupplierFormStep] = useState(1)
  const [maxSupplierStep, setMaxSupplierStep] = useState(1)
  const [supplierFormErrors, setSupplierFormErrors] = useState<{[key: string]: string}>({})
  const [loading, setLoading] = useState(false)
  const [uploadingImages, setUploadingImages] = useState<{[key: string]: boolean}>({})
  const [supplierFormData, setSupplierFormData] = useState({
    // –®–∞–≥ 1: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    name: '',
    company_name: '',
    category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
    country: '–ö–∏—Ç–∞–π',
    city: '',
    description: '',
    logo_url: '', // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞
    
    // –®–∞–≥ 2: –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    email: '',
    phone: '',
    website: '',
    contact_person: '',
    
    // –®–∞–≥ 3: –ë–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ñ–∏–ª—å
    min_order: '',
    response_time: '',
    employees: '',
    established: '',
    certifications: [] as string[],
    specialties: [] as string[],
    
    // –®–∞–≥ 4: –¢–æ–≤–∞—Ä—ã –∏ –∫–∞—Ç–∞–ª–æ–≥
    products: [] as Array<{
      id: string,
      name: string,
      price: string,
      description: string,
      images: string[],
      specifications: {[key: string]: string},
      category: string,
      inStock: boolean,
      minOrder: string
    }>,
    
    // –®–∞–≥ 5: –ü–ª–∞—Ç–µ–∂–∏ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
    payment_methods: [] as string[],
    payment_method: '', // –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∫–∞–∫ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    bank_name: '',
    bank_account: '',
    swift_code: '',
    bank_address: '',
    payment_terms: '',
    currency: 'USD',
    // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞—Ä—Ç—ã –∏ –∫—Ä–∏–ø—Ç—ã
    card_bank: '',
    card_number: '',
    card_holder: '',
    crypto_network: '',
    crypto_address: ''
  })

  // –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —à–∞–≥–æ–≤
  const validateSupplierStep = (step: number): boolean => {
    const errors: {[key: string]: string} = {}
    
    if (step === 1) {
      if (!supplierFormData.name.trim()) errors.name = '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      if (!supplierFormData.company_name.trim()) errors.company_name = '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      if (!supplierFormData.city.trim()) errors.city = '–ì–æ—Ä–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      if (!supplierFormData.description.trim()) errors.description = '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
    }
    
    if (step === 2) {
      if (!supplierFormData.email.trim()) {
        errors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      } else if (!/\S+@\S+\.\S+/.test(supplierFormData.email)) {
        errors.email = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'
      }
      if (!supplierFormData.phone.trim()) errors.phone = '–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      if (!supplierFormData.contact_person.trim()) errors.contact_person = '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
    }
    
    if (step === 3) {
      if (!supplierFormData.min_order.trim()) errors.min_order = '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      if (!supplierFormData.response_time.trim()) errors.response_time = '–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      if (!supplierFormData.employees.trim()) errors.employees = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      if (!supplierFormData.established.trim()) errors.established = '–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
    }
    
    if (step === 4) {
      const certs = CATEGORY_CERTIFICATIONS.find(cat => cat.category === supplierFormData.category)?.certifications || [];
      if (certs.length > 0 && supplierFormData.certifications.length === 0) {
        errors.certifications = '–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é'
      }
    }
    
    if (step === 5) {
      if (supplierFormData.products.length === 0) {
        errors.products = '–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä'
      }
    }
    
    if (step === 6) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø–æ–ª–Ω–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
      const hasBankTransfer = supplierFormData.bank_name.trim() && supplierFormData.bank_account.trim()
      const hasCardPayment = supplierFormData.card_bank?.trim() && supplierFormData.card_number?.trim()
      const hasCrypto = supplierFormData.crypto_network?.trim() && supplierFormData.crypto_address?.trim()
      
      if (!hasBankTransfer && !hasCardPayment && !hasCrypto) {
        errors.payment_methods = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –ø—Ä–∏—ë–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π'
      }
      
      // –ï—Å–ª–∏ –Ω–∞—á–∞–ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥, —Ç–æ —ç—Ç–∏ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
      if ((supplierFormData.bank_name.trim() || supplierFormData.bank_account.trim()) && 
          (!supplierFormData.bank_name.trim() || !supplierFormData.bank_account.trim())) {
        if (!supplierFormData.bank_name.trim()) errors.bank_name = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞'
        if (!supplierFormData.bank_account.trim()) errors.bank_account = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞'
      }
      
      // –ï—Å–ª–∏ –Ω–∞—á–∞–ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å –∫–∞—Ä—Ç–æ—á–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, —Ç–æ —ç—Ç–∏ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
      if ((supplierFormData.card_bank?.trim() || supplierFormData.card_number?.trim()) && 
          (!supplierFormData.card_bank?.trim() || !supplierFormData.card_number?.trim())) {
        if (!supplierFormData.card_bank?.trim()) errors.card_bank = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–Ω–∫-—ç–º–∏—Ç–µ–Ω—Ç'
        if (!supplierFormData.card_number?.trim()) errors.card_number = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã'
      }
      
      // –ï—Å–ª–∏ –Ω–∞—á–∞–ª–∏ –∑–∞–ø–æ–ª–Ω—è—Ç—å –∫—Ä–∏–ø—Ç–æ, —Ç–æ —ç—Ç–∏ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
      if ((supplierFormData.crypto_network?.trim() || supplierFormData.crypto_address?.trim()) && 
          (!supplierFormData.crypto_network?.trim() || !supplierFormData.crypto_address?.trim())) {
        if (!supplierFormData.crypto_network?.trim()) errors.crypto_network = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–µ—Ç—å'
        if (!supplierFormData.crypto_address?.trim()) errors.crypto_address = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞'
      }
    }
    
    if (step === 7) {
      // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
      if (!supplierFormData.name.trim()) errors.name = '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      if (!supplierFormData.email.trim()) errors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø–æ–ª–Ω–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
      const hasBankTransfer = supplierFormData.bank_name.trim() && supplierFormData.bank_account.trim()
      const hasCardPayment = supplierFormData.card_bank?.trim() && supplierFormData.card_number?.trim()
      const hasCrypto = supplierFormData.crypto_network?.trim() && supplierFormData.crypto_address?.trim()
      
      if (!hasBankTransfer && !hasCardPayment && !hasCrypto) {
        errors.payment_methods = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –ø—Ä–∏—ë–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π'
      }
    }
    
    setSupplierFormErrors(errors)
    return Object.keys(errors).length === 0
  }

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–∞–≥–æ–≤ –¥–ª—è SupplierTimeline
  const supplierSteps = [
    { id: 1, title: '–û–°–ù–û–í–ù–ê–Ø', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', icon: Building },
    { id: 2, title: '–ö–û–ù–¢–ê–ö–¢–´', description: '–°–≤—è–∑—å', icon: Phone },
    { id: 3, title: '–ü–†–û–§–ò–õ–¨', description: '–ë–∏–∑–Ω–µ—Å', icon: Users },
    { id: 4, title: '–°–ï–†–¢–ò–§–ò–ö–ê–¶–ò–ò', description: '–î–æ–∫—É–º–µ–Ω—Ç—ã', icon: CheckCircle },
    { id: 5, title: '–¢–û–í–ê–†–´', description: '–ö–∞—Ç–∞–ª–æ–≥', icon: Package },
    { id: 6, title: '–†–ï–ö–í–ò–ó–ò–¢–´', description: '–ü–ª–∞—Ç–µ–∂–∏', icon: Zap },
    { id: 7, title: '–ü–†–ï–í–¨–Æ', description: '–§–∏–Ω–∞–ª', icon: CheckCircle }
  ]

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∏–º—Å–∫–∏—Ö —Ü–∏—Ñ—Ä
  const toRoman = (num: number): string => {
    const romans = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'];
    return romans[num - 1] || String(num);
  }

  // –§—É–Ω–∫—Ü–∏—è –∫–ª–∏–∫–∞ –ø–æ —à–∞–≥—É (–≤–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–∏–º —à–∞–≥–∞–º)
  const handleSupplierStepClick = (stepIndex: number) => {
    if (stepIndex <= maxSupplierStep) {
      setSupplierFormStep(stepIndex)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã
  const resetSupplierForm = () => {
    setSupplierFormData({
      name: '', company_name: '', category: CATEGORY_CERTIFICATIONS[0].category, country: '–ö–∏—Ç–∞–π', city: '', description: '', logo_url: '',
      email: '', phone: '', website: '', contact_person: '',
      min_order: '', response_time: '', employees: '', established: '',
      certifications: [], specialties: [],
      products: [],
      payment_methods: [], payment_method: '', bank_name: '', bank_account: '', swift_code: '', bank_address: '', payment_terms: '', currency: 'USD',
      card_bank: '', card_number: '', card_holder: '', crypto_network: '', crypto_address: ''
    })
    setSupplierFormErrors({})
    setUploadingImages({})
    setSupplierFormStep(1)
    setMaxSupplierStep(1)
  }

  // üîÆ –ü–†–ï–î–ó–ê–ü–û–õ–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –≠–•–û –ö–ê–†–¢–û–ß–ö–ò
  useEffect(() => {
    if (echoCardForImport && showAddSupplierModal) {
      console.log('üîÆ –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏:', echoCardForImport)
      
      const echoData = echoCardForImport.supplier_info
      const selectedSteps = echoCardForImport.selectedSteps || {
        step2_products: true,
        step4_payment: true,
        step5_requisites: true
      }
      
      console.log('üìã –í—ã–±—Ä–∞–Ω–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞:', selectedSteps)
      console.log('üì¶ –¢–æ–≤–∞—Ä—ã –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏:')
      console.log('  - products_detailed:', echoCardForImport.products_detailed)
      console.log('  - products (fallback):', echoCardForImport.products)
      console.log('üñºÔ∏è –¢–æ–≤–∞—Ä—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏:', echoCardForImport.products_detailed?.filter((p: any) => p.image_url).length || 0)
      
      setSupplierFormData({
        // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ (–≤—Å–µ–≥–¥–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è)
        name: echoData.name || '',
        company_name: echoData.company_name || '',
        category: echoData.category === '–ù–µ —É–∫–∞–∑–∞–Ω–æ' ? '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' : (echoData.category || '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'),
        country: echoData.country && echoData.country.trim() !== '' ? echoData.country : '–ö–∏—Ç–∞–π', // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ falsy –Ω–æ –∏ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        city: echoData.city || '',
        description: '', // –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω–∏—Ç —Å–∞–º
        logo_url: '',
        
        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–≤—Å–µ–≥–¥–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –µ—Å–ª–∏ –µ—Å—Ç—å)
        email: echoData.contact_email || '',
        phone: echoData.contact_phone || '',
        website: echoData.website || '',
        contact_person: echoData.contact_person || '',
        
        // –ë–∏–∑–Ω–µ—Å-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–¢–û–õ–¨–ö–û —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤)
        min_order: echoData.min_order || '',
        response_time: echoData.response_time || '',
        employees: echoData.employees || '',
        established: echoData.established || '',
        certifications: [],
        specialties: [],
        
        // STEP 2: –¢–æ–≤–∞—Ä—ã (–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ)
        products: selectedSteps.step2_products ? 
          (echoCardForImport.products_detailed || echoCardForImport.products || []).map((productData: any) => {
            // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            if (typeof productData === 'object' && productData.name) {
              const newProduct = {
                id: `temp-${Date.now()}-${Math.random().toString(36).substring(7)}`,
                name: productData.name,
                price: productData.price || '',
                description: '',
                images: productData.image_url ? [productData.image_url] : [], // üñºÔ∏è –ö–ê–†–¢–ò–ù–ö–ê –ò–ó STEP2
                specifications: {},
                category: echoData.category === '–ù–µ —É–∫–∞–∑–∞–Ω–æ' ? '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' : (echoData.category || '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'),
                inStock: true,
                minOrder: productData.quantity ? `${productData.quantity} —à—Ç—É–∫` : '1 —à—Ç—É–∫–∞'
              }
              
              console.log(`üì¶ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä "${newProduct.name}":`)
              console.log(`  - ID: ${newProduct.id}`)
              console.log(`  - –¶–µ–Ω–∞: ${newProduct.price}`)
              console.log(`  - –ö–∞—Ä—Ç–∏–Ω–∫–∞ –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏: ${productData.image_url || '–ù–ï–¢'}`)
              console.log(`  - –ú–∞—Å—Å–∏–≤ images: [${newProduct.images.join(', ')}]`)
              console.log(`  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫: ${newProduct.images.length}`)
              
              return newProduct
            }
            // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞ (fallback)
            return {
              id: `temp-${Date.now()}-${Math.random().toString(36).substring(7)}`,
              name: typeof productData === 'string' ? productData : productData.name,
              price: '',
              description: '',
              images: [],
              specifications: {},
              category: echoData.category === '–ù–µ —É–∫–∞–∑–∞–Ω–æ' ? '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' : (echoData.category || '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞'),
              inStock: true,
              minOrder: '1 —à—Ç—É–∫–∞'
            }
          }) : [],
        
        // STEP 4: –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã (–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ)
        payment_methods: selectedSteps.step4_payment && echoData.payment_methods ? [echoData.payment_type] : [],
        payment_method: selectedSteps.step4_payment ? (echoData.payment_type || '') : '',
        
        // STEP 5: –†–µ–∫–≤–∏–∑–∏—Ç—ã (–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ)
        // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
        bank_name: selectedSteps.step5_requisites ? (echoData.payment_methods?.bank?.bank_name || '') : '',
        bank_account: selectedSteps.step5_requisites ? (echoData.payment_methods?.bank?.account_number || '') : '',
        swift_code: selectedSteps.step5_requisites ? (echoData.payment_methods?.bank?.swift_code || '') : '',
        bank_address: selectedSteps.step5_requisites ? (echoData.payment_methods?.bank?.bank_address || '') : '',
        
        // P2P –∫–∞—Ä—Ç–æ—á–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã  
        card_bank: selectedSteps.step5_requisites ? (echoData.payment_methods?.card?.bank || '') : '',
        card_number: selectedSteps.step5_requisites ? (echoData.payment_methods?.card?.number || '') : '',
        card_holder: selectedSteps.step5_requisites ? (echoData.payment_methods?.card?.holder || '') : '',
        
        // –ö—Ä–∏–ø—Ç–æ—Ä–µ–∫–≤–∏–∑–∏—Ç—ã
        crypto_network: selectedSteps.step5_requisites ? (echoData.payment_methods?.crypto?.network || '') : '',
        crypto_address: selectedSteps.step5_requisites ? (echoData.payment_methods?.crypto?.address || '') : '',
        
        payment_terms: '',
        currency: 'USD'
      })
      
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —à–∞–≥–æ–≤')
      console.log('üì¶ –¢–æ–≤–∞—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã:', selectedSteps.step2_products)
      console.log('üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω:', selectedSteps.step4_payment)
      console.log('üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã:', selectedSteps.step5_requisites)
      
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞
      setTimeout(() => {
        console.log('üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –¢–û–í–ê–†–û–í –í –§–û–†–ú–ï:')
        setSupplierFormData(current => {
          console.log(`üì¶ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ñ–æ—Ä–º–µ: ${current.products.length}`)
          current.products.forEach((product, index) => {
            console.log(`  ${index + 1}. "${product.name}":`)
            console.log(`     - ID: ${product.id}`)
            console.log(`     - –ö–∞—Ä—Ç–∏–Ω–æ–∫: ${product.images?.length || 0}`)
            console.log(`     - –ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞: ${product.images?.[0] || '–ù–ï–¢'}`)
          })
          return current
        })
      }, 100)
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ uploadingImages –¥–ª—è –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
      if (selectedSteps.step2_products && echoCardForImport.products_detailed?.length > 0) {
        const imageStates: {[key: string]: boolean} = {}
        setSupplierFormData(prev => {
          prev.products.forEach(product => {
            imageStates[product.id] = false
          })
          return prev
        })
                 setUploadingImages(prev => ({...prev, ...imageStates}))
         console.log('üñºÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤')
         console.log('üìù –ù–∞—á–Ω–∏—Ç–µ —Å —à–∞–≥–∞ 1 –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤—Å–µ–π —Ñ–æ—Ä–º–µ')
       }
    }
  }, [echoCardForImport, showAddSupplierModal])

  // –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –≤ Base64 (–∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç)
  const convertToBase64 = (file: File): Promise<string> => {
    return new Promise((resolve, reject) => {
      const reader = new FileReader()
      reader.readAsDataURL(file)
      reader.onload = () => resolve(reader.result as string)
      reader.onerror = error => reject(error)
    })
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É–∂–µ –≤ –ª–∏—á–Ω–æ–º —Å–ø–∏—Å–∫–µ
  const isSupplierInPersonalList = (catalogSupplier: any) => {
    console.log('üîç [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è:', catalogSupplier.name || catalogSupplier.company_name)
    console.log('üîç [DEBUG] –í –ª–∏—á–Ω–æ–º —Å–ø–∏—Å–∫–µ:', realSuppliers.length, '–ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤')
    
    const isDuplicate = realSuppliers.some(personalSupplier => 
      personalSupplier.company_name === catalogSupplier.company_name ||
      personalSupplier.name === catalogSupplier.name ||
      (personalSupplier.contact_email && catalogSupplier.email && 
       personalSupplier.contact_email === catalogSupplier.email)
    )
    
    console.log('üîç [DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:', isDuplicate)
    return isDuplicate
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ Get2B –≤ –ª–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫
  const handleAddSupplierToPersonal = async (catalogSupplier: any) => {
    console.log('üî• [DEBUG] handleAddSupplierToPersonal –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è:', catalogSupplier)
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º loading –µ—Å–ª–∏ –æ–Ω –∑–∞—Å—Ç—Ä—è–ª
    setLoading(false)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    if (isSupplierInPersonalList(catalogSupplier)) {
      console.log('‚ö†Ô∏è [DEBUG] –ü–æ—Å—Ç–∞–≤—â–∏–∫ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ!')
      alert('–≠—Ç–æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ!')
      return
    }

    console.log('üöÄ [DEBUG] –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞...')
    setLoading(true)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ - –∞–≤—Ç–æ—Å–±—Ä–æ—Å —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    const emergencyTimeout = setTimeout(() => {
      console.log('üö® [DEBUG] –≠–ö–°–¢–†–ï–ù–ù–´–ô –°–ë–†–û–° LOADING!')
      setLoading(false)
    }, 15000)
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
      console.log('üîê [DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...')
      const { supabase } = await import('@/lib/supabaseClient')
      const { data: { session }, error: authError } = await supabase.auth.getSession()
      
      if (authError || !session?.access_token) {
        console.log('‚ùå [DEBUG] –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π:', authError)
        alert('‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.')
        window.location.href = '/login'
        return
      }

      console.log('‚úÖ [DEBUG] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è OK, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω')
      console.log('üìû [DEBUG] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API...')

      // –°–æ–∑–¥–∞–µ–º AbortController –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
      const controller = new AbortController()
      const timeoutId = setTimeout(() => controller.abort(), 10000) // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç

      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π API –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
        const response = await fetch('/api/catalog/import-supplier', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${session.access_token}`
          },
          body: JSON.stringify({
            verified_supplier_id: catalogSupplier.id
          }),
          signal: controller.signal
        })

        clearTimeout(timeoutId) // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–∞—É—Ç –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª

        console.log('üì° [DEBUG] –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, —Å—Ç–∞—Ç—É—Å:', response.status)
        const result = await response.json()
        console.log('üìÑ [DEBUG] –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', result)

        if (response.status === 401) {
          console.log('üîí [DEBUG] 401 - –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π')
          alert('‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.')
          window.location.href = '/login'
          return
        }

        if (response.ok) {
          console.log('‚úÖ [DEBUG] –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ:', result.supplier)
          console.log('üîÑ [DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...')
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
          await loadSuppliersFromAPI()
          console.log('üîµ [DEBUG] –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–∏–Ω—é—é –∫–æ–º–Ω–∞—Ç—É...')
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ª–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫
          setActiveMode('clients')
          alert('üéâ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫!\n\n–í—ã –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω—ã –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–í–∞—à–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏"')
        } else {
          console.error('‚ùå [DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', result.error)
          alert(`–û—à–∏–±–∫–∞: ${result.error}`)
        }
      } catch (fetchError: any) {
        clearTimeout(timeoutId)
        console.error('‚ùå [DEBUG] –û—à–∏–±–∫–∞ fetch –∑–∞–ø—Ä–æ—Å–∞:', fetchError)
        
        if (fetchError.name === 'AbortError') {
          console.log('‚è∞ [DEBUG] –ó–∞–ø—Ä–æ—Å –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É')
          alert('‚è∞ –ó–∞–ø—Ä–æ—Å –∑–∞–Ω—è–ª —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
        } else {
          alert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
        }
      }
    } catch (error) {
      console.error('‚ùå [DEBUG] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.')
    } finally {
      console.log('üèÅ [DEBUG] –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º loading')
      clearTimeout(emergencyTimeout) // –û—Ç–º–µ–Ω—è–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
      setLoading(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const handleLogoUpload = async (file: File) => {
    if (!file) return

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/svg+xml']
    if (!allowedTypes.includes(file.type)) {
      alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: JPEG, PNG, WebP, SVG')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5MB)
    if (file.size > 5 * 1024 * 1024) {
      alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB')
      return
    }

    setUploadingImages(prev => ({ ...prev, logo: true }))

    try {
      // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
      const fileExt = file.name.split('.').pop()
      const fileName = `logo_${Date.now()}_${Math.random().toString(36).substring(7)}.${fileExt}`

      // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage
      const { supabase } = await import('@/lib/supabaseClient')
      const { data, error } = await supabase.storage
        .from('supplier-logos')
        .upload(fileName, file)

      if (error) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage:', error.message)
        // Fallback –Ω–∞ Base64
        const base64 = await convertToBase64(file)
        setSupplierFormData(prev => ({ ...prev, logo_url: base64 }))
        console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ Base64')
      } else {
        // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
        const { data: urlData } = supabase.storage
          .from('supplier-logos')
          .getPublicUrl(fileName)
        
        setSupplierFormData(prev => ({ ...prev, logo_url: urlData.publicUrl }))
        console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Supabase Storage:', urlData.publicUrl)
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞:', error)
      // Fallback –Ω–∞ Base64
      try {
        const base64 = await convertToBase64(file)
        setSupplierFormData(prev => ({ ...prev, logo_url: base64 }))
        console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ Base64 (fallback)')
      } catch (base64Error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ Base64:', base64Error)
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞')
      }
    } finally {
      setUploadingImages(prev => ({ ...prev, logo: false }))
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const handleSubmitSupplier = async () => {
    setLoading(true)
    
    try {
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–µ API)
      const supplierPayload = {
        name: supplierFormData.name,
        company_name: supplierFormData.company_name,
        category: supplierFormData.category, // –î–æ–±–∞–≤–ª—è–µ–º category –∫–∞–∫ —Ç–µ–∫—Å—Ç
        country: supplierFormData.country && supplierFormData.country.trim() !== '' ? supplierFormData.country : '–ö–∏—Ç–∞–π', // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ country –Ω–µ –ø—É—Å—Ç–æ–µ
        city: supplierFormData.city,
        description: supplierFormData.description,
        logo_url: supplierFormData.logo_url, // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø
        contact_email: supplierFormData.email, // API –æ–∂–∏–¥–∞–µ—Ç contact_email
        contact_phone: supplierFormData.phone, // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ contact_phone
        website: supplierFormData.website,
        contact_person: supplierFormData.contact_person,
        min_order: supplierFormData.min_order,
        response_time: supplierFormData.response_time,
        employees: supplierFormData.employees,
        established: supplierFormData.established,
        certifications: supplierFormData.certifications,
        specialties: supplierFormData.specialties,
        // üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ï–ö–¢–û–í –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        total_projects: echoCardForImport?.statistics?.total_projects || 0,
        successful_projects: echoCardForImport?.statistics?.success_rate && echoCardForImport?.statistics?.total_projects ? 
          Math.round((echoCardForImport.statistics.success_rate / 100) * echoCardForImport.statistics.total_projects) : 0,
        cancelled_projects: echoCardForImport?.statistics?.total_projects && echoCardForImport?.statistics?.success_rate ?
          echoCardForImport.statistics.total_projects - Math.round((echoCardForImport.statistics.success_rate / 100) * echoCardForImport.statistics.total_projects) : 0,
        total_spent: echoCardForImport?.statistics?.total_spent || 0,
        // –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
        payment_methods: {
          bank: supplierFormData.bank_name ? {
            bank_name: supplierFormData.bank_name,
            account_number: supplierFormData.bank_account,
            swift_code: supplierFormData.swift_code
          } : null,
          card: supplierFormData.card_bank ? {
            bank: supplierFormData.card_bank,
            number: supplierFormData.card_number,
            holder: supplierFormData.card_holder
          } : null,
          crypto: supplierFormData.crypto_network ? {
            network: supplierFormData.crypto_network,
            address: supplierFormData.crypto_address
          } : null
        }
      }

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      console.log('üîß [DEBUG] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º:', supplierPayload.logo_url);
      console.log('üìä [DEBUG] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏:', {
        echo_stats: echoCardForImport?.statistics,
        calculated_successful: supplierPayload.successful_projects,
        calculated_cancelled: supplierPayload.cancelled_projects,
        total_projects: supplierPayload.total_projects,
        total_spent: supplierPayload.total_spent
      });
      console.log('üìù [DEBUG] –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ü–û–õ–ï–ô –§–û–†–ú–´:', {
        name: supplierFormData.name,
        company_name: supplierFormData.company_name,
        description: supplierFormData.description,
        min_order: supplierFormData.min_order,
        response_time: supplierFormData.response_time,
        employees: supplierFormData.employees,
        established: supplierFormData.established,
        contact_email: supplierFormData.email,
        contact_phone: supplierFormData.phone,
        website: supplierFormData.website,
        contact_person: supplierFormData.contact_person
      });
      console.log('üåç [DEBUG] –ü–†–û–í–ï–†–ö–ê –ü–û–õ–Ø COUNTRY:', {
        'Form country': supplierFormData.country,
        'API country': supplierPayload.country,
        'Country length': supplierFormData.country?.length,
        'Is empty string': supplierFormData.country === '',
        'Is undefined': supplierFormData.country === undefined,
        'Is null': supplierFormData.country === null,
        'Boolean validation': !!supplierFormData.country
      });
      console.log('üîß [DEBUG] –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è API:', supplierPayload);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞');
      }

      const supplierResponse = await fetch('/api/catalog/user-suppliers', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`,
        },
        body: JSON.stringify(supplierPayload),
      })

      if (!supplierResponse.ok) {
        const errorData = await supplierResponse.json()
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
      }

      const { supplier } = await supplierResponse.json()
      console.log('‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω:', supplier)

      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      if (supplierFormData.products.length > 0) {
        console.log(`üîß [DEBUG] –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ${supplierFormData.products.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        let successCount = 0;
        let errorCount = 0;
        
        for (const product of supplierFormData.products) {
          const productPayload = {
            supplier_id: supplier.id,
            supplier_type: 'user', // –£–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —ç—Ç–æ —Ç–æ–≤–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
            name: product.name,
            description: product.description,
            category: product.category || supplierFormData.category,
            price: product.price ? parseFloat(product.price) : null,
            currency: 'USD',
            min_order: product.minOrder,
            images: product.images,
            specifications: product.specifications,
            in_stock: product.inStock,
            sku: (product as any).sku || null
          }

          console.log(`üîß [DEBUG] –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–≤–∞—Ä "${product.name}":`, productPayload);

          const productResponse = await fetch('/api/catalog/products', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(productPayload),
          })

          if (!productResponse.ok) {
            const errorData = await productResponse.json();
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ "${product.name}":`, errorData);
            errorCount++;
          } else {
            const result = await productResponse.json();
            console.log(`‚úÖ –¢–æ–≤–∞—Ä "${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω:`, result.product?.id);
            successCount++;
          }
        }
        
        console.log(`üìä [–ò–¢–û–ì–û] –¢–æ–≤–∞—Ä—ã: ${successCount} —É—Å–ø–µ—à–Ω–æ, ${errorCount} –æ—à–∏–±–æ–∫`);
      }

      // –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
      alert('üéâ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É —Å–∏–Ω—é—é –∫–æ–º–Ω–∞—Ç—É!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã —Å —ç—Ç–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –µ–≥–æ —Ç–æ–≤–∞—Ä–∞–º–∏.')
      setShowAddSupplierModal(false)
      resetSupplierForm()
      setEchoCardForImport(null) // –û—á–∏—â–∞–µ–º —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      console.log('‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ')
      
      // –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ API
      console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è...');
      await loadSuppliersFromAPI();
      console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setLoading(false)
    }
  }

  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤
  const ALL_PRODUCTS = [
    { id: 1, name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S24', price: '$899', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å AI-—Ñ—É–Ω–∫—Ü–∏—è–º–∏', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 150, specifications: { screen: '6.2"', memory: '256GB', camera: '50MP', battery: '4000mAh' } },
    { id: 2, name: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ AirPods Pro', price: '$249', description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ TWS –Ω–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 85, specifications: { battery: '6h+24h', bluetooth: '5.3', weight: '56g', anc: '–ê–∫—Ç–∏–≤–Ω–æ–µ' } },
    { id: 3, name: '–£–º–Ω—ã–µ —á–∞—Å—ã Apple Watch Series 9', price: '$399', description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Å–º–∞—Ä—Ç-—á–∞—Å—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ñ–∏—Ç–Ω–µ—Å–∞', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 45, specifications: { display: '45mm', waterproof: '50m', battery: '18h', sensors: '–≠–ö–ì, SpO2' } },
    { id: 4, name: '–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–µ –∑–∞—Ä—è–¥–Ω–æ–µ Anker 20K', price: '$49', description: '–ë—ã—Å—Ç—Ä–∞—è –∑–∞—Ä—è–¥–∫–∞ –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 200, specifications: { capacity: '20000mAh', ports: '2 USB-C + 1 USB-A', weight: '490g', fastcharge: '22.5W' } },
    { id: 5, name: 'Bluetooth –∫–æ–ª–æ–Ω–∫–∞ JBL Charge 5', price: '$129', description: '–ú–æ—â–Ω–∞—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ —Å –∑–∞—â–∏—Ç–æ–π IP67', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 120, specifications: { power: '40W', waterproof: 'IP67', battery: '20h', bluetooth: '5.1' } },
    { id: 6, name: '–ò–≥—Ä–æ–≤–∞—è –º—ã—à—å Logitech G Pro X', price: '$79', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –º—ã—à—å', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 95, specifications: { dpi: '25600', buttons: '8', weight: '63g', battery: '70h' } },
    { id: 7, name: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è Keychron K8', price: '$89', description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 75, specifications: { switches: 'Cherry MX', battery: '240h', backlight: 'RGB', layout: 'TKL' } },
    { id: 8, name: '–í–µ–±-–∫–∞–º–µ—Ä–∞ Logitech C920', price: '$69', description: 'Full HD –≤–µ–±-–∫–∞–º–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 30, specifications: { resolution: '1080p 30fps', microphone: '–°—Ç–µ—Ä–µ–æ', autofocus: '–î–∞', fov: '78¬∞' } },
    { id: 9, name: 'SSD –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å Samsung 980 PRO 1TB', price: '$149', description: '–í—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π NVMe SSD', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 180, specifications: { capacity: '1TB', interface: 'PCIe 4.0', read: '7000 MB/s', write: '5000 MB/s' } },
    { id: 10, name: '–ú–æ–Ω–∏—Ç–æ—Ä ASUS ProArt 27"', price: '$449', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π 4K –º–æ–Ω–∏—Ç–æ—Ä', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 25, specifications: { size: '27"', resolution: '4K UHD', panel: 'IPS', refresh: '60Hz' } },
    { id: 11, name: '–†–æ—É—Ç–µ—Ä Wi-Fi 6 ASUS AX6000', price: '$299', description: '–ò–≥—Ä–æ–≤–æ–π —Ä–æ—É—Ç–µ—Ä —Å Wi-Fi 6', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 60, specifications: { standard: 'Wi-Fi 6', speed: '6000 Mbps', ports: '8x Gigabit', coverage: '5000 –∫–≤.—Ñ' } },
    { id: 12, name: '–ü–ª–∞–Ω—à–µ—Ç iPad Air 5-–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è', price: '$599', description: '–ú–æ—â–Ω—ã–π –ø–ª–∞–Ω—à–µ—Ç —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º M1', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 40, specifications: { screen: '10.9"', chip: 'Apple M1', storage: '256GB', camera: '12MP' } },
    { id: 13, name: '–ù–∞—É—à–Ω–∏–∫–∏ Sony WH-1000XM5', price: '$399', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–µ –Ω–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 90, specifications: { anc: '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ', battery: '30h', drivers: '30mm', weight: '250g' } },
    { id: 14, name: '–°–º–∞—Ä—Ç-TV Samsung 55" QLED', price: '$899', description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π QLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 15, specifications: { size: '55"', resolution: '4K', hdr: 'HDR10+', os: 'Tizen' } },
    { id: 15, name: '–ö–æ–Ω—Å–æ–ª—å PlayStation 5', price: '$499', description: '–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 8, specifications: { cpu: 'AMD Zen 2', gpu: 'RDNA 2', storage: '825GB SSD', ray_tracing: '–î–∞' } },
    { id: 16, name: '–§–∏—Ç–Ω–µ—Å-–±—Ä–∞—Å–ª–µ—Ç Xiaomi Band 8', price: '$39', description: '–î–æ—Å—Ç—É–ø–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–∫–µ—Ä', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 300, specifications: { display: '1.62"', battery: '16 –¥–Ω–µ–π', waterproof: '5ATM', sensors: 'SpO2, –ü—É–ª—å—Å' } },
    { id: 17, name: '–î—Ä–æ–Ω DJI Mini 3', price: '$759', description: '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –¥—Ä–æ–Ω —Å 4K –∫–∞–º–µ—Ä–æ–π', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 12, specifications: { camera: '4K/60fps', flight_time: '38 –º–∏–Ω', weight: '249g', range: '10–∫–º' } },
    { id: 18, name: '–ü—Ä–∏–Ω—Ç–µ—Ä HP LaserJet Pro', price: '$199', description: '–õ–∞–∑–µ—Ä–Ω—ã–π –ø—Ä–∏–Ω—Ç–µ—Ä –¥–ª—è –æ—Ñ–∏—Å–∞', category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 55, specifications: { type: '–õ–∞–∑–µ—Ä–Ω—ã–π –ß–ë', speed: '23 —Å—Ç—Ä/–º–∏–Ω', duplex: '–ê–≤—Ç–æ', connectivity: 'Wi-Fi, USB' } }
  ]

  // –í—ã—á–∏—Å–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const totalPages = Math.ceil(ALL_PRODUCTS.length / productsPerPage)
  const startIndex = (currentPage - 1) * productsPerPage
  const endIndex = startIndex + productsPerPage
  const currentProducts = ALL_PRODUCTS.slice(startIndex, endIndex)

  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ API —Å fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ
  const categories = [
    { value: 'all', label: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
    ...apiCategories.map(cat => ({ 
      value: cat.name, 
      label: `${cat.icon || 'üì¶'} ${cat.name}` 
    }))
  ]

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ä–∞–Ω–∂–µ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ = –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏, –°–∏–Ω—è—è –∫–æ–º–Ω–∞—Ç–∞ = –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
  const currentSuppliers = selectedRoom === 'orange' ? verifiedSuppliers : realSuppliers

  const filteredSuppliers = currentSuppliers.filter(supplier => {
    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null/undefined
    const supplierName = supplier?.name || supplier?.company_name || ''
    const supplierCategory = supplier?.category || ''
    
    // –ò—Å–∫–ª—é—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ null –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    if (!supplierName.trim() || supplierName === 'NULL') return false
    
    const matchesSearch = supplierName.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         supplierCategory.toLowerCase().includes(searchQuery.toLowerCase())
    const matchesCategory = selectedCategoryFilter === 'all' || supplierCategory === selectedCategoryFilter
    return matchesSearch && matchesCategory
  })

  // Debug logs removed to prevent infinite render loop

  // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–π
  const getCertifications = (certifications: string | null): string[] => {
    if (!certifications) return []
    try {
      const parsed = JSON.parse(certifications)
      return Array.isArray(parsed) ? parsed : []
    } catch {
      return []
    }
  }

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
  const resetProductForm = () => {
    setProductFormData({
      name: '',
      description: '',
      price: '',
      currency: 'USD',
      min_order: '',
      sku: '',
      in_stock: true,
      images: []
    })
    setEditingProduct(null)
  }

  const openProductEditor = (product?: any) => {
    if (product) {
      setEditingProduct(product)
      setProductFormData({
        name: product.name || '',
        description: product.description || '',
        price: product.price || '',
        currency: product.currency || 'USD',
        min_order: product.min_order || '',
        sku: product.sku || '',
        in_stock: product.in_stock ?? true,
        images: product.images || []
      })
    } else {
      resetProductForm()
    }
    setShowProductEditor(true)
  }

  const handleProductImageUpload = async (files: FileList) => {
    const imageFiles = Array.from(files).filter(file => file.type.startsWith('image/'))
    if (imageFiles.length === 0) return

    setUploadingProductImages(true)
    const uploadedImages: string[] = []

    try {
      for (const file of imageFiles) {
        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ Supabase Storage
        try {
          const fileName = `${Date.now()}-${Math.random().toString(36).substring(2)}-${file.name}`
          const { data, error } = await supabase.storage
            .from('product-images')
            .upload(fileName, file)

          if (error) throw error

          const { data: { publicUrl } } = supabase.storage
            .from('product-images')
            .getPublicUrl(fileName)

          uploadedImages.push(publicUrl)
        } catch (storageError) {
          console.warn('Supabase Storage –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é Base64:', storageError)
          const base64 = await convertToBase64(file)
          uploadedImages.push(base64)
        }
      }

      setProductFormData(prev => ({
        ...prev,
        images: [...prev.images, ...uploadedImages]
      }))
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error)
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π')
    } finally {
      setUploadingProductImages(false)
    }
  }

  const removeProductImage = (index: number) => {
    setProductFormData(prev => ({
      ...prev,
      images: prev.images.filter((_, i) => i !== index)
    }))
  }

  const handleSaveProduct = async () => {
    if (!selectedSupplier) {
      alert('–û—à–∏–±–∫–∞: –ø–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω')
      return
    }

    if (!productFormData.name.trim()) {
      alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞')
      return
    }

    setUploadingProductImages(true)
    
    try {
      const productData = {
        name: productFormData.name.trim(),
        description: productFormData.description.trim(),
        price: productFormData.price.trim() ? parseFloat(productFormData.price.trim()) : null,
        currency: productFormData.currency,
        min_order: productFormData.min_order.trim(),
        sku: productFormData.sku.trim() || null,
        in_stock: productFormData.in_stock,
        images: productFormData.images,
        supplier_id: selectedSupplier.id,
        supplier_type: selectedRoom === 'blue' ? 'user' : 'verified', // –î–æ–±–∞–≤–ª—è–µ–º supplier_type
        category: selectedSupplier.category || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º category
      }

      const apiUrl = editingProduct 
        ? `/api/catalog/products` 
        : '/api/catalog/products'
      
      const method = editingProduct ? 'PATCH' : 'POST' // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º PATCH –≤–º–µ—Å—Ç–æ PUT

      console.log(`${editingProduct ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ' : '–°–æ–∑–¥–∞–Ω–∏–µ'} —Ç–æ–≤–∞—Ä–∞:`, productData)

      const requestBody = editingProduct 
        ? { id: editingProduct.id, ...productData } // –î–ª—è PATCH –≤–∫–ª—é—á–∞–µ–º id –≤ body
        : productData

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏');
      }

      const response = await fetch(apiUrl, {
        method,
        headers: { 
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`,
        },
        body: JSON.stringify(requestBody)
      })

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || `–û—à–∏–±–∫–∞ ${editingProduct ? '–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' : '—Å–æ–∑–¥–∞–Ω–∏—è'} —Ç–æ–≤–∞—Ä–∞`)
      }

      console.log(`–¢–æ–≤–∞—Ä ${editingProduct ? '–æ–±–Ω–æ–≤–ª–µ–Ω' : '—Å–æ–∑–¥–∞–Ω'} —É—Å–ø–µ—à–Ω–æ:`, result)
      
      alert(`‚úÖ –¢–æ–≤–∞—Ä ${editingProduct ? '–æ–±–Ω–æ–≤–ª–µ–Ω' : '–¥–æ–±–∞–≤–ª–µ–Ω'} —É—Å–ø–µ—à–Ω–æ!`)
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
      const supplierType = selectedRoom === 'blue' ? 'user' : 'verified'
      await loadSupplierProducts(selectedSupplier.id, supplierType)
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä
      setShowProductEditor(false)
      resetProductForm()

    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ ${editingProduct ? '–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' : '—Å–æ–∑–¥–∞–Ω–∏—è'} —Ç–æ–≤–∞—Ä–∞:`, error)
      alert(`–û—à–∏–±–∫–∞ ${editingProduct ? '–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' : '—Å–æ–∑–¥–∞–Ω–∏—è'} —Ç–æ–≤–∞—Ä–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setUploadingProductImages(false)
    }
  }

  const handleDeleteProduct = async (productId: string) => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?')) {
      return
    }

    try {
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:', productId)

      const supplierType = selectedRoom === 'blue' ? 'user' : 'verified'

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞');
      }

      const response = await fetch('/api/catalog/products', {
        method: 'DELETE',
        headers: { 
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`,
        },
        body: JSON.stringify({ 
          id: productId,
          supplier_type: supplierType
        })
      })

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞')
      }

      console.log('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', result)
      alert('‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
      if (selectedSupplier) {
        await loadSupplierProducts(selectedSupplier.id, supplierType)
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error)
      alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    }
  }

  const handleDeleteSupplier = async (supplierId: string) => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –í—Å–µ —Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.')) {
      return
    }

    try {
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierId)

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞');
      }

      const response = await fetch('/api/catalog/user-suppliers', {
        method: 'DELETE',
        headers: { 
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`,
        },
        body: JSON.stringify({ id: supplierId })
      })

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
      }

      console.log('–ü–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', result)
      alert('‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
      setSelectedSupplier(null)
      await loadSuppliersFromAPI()

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
      alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    }
  }

  // –ù–û–í–û–ï: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –ª–æ–≥–æ—Ç–∏–ø–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const handleSupplierLogoChange = async (file: File) => {
    if (!selectedSupplier) return

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/svg+xml']
    if (!allowedTypes.includes(file.type)) {
      alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: JPEG, PNG, WebP, SVG')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5MB)
    if (file.size > 5 * 1024 * 1024) {
      alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5MB')
      return
    }

    try {
      setUploadingSupplierLogo(true)
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–æ–≤–æ–≥–æ –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', selectedSupplier.id)

      let logoUrl: string;

      try {
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        const fileExt = file.name.split('.').pop()
        const fileName = `logo_${Date.now()}_${Math.random().toString(36).substring(7)}.${fileExt}`

        // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage
        const { supabase } = await import('@/lib/supabaseClient')
        const { data, error } = await supabase.storage
          .from('supplier-logos')
          .upload(fileName, file)

        if (error) {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage:', error.message)
          throw error
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
        const { data: urlData } = supabase.storage
          .from('supplier-logos')
          .getPublicUrl(fileName)
        
        logoUrl = urlData.publicUrl
        console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Supabase Storage:', logoUrl)

      } catch (storageError) {
        console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –Ω–∞ Base64:', storageError)
        // Fallback –Ω–∞ Base64
        logoUrl = await convertToBase64(file)
        console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ Base64')
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –Ω–æ–≤—ã–º –ª–æ–≥–æ—Ç–∏–ø–æ–º
      const response = await fetch('/api/catalog/user-suppliers', {
        method: 'PATCH',
        headers: { 
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`,
        },
        body: JSON.stringify({ 
          id: selectedSupplier.id,
          logo_url: logoUrl 
        })
      })

      const result = await response.json()

      if (!response.ok) {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞')
      }

      console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω:', result.supplier)
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º selectedSupplier —Å –Ω–æ–≤—ã–º –ª–æ–≥–æ—Ç–∏–ø–æ–º + cache busting
      const logoUrlWithCacheBuster = logoUrl.includes('data:') 
        ? logoUrl  // Base64 –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ cache busting
        : `${logoUrl}?v=${Date.now()}` // –î–æ–±–∞–≤–ª—è–µ–º timestamp –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

      setSelectedSupplier({
        ...selectedSupplier,
        logo_url: logoUrlWithCacheBuster,
        updated_at: new Date().toISOString() // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
      })

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
      await loadSuppliersFromAPI()

      alert('‚úÖ –õ–æ–≥–æ—Ç–∏–ø —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!')

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –ª–æ–≥–æ—Ç–∏–ø–∞:', error)
      alert(`–û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –ª–æ–≥–æ—Ç–∏–ø–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setUploadingSupplierLogo(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
  const openLogoFileDialog = () => {
    if (logoInputRef) {
      logoInputRef.click()
    }
  }

  // –ù–û–í–û–ï: –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º —Ç–æ–≤–∞—Ä–∞
  const openProductModal = (product: any) => {
    setSelectedProduct(product)
    setShowProductModal(true)
  }

  const closeProductModal = () => {
    setSelectedProduct(null)
    setShowProductModal(false)
  }

  // üéØ –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ï–ñ–ò–ú–ê –ö–ê–¢–ï–ì–û–†–ò–ô
  const handleCategorySelect = (category: CatalogCategory) => {
    setSelectedCategoryData(category)
    // –£–±—Ä–∞–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ - —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  }

  // üõí –§–£–ù–ö–¶–ò–ò –ö–û–†–ó–ò–ù–´
  const addToCart = (product: any) => {
    const existingItem = cart.find(item => item.id === product.id)
    
    if (existingItem) {
      setCart(cart.map(item => 
        item.id === product.id 
          ? { ...item, quantity: item.quantity + 1, total_price: (item.quantity + 1) * parseFloat(item.price) }
          : item
      ))
    } else {
      // –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      if (cart.length === 0) {
        console.log('üîç –ü–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞:', JSON.stringify(product, null, 2))
        const supplierName = product.supplier_company_name || product.supplier_name
        setActiveSupplier(supplierName)
        console.log('üîí –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫:', supplierName)
      }
      
      const cartItem = {
        ...product,
        quantity: 1,
        total_price: parseFloat(product.price) || 0,
        room_type: catalogMode === 'categories' ? 'verified' : 'user',
        room_icon: catalogMode === 'categories' ? 'üß°' : 'üîµ'
      }
      setCart([...cart, cartItem])
    }
  }

  const removeFromCart = (productId: string) => {
    const newCart = cart.filter(item => item.id !== productId)
    setCart(newCart)
    
    // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ —Å—Ç–∞–ª–∞ –ø—É—Å—Ç–æ–π, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    if (newCart.length === 0) {
      setActiveSupplier(null)
      console.log('üîì –°–±—Ä–æ—à–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ - –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')
    }
  }

  const updateCartQuantity = (productId: string, quantity: number) => {
    if (quantity <= 0) {
      removeFromCart(productId)
      return
    }
    
    setCart(cart.map(item => 
      item.id === productId 
        ? { ...item, quantity, total_price: quantity * parseFloat(item.price) }
        : item
    ))
  }

  const getTotalItems = () => {
    return cart.reduce((sum, item) => sum + item.quantity, 0)
  }

  const getTotalPrice = () => {
    return cart.reduce((sum, item) => sum + item.total_price, 0)
  }

  const createProjectFromCart = async () => {
    if (cart.length === 0) return
    
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –≤ –ë–î –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –≤ –ë–î...')
      
      // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (–≤—Å–µ —Ç–æ–≤–∞—Ä—ã –æ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)
      const firstItem = cart[0]
      const supplierInfo = {
        id: firstItem.supplier_id,
        name: firstItem.supplier_name || firstItem.supplier_company_name,
        company_name: firstItem.supplier_company_name || firstItem.supplier_name,
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ room_type –µ—Å–ª–∏ –µ—Å—Ç—å
        type: firstItem.room_type === 'verified' ? 'verified' : 
              firstItem.room_type === 'user' ? 'user' : 
              selectedRoom === 'orange' ? 'verified' : 'user'
      }
      
      // üéØ –ü–û–õ–£–ß–ê–ï–ú –ü–û–õ–ù–´–ï –î–ê–ù–ù–´–ï –ü–û–°–¢–ê–í–©–ò–ö–ê –ò–ó –ë–î
      console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierInfo.id, '—Ç–∏–ø:', supplierInfo.type)
      let fullSupplierData = null
      
      try {
        const table = supplierInfo.type === 'verified' ? 'catalog_verified_suppliers' : 'catalog_user_suppliers'
        const { data: supplierFromDB, error: supplierError } = await supabase
          .from(table)
          .select('id, name, company_name, category, country, city, payment_methods, bank_accounts, crypto_wallets, p2p_cards')
          .eq('id', supplierInfo.id)
          .single()
        
        if (supplierFromDB && !supplierError) {
          fullSupplierData = supplierFromDB
          console.log('‚úÖ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', fullSupplierData)
        } else {
          console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierError)
        }
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', err)
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
      const cartData = {
        user_id: (await supabase.auth.getUser()).data?.user?.id,
        supplier_id: supplierInfo.id,
        supplier_type: supplierInfo.type,
        supplier_name: supplierInfo.name,
        supplier_company_name: supplierInfo.company_name,
        supplier_data: {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
          room_type: firstItem.room_type,
          category: fullSupplierData?.category || firstItem.supplier_category,
          country: fullSupplierData?.country || firstItem.supplier_country,
          city: fullSupplierData?.city || firstItem.supplier_city,
          // üéØ –î–û–ë–ê–í–õ–Ø–ï–ú –†–ï–ö–í–ò–ó–ò–¢–´ –ü–û–°–¢–ê–í–©–ò–ö–ê
          payment_methods: fullSupplierData?.payment_methods || [],
          bank_accounts: fullSupplierData?.bank_accounts || [],
          crypto_wallets: fullSupplierData?.crypto_wallets || [],
          p2p_cards: fullSupplierData?.p2p_cards || [],
        },
        cart_items: {
          items: cart.map(item => ({
            id: item.id,
            product_id: item.product_id || item.id,
            product_name: item.name || item.product_name,
            supplier_id: item.supplier_id,
            supplier_name: item.supplier_name,
            price: item.price,
            quantity: item.quantity,
            total_price: item.total_price,
            currency: item.currency || 'USD',
            image_url: item.image_url || item.images?.[0],
            sku: item.item_code || item.sku,
            description: item.description,
            min_order: item.min_order
          }))
        },
        items_count: getTotalItems(),
        total_amount: getTotalPrice(),
        currency: cart[0]?.currency || 'USD',
        source: 'catalog'
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
      const { data: savedCart, error } = await supabase
        .from('project_carts')
        .insert(cartData)
        .select()
        .single()
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã:', error)
        // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥
        if (error.message?.includes('does not exist')) {
          console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ project_carts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º URL –º–µ—Ç–æ–¥')
          router.push(`/dashboard/create-project?from_cart=true&cart=${encodeURIComponent(JSON.stringify(cart))}`)
          return
        }
        throw error
      }
      
      console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID:', savedCart.id)
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞ —Å ID –∫–æ—Ä–∑–∏–Ω—ã
      router.push(`/dashboard/create-project?from_cart=true&cart_id=${savedCart.id}`)
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error)
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ URL
      router.push(`/dashboard/create-project?from_cart=true&cart=${encodeURIComponent(JSON.stringify(cart))}`)
    }
  }

  return (
    <div className="min-h-screen bg-background">
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ Supabase */}
      {!supabaseConnected && (
        <div className="bg-red-50 border-l-4 border-red-500 p-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center">
              <div className="text-red-400 mr-3">‚ö†Ô∏è</div>
              <div>
                <p className="text-red-800 font-medium">–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</p>
                <p className="text-red-600 text-sm">{supabaseError || '–†–∞–±–æ—Ç–∞–µ–º –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ'}</p>
              </div>
            </div>
            <button 
              onClick={() => {
                console.log('Catalog refresh requested');
                window.location.reload(); // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å
              }} 
              className="text-red-600 hover:text-red-800 text-sm font-medium"
            >
              –û–±–Ω–æ–≤–∏—Ç—å
            </button>
          </div>
        </div>
      )}
      {/* Header —Å —á–µ—Ä–Ω—ã–º–∏ –ª–∏–Ω–∏—è–º–∏ */}
      <div className="border-b-2 border-black">
        <div className="max-w-7xl mx-auto px-8 py-8">
          <div className="flex items-center justify-between mb-8">
              <div>
                             <h1 className="text-3xl font-light text-black tracking-wide">–ö–∞—Ç–∞–ª–æ–≥ Get2B</h1>
               <div className="w-24 h-0.5 bg-black mt-2"></div>
               <p className="text-gray-600 mt-3 font-light">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è</p>
              </div>
              
            <div className="flex items-center gap-6">
              <div className="text-right">
                <div className="text-2xl font-light text-black">{filteredSuppliers.length}</div>
                <div className="text-sm text-gray-500 uppercase tracking-wider">–ê–ö–¢–ò–í–ù–´–•</div>
                  </div>
              <div className="w-px h-12 bg-black"></div>
              {/* üõí –ö–Ω–æ–ø–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */}
              <button
                onClick={() => setShowCart(!showCart)}
                className={`relative p-3 border-2 border-black transition-all duration-300 ${
                  showCart 
                    ? 'bg-green-600 text-white border-green-600' 
                    : 'bg-white text-black hover:bg-gray-50'
                }`}
              >
                <ShoppingCart className="w-5 h-5" />
                {getTotalItems() > 0 && (
                  <span className="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-bold">
                    {getTotalItems()}
                  </span>
                )}
              </button>

              <button 
                onClick={() => setShowAddSupplierModal(true)}
                className="border-2 border-black text-black px-6 py-2 hover:bg-black hover:text-white transition-all duration-300 uppercase tracking-wider text-sm font-medium flex items-center gap-2"
              >
                <Plus className="w-4 h-4" />
                –î–û–ë–ê–í–ò–¢–¨
              </button>
              {/* –≠–•–û –ö–ê–†–¢–û–ß–ö–ò: –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
              {activeMode === 'clients' && (
                <button 
                  onClick={() => {
                    setShowEchoCardsModal(true)
                    loadEchoCards()
                  }}
                  className="border-2 border-purple-600 text-purple-600 px-6 py-2 hover:bg-purple-600 hover:text-white transition-all duration-300 uppercase tracking-wider text-sm font-medium flex items-center gap-2"
                >
                  üîÆ –ò–ú–ü–û–†–¢ –ò–ó –ü–†–û–ï–ö–¢–û–í
                </button>
              )}
        </div>
      </div>
      </div>

        {/* –ì–ª–∞–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
          <div className="flex items-center justify-between mb-4">
            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ */}
            <div className="flex border-2 border-black rounded-lg overflow-hidden shadow-sm">
              <button
                onClick={() => setCatalogMode('suppliers')}
                className={`px-6 py-3 text-sm font-medium transition-all duration-300 ${
                  catalogMode === 'suppliers'
                    ? 'bg-blue-600 text-white'
                    : 'bg-white text-black hover:bg-gray-50'
                }`}
              >
                üìã –ü–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
              </button>
              <button
                onClick={() => setCatalogMode('categories')}
                className={`px-6 py-3 text-sm font-medium border-l-2 border-black transition-all duration-300 ${
                  catalogMode === 'categories'
                    ? 'bg-green-600 text-white'
                    : 'bg-white text-black hover:bg-gray-50'
                }`}
              >
                üéØ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
              </button>
            </div>

            {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞) */}
            <div className="flex border-2 border-black rounded-lg overflow-hidden">
              <button
                onClick={() => {
                  setSelectedRoom('orange')
                  setSelectedCategoryData(null) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–º–Ω–∞—Ç—ã
                }}
                className={`px-6 py-3 text-sm font-medium transition-all duration-300 ${
                  selectedRoom === 'orange'
                    ? 'bg-orange-600 text-white'
                    : 'bg-white text-black hover:bg-orange-50'
                }`}
                title="–ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏"
              >
                üß° –û—Ä–∞–Ω–∂–µ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞
              </button>
              <button
                onClick={() => {
                  setSelectedRoom('blue')
                  setSelectedCategoryData(null) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–º–Ω–∞—Ç—ã
                }}
                className={`px-6 py-3 text-sm font-medium border-l-2 border-black transition-all duration-300 ${
                  selectedRoom === 'blue'
                    ? 'bg-blue-600 text-white'
                    : 'bg-white text-black hover:bg-blue-50'
                }`}
                title="–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏"
              >
                üîµ –°–∏–Ω—è—è –∫–æ–º–Ω–∞—Ç–∞
              </button>
            </div>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ –¥–ª—è —Ä–µ–∂–∏–º–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ */}
          {catalogMode === 'suppliers' && (
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-4">
                <div className="relative">
                  <div className="absolute left-4 top-1/2 transform -translate-y-1/2">
                    <Search className="w-4 h-4 text-gray-400" />
                  </div>
                  <input
                    type="text"
                    placeholder="–ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="pl-12 pr-4 py-3 border-2 border-black focus:outline-none focus:border-gray-400 w-80 font-light tracking-wide"
                  />
                </div>
                
                <select
                  value={selectedCategoryFilter}
                  onChange={(e) => setSelectedCategoryFilter(e.target.value)}
                  className="border-2 border-black px-4 py-3 focus:outline-none focus:border-gray-400 font-medium uppercase tracking-wider text-sm"
                >
                  {categories.map(category => (
                    <option key={category.value} value={category.value}>
                      {category.label}
                    </option>
                  ))}
                </select>
              </div>

              {/* –°—á–µ—Ç—á–∏–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ */}
              <div className="text-sm text-gray-600">
                {selectedRoom === 'orange' ? 
                  `üß° Get2B –∫–∞—Ç–∞–ª–æ–≥: ${verifiedSuppliers.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤` : 
                  `üîµ –í–∞—à–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏: ${realSuppliers.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤`
                }
              </div>
            </div>
          )}
        </div>

        {/* Content */}
        <div className={catalogMode === 'categories' ? "w-full px-8 py-12" : "max-w-7xl mx-auto px-8 py-12"}>
        {catalogMode === 'categories' ? (
          // üéØ –†–µ–∂–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
          <div className="space-y-6">
            {!selectedCategoryData ? (
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä—è–º–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
              <div>
                <div className="mb-6">
                  <div>
                    <h2 className="text-xl font-semibold mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤</h2>
                    <p className="text-gray-600">–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç</p>
                  </div>
                </div>
                {/* –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
                <div className="bg-white border-2 border-gray-200 rounded-lg p-6">
                  {authLoading ? (
                    <div className="p-8 text-center">
                      <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
                      <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...</p>
                    </div>
                  ) : (
                    <InlineCategoryList 
                      onCategorySelect={handleCategorySelect}
                      selectedRoom={selectedRoom}
                    />
                  )}
                </div>
              </div>
            ) : (
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
              <div>
                {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <div className="flex items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <button
                      onClick={() => setSelectedCategoryData(null)}
                      className="flex items-center gap-2 text-gray-600 hover:text-gray-800 transition-colors"
                    >
                      <ArrowLeft className="w-4 h-4" />
                      –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                    </button>
                    <div className="w-px h-6 bg-gray-300"></div>
                    <h2 className="text-xl font-medium text-gray-800">
                      {selectedCategoryData.icon} {selectedCategoryData.name}
                    </h2>
                    <span className="text-sm text-gray-500">
                      ({selectedCategoryData.products_count} —Ç–æ–≤–∞—Ä–æ–≤)
                    </span>
                  </div>
                  
                  {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —É–±—Ä–∞–Ω–∞ - —Ç–µ–ø–µ—Ä—å –≤ –∫–æ—Ä–∑–∏–Ω–µ */}
                </div>

                {/* –°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
                <ProductGridByCategory
                  selectedCategory={selectedCategoryData?.name || selectedCategoryData?.category || ''}
                  token={authToken}
                  onAddToCart={addToCart}
                  cart={cart}
                  selectedRoom={selectedRoom}
                  activeSupplier={activeSupplier}
                />
              </div>
            )}
          </div>
        ) : catalogMode === 'suppliers' && selectedRoom === 'blue' ? (
          // –°–∏–Ω—è—è –∫–æ–º–Ω–∞—Ç–∞ - –≤–∞—à–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
          <div className="space-y-6">
            {loadingSuppliers ? (
              <div className="text-center py-12">
                <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...</div>
              </div>
            ) : filteredSuppliers.length === 0 ? (
              <div className="text-center py-12">
                <div className="text-lg text-gray-600">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</div>
                <div className="text-sm text-gray-500 mt-2">–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–î–û–ë–ê–í–ò–¢–¨"</div>
                <button 
                  onClick={() => setShowAddSupplierModal(true)}
                  className="mt-4 bg-blue-600 text-white px-6 py-2 hover:bg-blue-700 transition-colors"
                >
                  –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                </button>
              </div>
            ) : (
              filteredSuppliers.map((supplier: any) => (
              <div key={supplier.id} className="border-2 border-black p-8 hover:shadow-2xl transition-all duration-300 group">
                                 <div className="flex items-start justify-between">
                   <div className="flex items-start gap-6 flex-1">
                     {/* Logo - —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π */}
                     <div className="w-32 h-32 border-2 border-black flex items-center justify-center bg-gray-50">
                       {supplier.logo_url ? (
                         <img 
                           src={supplier.logo_url} 
                           alt={`–õ–æ–≥–æ—Ç–∏–ø ${supplier.name || supplier.company_name}`}
                           className="w-full h-full object-contain"
                         />
                       ) : (
                       <div className="bg-red-100 border-2 border-red-300 text-center font-bold p-4 flex flex-col items-center justify-center h-full">
                         <Building className="w-16 h-16 mb-2 text-red-500" />
                         <div className="text-sm text-red-700 font-bold">
                           –õ–û–ì–û–¢–ò–ü –û–¢–°–£–¢–°–¢–í–£–ï–¢
                         </div>
                         <div className="text-xs text-red-600 mt-1">
                           {(supplier.company_name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è').substring(0, 15)}
                         </div>
                       </div>
                       )}
                     </div>

                     <div className="flex-1">
                       {/* Header */}
                       <div className="flex items-center gap-4 mb-6">
                         <h3 className="text-2xl font-light text-black tracking-wide">
                           {supplier.name && supplier.name !== '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞' 
                             ? supplier.name 
                             : supplier.company_name && supplier.company_name !== '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏'
                             ? supplier.company_name
                             : '–ü–æ—Å—Ç–∞–≤—â–∏–∫ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
                           }
                         </h3>
                         <div className="w-px h-6 bg-black"></div>
                         <span className="bg-blue-600 text-white px-3 py-1 text-xs uppercase tracking-wider font-medium">
                           {supplier.category || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
                         </span>
                         {supplier.source_type === 'extracted_from_7steps' && (
                         <span className="bg-green-600 text-white px-3 py-1 text-xs uppercase tracking-wider font-medium">
                           –ò–ó –ü–†–û–ï–ö–¢–û–í
                         </span>
                         )}
                         {supplier.source_type === 'user_added' && (
                         <span className="bg-blue-100 text-blue-800 px-3 py-1 text-xs uppercase tracking-wider font-medium">
                           –î–û–ë–ê–í–õ–ï–ù –í–†–£–ß–ù–£–Æ
                         </span>
                         )}
                       </div>
                    
                       {/* Location */}
                       <div className="flex items-center gap-3 mb-6">
                         <MapPin className="w-4 h-4 text-blue-600" />
                         <span className="text-sm">
                           {supplier.city && supplier.city !== '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' ? supplier.city : '–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω'}, {supplier.country}
                         </span>
                       </div>

                       {/* Description */}
                       {supplier.description && supplier.description !== '–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏' && (
                         <div className="mb-4">
                           <p className="text-sm text-gray-600">{supplier.description}</p>
                         </div>
                       )}

                       {/* Project Statistics - –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
                       {(supplier.total_projects > 0 || supplier.total_spent > 0) && (
                         <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded">
                           <div className="flex items-center gap-4 text-sm">
                             <span className="text-blue-700 font-medium">
                               üìä –ü—Ä–æ–µ–∫—Ç–æ–≤: {supplier.total_projects || 0}
                             </span>
                             {supplier.successful_projects > 0 && (
                               <span className="text-green-600">
                                 ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {supplier.successful_projects}
                               </span>
                             )}
                             {supplier.total_spent > 0 && (
                               <span className="text-blue-600">
                                 üí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${supplier.total_spent}
                               </span>
                             )}
                           </div>
                         </div>
                       )}

                       {/* Specialties */}
                       <div>
                         <div className="flex flex-wrap gap-3">
                           {(Array.isArray(supplier.specialties) ? supplier.specialties : [])
                             .filter((specialty: any) => specialty && specialty.trim() && specialty !== 'NULL')
                             .map((specialty: string, index: number) => (
                             <span key={index} className="border border-blue-600 text-blue-600 px-3 py-1 text-xs uppercase tracking-wider">
                               {specialty}
                             </span>
                           ))}
                           {(!Array.isArray(supplier.specialties) || supplier.specialties.length === 0 || 
                             supplier.specialties.filter((s: any) => s && s.trim() && s !== 'NULL').length === 0) && (
                             <span className="text-xs text-gray-400">
                               {supplier.source_type === 'extracted_from_7steps' 
                                 ? '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤' 
                                 : '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã'
                               }
                             </span>
                           )}
                         </div>
                       </div>
                     </div>
                      </div>
                      
                   {/* Stats + Actions - –ø—Ä–∏–±–ª–∏–∂–µ–Ω—ã –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É */}
                   <div className="flex items-start gap-6 ml-4">
                     {/* Stats Grid - –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ —Å–ø—Ä–∞–≤–∞ */}
                     <div className="grid grid-cols-1 gap-4">
                       <div className="border-l-4 border-blue-600 pl-4">
                         <div className="text-2xl font-light text-black">{supplier.min_order || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                         <div className="text-xs text-gray-500 uppercase tracking-wider">–ú–∏–Ω. –∑–∞–∫–∞–∑</div>
                      </div>
                       <div className="border-l-4 border-blue-600 pl-4">
                         <div className="text-2xl font-light text-black">{supplier.response_time || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                         <div className="text-xs text-gray-500 uppercase tracking-wider">–û—Ç–≤–µ—Ç</div>
                      </div>
                       <div className="border-l-4 border-blue-600 pl-4">
                         <div className="text-2xl font-light text-black">{supplier.employees || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                         <div className="text-xs text-gray-500 uppercase tracking-wider">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</div>
                      </div>
                    </div>
                    
                                          {/* Actions */}
                     <div className="flex flex-col gap-3">
                       <button 
                         onClick={() => handleStartProject(supplier)}
                         className="bg-blue-600 text-white px-6 py-3 hover:bg-blue-700 transition-colors uppercase tracking-wider text-sm font-medium"
                       >
                         –ù–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                       </button>
                       <button 
                         onClick={() => {
                           setSelectedSupplier(supplier)
                           setModalTab('info')
                           // –°–∏–Ω—è—è –∫–æ–º–Ω–∞—Ç–∞ = user suppliers
                           loadSupplierProducts(supplier.id, 'user')
                         }}
                         className="border-2 border-black text-black px-6 py-3 hover:bg-black hover:text-white transition-all uppercase tracking-wider text-sm font-medium"
                       >
                         –ü—Ä–æ—Ñ–∏–ª—å
                       </button>
                       <button 
                         onClick={() => handleEditSupplier(supplier)}
                         className="border border-green-600 text-green-600 px-6 py-3 hover:bg-green-600 hover:text-white transition-all uppercase tracking-wider text-sm font-medium"
                       >
                         ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                       </button>
                       <button className="border border-blue-600 text-blue-600 px-6 py-3 hover:bg-blue-600 hover:text-white transition-all uppercase tracking-wider text-sm font-medium">
                         –ò—Å—Ç–æ—Ä–∏—è
                       </button>
                     </div>
                  </div>
                      </div>
                      </div>
             ))
           )}
                    </div>
        ) : catalogMode === 'suppliers' && selectedRoom === 'orange' ? (
          // –û—Ä–∞–Ω–∂–µ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ - Get2B –∫–∞—Ç–∞–ª–æ–≥ —Å AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
          <div className="space-y-8">
            {/* AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–≤–µ—Ä—Ö—É */}
            {loadingRecommendations ? (
              <div className="bg-orange-50 border-2 border-orange-200 p-6">
                <div className="text-center">
                  <div className="text-lg text-orange-800">üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è...</div>
                  <div className="text-sm text-orange-600 mt-2">–ì–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</div>
                </div>
              </div>
            ) : recommendations && (recommendations.top_suppliers?.length > 0 || recommendations.verified_suppliers?.length > 0) ? (
              <div className="space-y-6">
                {/* –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                {recommendations.top_suppliers?.length > 0 && (
                  <div className="bg-gradient-to-r from-purple-50 to-orange-50 border-2 border-orange-300 p-6">
                    <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider flex items-center gap-2">
                      üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å
                      <span className="bg-orange-500 text-white px-2 py-1 text-xs rounded">AI</span>
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                      {recommendations.top_suppliers.slice(0, 3).map((supplier: any, index: number) => (
                        <div key={index} className="bg-white border border-orange-300 p-4 rounded shadow-sm">
                          <h4 className="font-medium text-orange-900">{supplier.supplier_name}</h4>
                          <div className="text-sm text-orange-700 mt-2">
                            <div className="flex items-center gap-1">
                              <span className="text-green-600">‚úÖ</span>
                              –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {Math.round((supplier.success_rate || 0) * 100)}%
                            </div>
                            <div>üìä –ü—Ä–æ–µ–∫—Ç–æ–≤: {supplier.total_projects || 0}</div>
                            <div>üí∞ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${supplier.avg_project_value?.toFixed(2) || 'N/A'}</div>
                          </div>
                          <div className="mt-3 text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded">
                            –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã */}
                {recommendations.trending_products?.length > 0 && (
                  <div className="bg-green-50 border-2 border-green-300 p-6">
                    <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider flex items-center gap-2">
                      üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ
                      <span className="bg-green-500 text-white px-2 py-1 text-xs rounded">–¢–†–ï–ù–î</span>
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
                      {recommendations.trending_products.slice(0, 4).map((product: any, index: number) => (
                        <div key={index} className="bg-white border border-green-300 p-3 rounded shadow-sm">
                          <h4 className="font-medium text-green-900 text-sm">{product.product_name}</h4>
                          <div className="text-xs text-green-700 mt-2">
                            <div>üè≠ {product.supplier_name}</div>
                            <div>üíµ ${product.unit_price}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            ) : null}

            {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ç–∞–ª–æ–≥ Get2B —Å AI-—É–ª—É—á—à–µ–Ω–∏—è–º–∏ */}
            <div>
              <h3 className="text-xl font-medium text-black mb-6 uppercase tracking-wider flex items-center gap-2">
                ‚≠ê –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ Get2B –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
                {recommendations && <span className="bg-orange-500 text-white px-2 py-1 text-xs rounded">–£–ú–ù–ê–Ø –°–û–†–¢–ò–†–û–í–ö–ê</span>}
              </h3>
              
              {loadingVerified ? (
                <div className="text-center py-12">
                  <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —É–º–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ Get2B...</div>
                </div>
              ) : filteredSuppliers.length === 0 ? (
                <div className="text-center py-12">
                  <div className="text-lg text-gray-600">–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>
                  <div className="text-sm text-gray-500 mt-2">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</div>
                </div>
              ) : (
                <div className="space-y-6">
                  {filteredSuppliers.map((supplier: any) => {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫ –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö
                    const isRecommended = recommendations?.verified_suppliers?.some((rec: any) => 
                      rec.name === supplier.name || rec.company_name === supplier.company_name
                    )
                    const isTopRated = (supplier.rating || 0) >= 4.5
                    
                    return (
                      <div key={supplier.id} className={`border-2 p-8 hover:shadow-2xl transition-all duration-300 group ${
                        isRecommended ? 'border-orange-500 bg-orange-50' : 'border-black'
                      }`}>
                        <div className="flex items-start justify-between">
                          <div className="flex items-start gap-6 flex-1">
                            {/* Logo */}
                            <div className="w-32 h-32 border-2 border-black flex items-center justify-center bg-gray-50">
                              {supplier.logo_url ? (
                                <img 
                                  src={supplier.logo_url} 
                                  alt={`–õ–æ–≥–æ—Ç–∏–ø ${supplier.name || supplier.company_name}`}
                                  className="w-full h-full object-contain"
                                />
                              ) : (
                                <div className="bg-orange-100 border-2 border-orange-300 text-center font-bold p-4 flex flex-col items-center justify-center h-full">
                                  <Building className="w-16 h-16 mb-2 text-orange-500" />
                                  <div className="text-sm text-orange-700 font-bold">
                                    GET2B
                                  </div>
                                  <div className="text-xs text-orange-600 mt-1">
                                    –ê–ö–ö–†–ï–î–ò–¢–û–í–ê–ù
                                  </div>
                                </div>
                              )}
                            </div>

                            <div className="flex-1">
                              {/* Header —Å AI –±–µ–π–¥–∂–∞–º–∏ */}
                              <div className="flex items-center gap-4 mb-6">
                                <h3 className="text-2xl font-light text-black tracking-wide">
                                  {supplier.name || supplier.company_name || '–ü–æ—Å—Ç–∞–≤—â–∏–∫'}
                                </h3>
                                <div className="w-px h-6 bg-black"></div>
                                <span className="bg-orange-500 text-white px-3 py-1 text-xs uppercase tracking-wider font-medium">
                                  {supplier.specialization || 'Get2B'}
                                </span>
                                
                                {/* AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±–µ–π–¥–∂–∏ */}
                                {isRecommended && (
                                  <span className="bg-gradient-to-r from-purple-500 to-orange-500 text-white px-3 py-1 text-xs uppercase tracking-wider font-medium">
                                    üß† –†–ï–ö–û–ú–ï–ù–î–£–ï–ú
                                  </span>
                                )}
                                {isTopRated && (
                                  <span className="bg-yellow-500 text-white px-3 py-1 text-xs uppercase tracking-wider font-medium">
                                    ‚≠ê –¢–û–ü –†–ï–ô–¢–ò–ù–ì
                                  </span>
                                )}
                              </div>
                           
                              {/* Location */}
                              <div className="flex items-center gap-3 mb-6">
                                <MapPin className="w-4 h-4 text-orange-500" />
                                <span className="text-sm">
                                  {supplier.city || '–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω'}, {supplier.country || '–ö–∏—Ç–∞–π'}
                                </span>
                              </div>

                              {/* Description */}
                              {supplier.description && (
                                <div className="mb-4">
                                  <p className="text-sm text-gray-600">{supplier.description}</p>
                                </div>
                              )}

                              {/* AI Insights */}
                              {isRecommended && recommendations && (
                                <div className="mb-4 p-3 bg-gradient-to-r from-purple-100 to-orange-100 border border-orange-300 rounded">
                                  <div className="text-sm text-orange-800">
                                    <div className="font-medium mb-1">üß† AI –∞–Ω–∞–ª–∏–∑:</div>
                                    <div>‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫–∞–∑–æ–≤</div>
                                    <div>‚Ä¢ –í—ã—Å–æ–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏</div>
                                    <div>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
                                  </div>
                                </div>
                              )}

                              {/* Certifications */}
                              <div>
                                <div className="flex flex-wrap gap-3">
                                  {getCertifications(supplier.certificates).map((cert: string, index: number) => (
                                    <span key={index} className="border border-orange-500 text-orange-500 px-3 py-1 text-xs uppercase tracking-wider">
                                      {cert}
                                    </span>
                                  ))}
                                  {getCertifications(supplier.certificates).length === 0 && (
                                    <span className="text-xs text-gray-400">
                                      –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É—Ç–æ—á–Ω—è—é—Ç—Å—è
                                    </span>
                                  )}
                                </div>
                              </div>
                            </div>
                          </div>
                          
                          {/* Stats + Actions */}
                          <div className="flex items-start gap-6 ml-4">
                            {/* Stats Grid */}
                            <div className="grid grid-cols-1 gap-4">
                              <div className="border-l-4 border-orange-500 pl-4">
                                <div className="text-2xl font-light text-black">
                                  {supplier.rating ? `${supplier.rating}/5` : '–ù–æ–≤—ã–π'}
                                </div>
                                <div className="text-xs text-gray-500 uppercase tracking-wider">–†–µ–π—Ç–∏–Ω–≥</div>
                              </div>
                              <div className="border-l-4 border-orange-500 pl-4">
                                <div className="text-2xl font-light text-black">{supplier.min_order || '–ì–∏–±–∫–æ'}</div>
                                <div className="text-xs text-gray-500 uppercase tracking-wider">–ú–∏–Ω. –∑–∞–∫–∞–∑</div>
                              </div>
                              <div className="border-l-4 border-orange-500 pl-4">
                                <div className="text-2xl font-light text-black">{supplier.response_time || '24—á'}</div>
                                <div className="text-xs text-gray-500 uppercase tracking-wider">–û—Ç–≤–µ—Ç</div>
                              </div>
                            </div>
                            
                            {/* Actions */}
                            <div className="flex flex-col gap-3">
                              <button
                                onClick={() => handleAddSupplierToPersonal(supplier)}
                                className={`px-6 py-3 hover:bg-opacity-80 transition-colors uppercase tracking-wider text-sm font-medium ${
                                  isRecommended 
                                    ? 'bg-gradient-to-r from-purple-600 to-orange-600 text-white' 
                                    : 'bg-orange-500 text-white hover:bg-orange-600'
                                }`}
                              >
                                {isRecommended ? 'üß† –î–æ–±–∞–≤–∏—Ç—å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º)' : '–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π —Å–ø–∏—Å–æ–∫'}
                              </button>
                              <button 
                                onClick={() => {
                                  setSelectedSupplier(supplier)
                                  setModalTab('info')
                                  loadSupplierProducts(supplier.id, 'verified')
                                }}
                                className="border-2 border-black text-black px-6 py-3 hover:bg-black hover:text-white transition-all uppercase tracking-wider text-sm font-medium"
                              >
                                –ü—Ä–æ—Ñ–∏–ª—å
                              </button>
                              <button className="border border-orange-500 text-orange-500 px-6 py-3 hover:bg-orange-500 hover:text-white transition-all uppercase tracking-wider text-sm font-medium">
                                –°–≤—è–∑–∞—Ç—å—Å—è
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    )
                  })}
                </div>
              )}
            </div>
          </div>
        ) : catalogMode === 'suppliers' && selectedRoom === 'orange' && recommendations ? (
          // –£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã)
          <div className="space-y-6">
            {loadingRecommendations ? (
              <div className="text-center py-12">
                <div className="text-lg text-gray-600">üß† –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...</div>
                <div className="text-sm text-gray-500 mt-2">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</div>
              </div>
            ) : recommendationsError ? (
              <div className="text-center py-12">
                <div className="text-lg text-red-600">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</div>
                <div className="text-sm text-gray-500 mt-2">{recommendationsError}</div>
                <button 
                  onClick={loadRecommendations}
                  className="mt-4 bg-purple-600 text-white px-6 py-2 hover:bg-purple-700 transition-colors"
                >
                  –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </button>
              </div>
            ) : recommendations ? (
              <div className="space-y-8">
                {/* –¢–æ–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ */}
                {recommendations.top_suppliers?.length > 0 && (
                  <div className="border-2 border-purple-600 p-6">
                    <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">
                      üèÜ –¢–æ–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                      {recommendations.top_suppliers.slice(0, 6).map((supplier: any, index: number) => (
                        <div key={index} className="border border-purple-300 p-4 bg-purple-50">
                          <h4 className="font-medium text-purple-900">{supplier.supplier_name}</h4>
                          <div className="text-sm text-purple-700 mt-2">
                            <div>‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {Math.round(supplier.success_rate * 100)}%</div>
                            <div>üìä –ü—Ä–æ–µ–∫—Ç–æ–≤: {supplier.total_projects}</div>
                            <div>üí∞ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${supplier.avg_project_value?.toFixed(2) || 'N/A'}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã */}
                {recommendations.trending_products?.length > 0 && (
                  <div className="border-2 border-green-600 p-6">
                    <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">
                      üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                      {recommendations.trending_products.slice(0, 6).map((product: any, index: number) => (
                        <div key={index} className="border border-green-300 p-4 bg-green-50">
                          <h4 className="font-medium text-green-900">{product.product_name}</h4>
                          <div className="text-sm text-green-700 mt-2">
                            <div>üè≠ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {product.supplier_name}</div>
                            <div>üíµ –¶–µ–Ω–∞: ${product.unit_price}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {/* –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ */}
                {recommendations.verified_suppliers?.length > 0 && (
                  <div className="border-2 border-orange-600 p-6">
                    <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">
                      ‚≠ê –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ Get2B –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {recommendations.verified_suppliers.slice(0, 4).map((supplier: any, index: number) => (
                        <div key={index} className="border border-orange-300 p-4 bg-orange-50">
                          <h4 className="font-medium text-orange-900">{supplier.name}</h4>
                          <div className="text-sm text-orange-700 mt-2">
                            <div>üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {supplier.company_name}</div>
                            <div>‚≠ê –†–µ–π—Ç–∏–Ω–≥: {supplier.rating}/5</div>
                            <div>üè∑Ô∏è –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {supplier.specialization}</div>
                          </div>
                          <button
                            onClick={() => {
                              // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫
                              handleAddSupplierToPersonal(supplier)
                            }}
                            className="mt-3 bg-orange-600 text-white px-4 py-2 text-sm hover:bg-orange-700 transition-colors"
                          >
                            –î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π —Å–ø–∏—Å–æ–∫
                          </button>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
                <div className="bg-purple-100 border border-purple-300 p-6">
                  <h3 className="text-lg font-medium text-purple-900 mb-3">
                    üß† –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —É–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                  </h3>
                  <div className="text-sm text-purple-800 space-y-2">
                    <div>‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</div>
                    <div>‚Ä¢ –û—Ü–µ–Ω–∏–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</div>
                    <div>‚Ä¢ –ù–∞—Ö–æ–¥–∏–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ</div>
                    <div>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö Get2B –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</div>
                  </div>
                  <div className="mt-4 text-xs text-purple-600">
                    –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {new Date(recommendations.generated_at).toLocaleString('ru')}
                  </div>
                </div>
              </div>
            ) : (
              <div className="text-center py-12">
                <div className="text-lg text-gray-600">ü§ñ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π</div>
                <div className="text-sm text-gray-500 mt-2">–°–æ–∑–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–µ–∫—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</div>
              </div>
            )}
          </div>
        ) : null}
      </div>

      {/* ‚úÖ –ù–û–í–û–ï –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –° –ü–û–î–î–ï–†–ñ–ö–û–ô –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø */}
      {showAddSupplierModal && (
        <AddSupplierModal
          isOpen={showAddSupplierModal}
          onClose={() => {
            setShowAddSupplierModal(false)
            setEditingSupplier(null)
            setEchoCardForImport(null)
          }}
          onSuccess={(supplier) => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            loadSuppliersFromAPI()
            setShowAddSupplierModal(false)
            setEditingSupplier(null)
            setEchoCardForImport(null)
          }}
          echoCardData={echoCardForImport}
          editingSupplier={editingSupplier}
          targetTable="catalog_user_suppliers"
        />
      )}

      {/* ‚úÖ –°–¢–ê–†–û–ï –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û (–í–†–ï–ú–ï–ù–ù–û –°–ö–†–´–¢–û) */}
      {false && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white border-4 border-black max-w-6xl w-full h-[95vh] my-4 flex flex-col">
            {/* Header –º–æ–¥–∞–ª–∞ */}
            <div className="border-b-2 border-black p-6">
              <div className="flex items-center justify-between mb-6">
                <div className="flex items-center gap-6">
                  <div className="w-20 h-20 border-2 border-black flex items-center justify-center bg-gray-50">
                    <div className="text-gray-400 text-xs text-center font-medium">
                      LOGO
                    </div>
                  </div>
                  <div>
                    <h2 className="text-3xl font-light text-black tracking-wide">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞</h2>
                    {echoCardForImport && (
                      <div className="mt-2 mb-1">
                        <span className="bg-purple-100 text-purple-800 px-3 py-1 text-xs uppercase tracking-wider font-medium border border-purple-300">
                          üîÆ –ò–º–ø–æ—Ä—Ç –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
                        </span>
                      </div>
                    )}
                  <div className="w-24 h-0.5 bg-black mt-2"></div>
                  <p className="text-gray-600 mt-3 font-light">
                    {echoCardForImport ? '–î–æ–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ' : '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ'}
                  </p>
                  </div>
                </div>
                <button
                  onClick={() => {
                    setShowAddSupplierModal(false)
                    resetSupplierForm()
                  }}
                  className="border-2 border-black text-black px-4 py-2 hover:bg-black hover:text-white transition-all text-lg font-bold"
                >
                  ‚úï
                </button>
              </div>

              {/* –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–ª–∏–Ω–∏—è */}
              <div className="relative my-8">
                {/* –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è (—Ñ–æ–Ω) */}
                <div className="absolute top-1/2 left-0 right-0 h-2 -translate-y-1/2 bg-gray-300 rounded-full" />
                {/* –õ–∏–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ */}
                <div
                  className="absolute top-1/2 left-0 h-2 -translate-y-1/2 bg-orange-500 rounded-full transition-all duration-500"
                  style={{
                    width: supplierSteps.length === 1
                      ? '100%'
                      : `${((supplierFormStep - 1) / (supplierSteps.length - 1)) * 100}%`
                  }}
                />
                {/* –ö—Ä—É–∂–∫–∏ */}
                <div className="relative flex justify-between w-full">
                  {supplierSteps.map((step, index) => {
                    const StepIcon = step.icon
                    const isCompletedOrCurrent = index + 1 <= supplierFormStep
                    const isClickable = index + 1 <= maxSupplierStep
                    return (
                      <div key={step.id} className="flex-1 flex flex-col items-center">
                        <motion.div
                          initial={{ scale: 0 }}
                          animate={{ scale: 1 }}
                          transition={{ delay: index * 0.1, type: "spring", stiffness: 300 }}
                          className={`relative z-10 flex items-center justify-center w-14 h-14 rounded-full border-4 transition-all duration-300
                            ${isCompletedOrCurrent ? `bg-orange-500 border-orange-500${index + 1 === supplierFormStep ? ' ring-2 ring-orange-200' : ''}` : "bg-gray-300 border-gray-400"}
                            ${isClickable ? 'shadow-md shadow-orange-200' : ''}
                          `}
                        >
                          <span className={`text-lg font-bold ${isCompletedOrCurrent ? "text-white" : "text-gray-400"}`}>{toRoman(index + 1)}</span>
                        </motion.div>
                        <motion.div
                          initial={{ opacity: 0, y: 10 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: index * 0.1 + 0.2, type: "spring" }}
                          className="mt-2 text-center"
                        >
                          <div className={`text-xs font-medium uppercase tracking-wider ${isCompletedOrCurrent ? 'text-gray-900' : 'text-gray-500'}`}>{step.title}</div>
                          <div className={`text-xs ${isCompletedOrCurrent ? 'text-gray-600' : 'text-gray-400'}`}>{step.description}</div>
                        </motion.div>
                      </div>
                    )
                  })}
                </div>
              </div>
            </div>

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ñ–æ—Ä–º—ã */}
            <div className="flex-1 p-6 overflow-y-auto">
              {supplierFormStep === 1 && (
                <div className="space-y-6">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                         <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                         –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                       </label>
                       <input
                         type="text"
                         value={supplierFormData.name}
                         onChange={(e) => setSupplierFormData({...supplierFormData, name: e.target.value})}
                         className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                           supplierFormErrors.name ? 'border-red-500' : 'border-black'
                         }`}
                         placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: TechFlow Innovations"
                       />
                       {supplierFormErrors.name && (
                         <p className="mt-1 text-sm text-red-500">{supplierFormErrors.name}</p>
                       )}
                     </div>
                    
                                         <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                         –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
                       </label>
                       <input
                         type="text"
                         value={supplierFormData.company_name}
                         onChange={(e) => setSupplierFormData({...supplierFormData, company_name: e.target.value})}
                         className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                           supplierFormErrors.company_name ? 'border-red-500' : 'border-black'
                         }`}
                         placeholder="–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
                       />
                       {supplierFormErrors.company_name && (
                         <p className="mt-1 text-sm text-red-500">{supplierFormErrors.company_name}</p>
                       )}
                     </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                      </label>
                      <select
                        value={supplierFormData.category}
                        onChange={(e) => setSupplierFormData({
                          ...supplierFormData, 
                          category: e.target.value,
                          certifications: [] // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                        })}
                        className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                      >
                        {categories.map(category => (
                          <option key={category.value} value={category.value}>
                            {category.label}
                          </option>
                        ))}
                      </select>
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        –°—Ç—Ä–∞–Ω–∞
                      </label>
                      <select
                        value={supplierFormData.country}
                        onChange={(e) => setSupplierFormData({...supplierFormData, country: e.target.value})}
                        className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                      >
                        <option value="–ö–∏—Ç–∞–π">üá®üá≥ –ö–∏—Ç–∞–π</option>
                        <option value="–¢—É—Ä—Ü–∏—è">üáπüá∑ –¢—É—Ä—Ü–∏—è</option>
                        <option value="–ò–Ω–¥–∏—è">üáÆüá≥ –ò–Ω–¥–∏—è</option>
                        <option value="–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è">üá∞üá∑ –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è</option>
                        <option value="–ú–∞–ª–∞–π–∑–∏—è">üá≤üáæ –ú–∞–ª–∞–π–∑–∏—è</option>
                        <option value="–¢–∞–∏–ª–∞–Ω–¥">üáπüá≠ –¢–∞–∏–ª–∞–Ω–¥</option>
                        <option value="–í—å–µ—Ç–Ω–∞–º">üáªüá≥ –í—å–µ—Ç–Ω–∞–º</option>
                        <option value="–î—Ä—É–≥–∞—è">üåç –î—Ä—É–≥–∞—è</option>
                      </select>
                    </div>
                    
                                         <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                         –ì–æ—Ä–æ–¥
                       </label>
                       <input
                         type="text"
                         value={supplierFormData.city}
                         onChange={(e) => setSupplierFormData({...supplierFormData, city: e.target.value})}
                         className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                           supplierFormErrors.city ? 'border-red-500' : 'border-black'
                         }`}
                         placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Shenzhen"
                       />
                       {supplierFormErrors.city && (
                         <p className="mt-1 text-sm text-red-500">{supplierFormErrors.city}</p>
                       )}
                     </div>
                  </div>
                  
                                     <div>
                     <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                       –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
                     </label>
                     <textarea
                       value={supplierFormData.description}
                       onChange={(e) => setSupplierFormData({...supplierFormData, description: e.target.value})}
                       rows={4}
                       className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                         supplierFormErrors.description ? 'border-red-500' : 'border-black'
                       }`}
                       placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –µ—ë –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤..."
                     />
                     {supplierFormErrors.description && (
                       <p className="mt-1 text-sm text-red-500">{supplierFormErrors.description}</p>
                     )}
                   </div>

                  {/* –ë–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞ */}
                  <div>
                    <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                      –õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏
                    </label>
                    <div className="flex items-start gap-4">
                      {/* –ü—Ä–µ–≤—å—é –ª–æ–≥–æ—Ç–∏–ø–∞ */}
                      <div className="w-32 h-32 border-2 border-black flex items-center justify-center bg-gray-50 relative">
                        {supplierFormData.logo_url ? (
                          <img 
                            src={supplierFormData.logo_url} 
                            alt="–õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏" 
                            className="w-full h-full object-contain"
                          />
                        ) : (
                          <div className="text-gray-400 text-sm text-center font-medium">
                            LOGO
                          </div>
                        )}
                        {uploadingImages.logo && (
                          <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                            <div className="text-white text-xs">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                          </div>
                        )}
                      </div>
                      
                      {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                      <div className="flex-1">
                        <input
                          type="file"
                          accept="image/*"
                          onChange={(e) => {
                            const file = e.target.files?.[0]
                            if (file) handleLogoUpload(file)
                          }}
                          className="hidden"
                          id="logo-upload"
                        />
                        <div className="space-y-2">
                          <label
                            htmlFor="logo-upload"
                            className="block w-full px-4 py-2 border-2 border-black bg-white hover:bg-gray-50 text-center cursor-pointer transition-colors"
                          >
                            {supplierFormData.logo_url ? '–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø'}
                          </label>
                          {supplierFormData.logo_url && (
                            <button
                              type="button"
                              onClick={() => setSupplierFormData({...supplierFormData, logo_url: ''})}
                              className="block w-full px-4 py-2 border-2 border-red-500 text-red-500 hover:bg-red-50 text-center transition-colors"
                            >
                              –£–¥–∞–ª–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø
                            </button>
                          )}
                        </div>
                        <p className="text-xs text-gray-500 mt-2">
                          –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPEG, PNG, WebP, SVG<br/>
                          –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              )}

              {supplierFormStep === 2 && (
                <div className="space-y-6">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                         <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        Email
                       </label>
                       <input
                         type="email"
                         value={supplierFormData.email}
                         onChange={(e) => setSupplierFormData({...supplierFormData, email: e.target.value})}
                         className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                           supplierFormErrors.email ? 'border-red-500' : 'border-black'
                         }`}
                         placeholder="contact@company.com"
                       />
                       {supplierFormErrors.email && (
                         <p className="mt-1 text-sm text-red-500">{supplierFormErrors.email}</p>
                       )}
                     </div>
                    
                                         <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                         –¢–µ–ª–µ—Ñ–æ–Ω
                       </label>
                       <input
                         type="tel"
                         value={supplierFormData.phone}
                         onChange={(e) => setSupplierFormData({...supplierFormData, phone: e.target.value})}
                         className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                           supplierFormErrors.phone ? 'border-red-500' : 'border-black'
                         }`}
                         placeholder="+86 138 0000 0000"
                       />
                       {supplierFormErrors.phone && (
                         <p className="mt-1 text-sm text-red-500">{supplierFormErrors.phone}</p>
                       )}
                     </div>
                     
                     <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                         –í–µ–±-—Å–∞–π—Ç
                       </label>
                       <input
                         type="url"
                         value={supplierFormData.website}
                         onChange={(e) => setSupplierFormData({...supplierFormData, website: e.target.value})}
                         className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                         placeholder="https://www.company.com"
                       />
                     </div>
                     
                     <div>
                       <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                         –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ
                       </label>
                       <input
                         type="text"
                         value={supplierFormData.contact_person}
                         onChange={(e) => setSupplierFormData({...supplierFormData, contact_person: e.target.value})}
                         className={`w-full px-3 py-2 border-2 focus:outline-none focus:ring-2 focus:ring-orange-500 ${
                           supplierFormErrors.contact_person ? 'border-red-500' : 'border-black'
                         }`}
                         placeholder="–ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º"
                       />
                       {supplierFormErrors.contact_person && (
                         <p className="mt-1 text-sm text-red-500">{supplierFormErrors.contact_person}</p>
                       )}
                     </div>
                  </div>
                </div>
              )}

              {supplierFormStep === 3 && (
                <div className="space-y-6">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–ë–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ñ–∏–ª—å</h3>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑
                      </label>
                      <input
                        type="text"
                        value={supplierFormData.min_order}
                        onChange={(e) => setSupplierFormData({...supplierFormData, min_order: e.target.value})}
                        className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                        placeholder="$15,000"
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
                      </label>
                      <input
                        type="text"
                        value={supplierFormData.response_time}
                        onChange={(e) => setSupplierFormData({...supplierFormData, response_time: e.target.value})}
                        className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                        placeholder="2h"
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                      </label>
                      <input
                        type="text"
                        value={supplierFormData.employees}
                        onChange={(e) => setSupplierFormData({...supplierFormData, employees: e.target.value})}
                        className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                        placeholder="500+"
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                        –ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è
                      </label>
                      <input
                        type="text"
                        value={supplierFormData.established}
                        onChange={(e) => setSupplierFormData({...supplierFormData, established: e.target.value})}
                        className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                        placeholder="2019"
                      />
                    </div>
                  </div>
                </div>
              )}

              {supplierFormStep === 4 && (
                <div className="space-y-6">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</h3>
                  
                  {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="bg-gray-100 p-4 border border-gray-300 text-sm">
                    <p><strong>–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> {supplierFormData.category}</p>
                    <p><strong>–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:</strong> {(CATEGORY_CERTIFICATIONS.find(cat => cat.category === supplierFormData.category)?.certifications || []).join(', ') || '–ù–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤'}</p>
                  </div>
                  
                    <div>
                    <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                      –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                      </label>
                    <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                      {(CATEGORY_CERTIFICATIONS.find(cat => cat.category === supplierFormData.category)?.certifications || []).map(cert => (
                        <label key={cert} className="flex items-center gap-2 text-black">
                            <input
                              type="checkbox"
                              checked={supplierFormData.certifications.includes(cert)}
                            onChange={e => {
                                if (e.target.checked) {
                                  setSupplierFormData({
                                    ...supplierFormData,
                                    certifications: [...supplierFormData.certifications, cert]
                                  })
                                } else {
                                  setSupplierFormData({
                                    ...supplierFormData,
                                    certifications: supplierFormData.certifications.filter(c => c !== cert)
                                  })
                                }
                              }}
                            />
                          {cert}
                          </label>
                        ))}
                      </div>
                      {supplierFormErrors.certifications && (
                      <p className="text-sm text-red-500 mt-2">{supplierFormErrors.certifications}</p>
                      )}
                    </div>
                </div>
              )}

              {supplierFormStep === 5 && (
                <div className="space-y-6">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–¢–æ–≤–∞—Ä—ã –∏ –∫–∞—Ç–∞–ª–æ–≥</h3>
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ */}
                  <div className="flex justify-between items-center mb-6">
                    <div>
                      <p className="text-gray-600 text-sm">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ –∏–ª–∏ –ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ</p>
                    </div>
                    <button
                      onClick={() => {
                        const newProduct = {
                          id: Date.now().toString(),
                          name: '',
                          price: '',
                          description: '',
                          images: [],
                          specifications: {},
                          category: supplierFormData.category,
                          inStock: true,
                          minOrder: ''
                        }
                        setSupplierFormData({
                          ...supplierFormData,
                          products: [...supplierFormData.products, newProduct]
                        })
                      }}
                      className="bg-orange-500 text-white px-4 py-2 hover:bg-orange-600 transition-all text-sm font-medium uppercase tracking-wider flex items-center gap-2"
                    >
                      <Plus className="w-4 h-4" />
                      –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                    </button>
                  </div>

                  {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
                  <div className="space-y-6">
                    {supplierFormData.products.length === 0 ? (
                      <div className="border-2 border-dashed border-gray-300 p-8 text-center">
                        <Package className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                        <p className="text-gray-500 font-medium uppercase tracking-wider">–¢–æ–≤–∞—Ä—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã</p>
                        <p className="text-gray-400 text-sm mt-2">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä" –¥–ª—è –Ω–∞—á–∞–ª–∞</p>
                      </div>
                    ) : (
                      supplierFormData.products.map((product, index) => (
                        <div key={product.id} className="border-2 border-black p-6">
                          <div className="flex items-center justify-between mb-4">
                            <h4 className="text-lg font-medium text-black uppercase tracking-wider">
                              –¢–æ–≤–∞—Ä #{index + 1}
                            </h4>
                            <button
                              onClick={() => {
                                setSupplierFormData({
                                  ...supplierFormData,
                                  products: supplierFormData.products.filter(p => p.id !== product.id)
                                })
                              }}
                              className="text-red-500 hover:bg-red-50 p-2 transition-all"
                            >
                              <X className="w-4 h-4" />
                            </button>
                          </div>

                          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                              <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                                –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                              </label>
                              <input
                                type="text"
                                value={product.name}
                                onChange={(e) => {
                                  const updatedProducts = supplierFormData.products.map(p => 
                                    p.id === product.id ? { ...p, name: e.target.value } : p
                                  )
                                  setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                                }}
                                className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏"
                              />
                            </div>

                            <div>
                              <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                                –¶–µ–Ω–∞
                              </label>
                              <input
                                type="text"
                                value={product.price}
                                onChange={(e) => {
                                  const updatedProducts = supplierFormData.products.map(p => 
                                    p.id === product.id ? { ...p, price: e.target.value } : p
                                  )
                                  setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                                }}
                                className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                                placeholder="$25.99"
                              />
                            </div>

                            <div>
                              <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                                –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑
                              </label>
                              <input
                                type="text"
                                value={product.minOrder}
                                onChange={(e) => {
                                  const updatedProducts = supplierFormData.products.map(p => 
                                    p.id === product.id ? { ...p, minOrder: e.target.value } : p
                                  )
                                  setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                                }}
                                className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                                placeholder="100 —à—Ç"
                              />
                            </div>

                            <div>
                              <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                                –ù–∞–ª–∏—á–∏–µ
                              </label>
                              <select
                                value={product.inStock ? 'true' : 'false'}
                                onChange={(e) => {
                                  const updatedProducts = supplierFormData.products.map(p => 
                                    p.id === product.id ? { ...p, inStock: e.target.value === 'true' } : p
                                  )
                                  setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                                }}
                                className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                              >
                                <option value="true">–í –Ω–∞–ª–∏—á–∏–∏</option>
                                <option value="false">–ü–æ–¥ –∑–∞–∫–∞–∑</option>
                              </select>
                            </div>
                          </div>

                          <div className="mt-6">
                            <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                              –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                            </label>
                            <textarea
                              value={product.description}
                              onChange={(e) => {
                                const updatedProducts = supplierFormData.products.map(p => 
                                  p.id === product.id ? { ...p, description: e.target.value } : p
                                )
                                setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                              }}
                              rows={3}
                              className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-orange-500"
                              placeholder="–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤..."
                            />
                          </div>

                          {/* –ë–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–∞ */}
                          <div className="mt-6">
                            <label className="block text-sm font-medium text-black mb-2 uppercase tracking-wider">
                              –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
                            </label>
                            {/* üîç –û–¢–õ–ê–î–ö–ê: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö */}
                            <div className="text-xs text-gray-500 mb-2">
                              DEBUG: –£ —Ç–æ–≤–∞—Ä–∞ "{product.name}" –∫–∞—Ä—Ç–∏–Ω–æ–∫: {product.images?.length || 0}
                              {product.images && product.images.length > 0 && (
                                <div>–ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞: {product.images[0]}</div>
                              )}
                            </div>
                            <div className="border-2 border-dashed border-gray-300 p-6 text-center">
                              <div className="space-y-4">
                                {/* –ü—Ä–µ–≤—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
                                {product.images && product.images.length > 0 && (
                                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                                    {product.images.map((image, imgIndex) => (
                                      <div key={imgIndex} className="relative group">
                                        <img
                                          src={image}
                                          alt={`–¢–æ–≤–∞—Ä ${index + 1} - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${imgIndex + 1}`}
                                          className="w-full h-24 object-cover border border-gray-300 rounded"
                                        />
                                        <button
                                          onClick={() => {
                                            const updatedProducts = supplierFormData.products.map(p => 
                                              p.id === product.id 
                                                ? { ...p, images: p.images.filter((_, i) => i !== imgIndex) }
                                                : p
                                            )
                                            setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                                          }}
                                          className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs opacity-0 group-hover:opacity-100 transition-opacity"
                                        >
                                          √ó
                                        </button>
                            </div>
                                    ))}
                                  </div>
                                )}

                                {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
                                <div>
                                  <ImageIcon className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                                  <p className="text-gray-500 font-medium uppercase tracking-wider mb-2">
                                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                                  </p>
                                  <p className="text-gray-400 text-sm mb-4">
                                    JPG, PNG –¥–æ 5MB. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 3-5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π<br/>
                                    <span className="text-orange-500 font-medium">üëÜ –ù–∞–∂–º–∏—Ç–µ "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã" –Ω–∏–∂–µ</span>
                                  </p>
                                  
                                  <input
                                    type="file"
                                    accept="image/*"
                                    multiple
                                    onChange={async (e) => {
                                      const files = Array.from(e.target.files || [])
                                      console.log(`üñºÔ∏è –í—ã–±—Ä–∞–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "${product.name}" (ID: ${product.id})`)
                                      
                                      if (files.length === 0) {
                                        console.log('‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏')
                                        return
                                      }
                                      
                                      console.log(`üìÅ –§–∞–π–ª—ã:`, files.map(f => `${f.name} (${Math.round(f.size / 1024)}KB)`))
                                      
                                      setUploadingImages({
                                        ...uploadingImages,
                                        [product.id]: true
                                      })
                                      
                                      console.log(`‚è≥ –ù–∞—á–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${product.id}`)

                                      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
                                      const oversizedFiles = files.filter(file => file.size > 5 * 1024 * 1024) // 5MB
                                      if (oversizedFiles.length > 0) {
                                        alert(`–§–∞–π–ª—ã —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ (>5MB): ${oversizedFiles.map(f => f.name).join(', ')}`)
                                        setUploadingImages({
                                          ...uploadingImages,
                                          [product.id]: false
                                        })
                                        return
                                      }

                                      try {
                                        const uploadPromises = files.map(async (file) => {
                                          // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                                          const fileName = `product_${product.id}_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9.-]/g, '_')}`
                                          
                                          try {
                                            // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Supabase –∫–ª–∏–µ–Ω—Ç
                                            const { supabase } = await import('@/lib/supabaseClient')
                                            
                                            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Supabase Storage
                                            const { data, error } = await supabase.storage
                                              .from('product-images')
                                              .upload(fileName, file, {
                                                cacheControl: '3600',
                                                upsert: false
                                              })

                                            if (error) {
                                              console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error.message)
                                              
                                              // –ï—Å–ª–∏ bucket –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º Base64
                                              if (error.message.includes('Bucket not found') || error.message.includes('does not exist')) {
                                                console.warn('Bucket product-images –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º Base64')
                                                try {
                                                  const base64 = await convertToBase64(file)
                                                  return base64
                                                } catch (base64Error) {
                                                  console.error('–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ Base64:', base64Error)
                                                  return `https://via.placeholder.com/300x200/f3f4f6/9ca3af?text=${encodeURIComponent(file.name)}`
                                                }
                                              }
                                              
                                              return null
                                            }

                                            // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
                                            const { data: { publicUrl } } = supabase.storage
                                              .from('product-images')
                                              .getPublicUrl(fileName)

                                            return publicUrl
                                          } catch (fileError) {
                                            console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:', file.name, fileError)
                                            // –ü—ã—Ç–∞–µ–º—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ Base64 –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
                                            try {
                                              const base64 = await convertToBase64(file)
                                              console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω Base64 –¥–ª—è —Ñ–∞–π–ª–∞:', file.name)
                                              return base64
                                            } catch (base64Error) {
                                              console.error('–û—à–∏–±–∫–∞ Base64 –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', base64Error)
                                              return `https://via.placeholder.com/300x200/f3f4f6/9ca3af?text=${encodeURIComponent(file.name)}`
                                            }
                                          }
                                        })

                                        const uploadedUrls = await Promise.all(uploadPromises)
                                        const validUrls = uploadedUrls.filter((url: string | null) => url !== null) as string[]

                                        console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:`, {
                                          uploadedUrls: uploadedUrls.length,
                                          validUrls: validUrls.length,
                                          urls: validUrls
                                        })

                                        if (validUrls.length > 0) {
                                          const updatedProducts = supplierFormData.products.map(p => 
                                            p.id === product.id 
                                              ? { ...p, images: [...(p.images || []), ...validUrls] }
                                              : p
                                          )
                                          setSupplierFormData({ ...supplierFormData, products: updatedProducts })
                                          
                                          console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${validUrls.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "${product.name}"`)
                                          console.log(`üñºÔ∏è –ò—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É —Ç–æ–≤–∞—Ä–∞: ${(product.images || []).length + validUrls.length}`)
                                        } else {
                                          console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
                                          alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.')
                                        }
                                      } catch (error) {
                                        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error)
                                        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
                                      } finally {
                                        setUploadingImages({
                                          ...uploadingImages,
                                          [product.id]: false
                                        })
                                      }
                                    }}
                                    className="hidden"
                                    id={`product-images-${product.id}`}
                                  />
                                  
                                  <label
                                    htmlFor={`product-images-${product.id}`}
                                    className={`inline-flex items-center gap-2 px-4 py-2 border-2 border-orange-500 text-orange-500 hover:bg-orange-500 hover:text-white transition-all cursor-pointer text-sm font-medium uppercase tracking-wider ${
                                      uploadingImages[product.id] ? 'opacity-50 cursor-not-allowed' : ''
                                    }`}
                                  >
                                    {uploadingImages[product.id] ? (
                                      <>
                                        <div className="w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin"></div>
                                        –ó–∞–≥—Ä—É–∑–∫–∞...
                                      </>
                                    ) : (
                                      <>
                                        <Upload className="w-4 h-4" />
                                        –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                                      </>
                                    )}
                                  </label>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      ))
                    )}
                  </div>

                  {supplierFormErrors.products && (
                    <p className="text-sm text-red-500 mt-4">{supplierFormErrors.products}</p>
                  )}
                </div>
              )}

              {supplierFormStep === 6 && (
                <div className="space-y-10">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø—Ä–∏—ë–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π</h3>
                  <p className="text-gray-600 text-sm mb-6">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–∞–∫–æ–π-—Ç–æ —Å–ø–æ—Å–æ–±.</p>

                  {/* –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ */}
                  <div className="border-2 border-blue-200 rounded-lg p-6 bg-blue-50">
                    <h4 className="text-lg font-semibold text-blue-800 mb-4 flex items-center gap-2"><span className="text-2xl">üè¶</span> –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ (SWIFT/SEPA)</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</label>
                        <input type="text" value={supplierFormData.bank_name} onChange={e => setSupplierFormData({...supplierFormData, bank_name: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-blue-400" placeholder="Bank of China" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞</label>
                        <input type="text" value={supplierFormData.bank_account} onChange={e => setSupplierFormData({...supplierFormData, bank_account: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-blue-400" placeholder="1234567890123456" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">SWIFT/BIC</label>
                        <input type="text" value={supplierFormData.swift_code} onChange={e => setSupplierFormData({...supplierFormData, swift_code: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-blue-400" placeholder="BKCHCNBJ" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–í–∞–ª—é—Ç–∞</label>
                        <select value={supplierFormData.currency} onChange={e => setSupplierFormData({...supplierFormData, currency: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-blue-400">
                          <option value="USD">USD - –î–æ–ª–ª–∞—Ä –°–®–ê</option>
                          <option value="EUR">EUR - –ï–≤—Ä–æ</option>
                          <option value="CNY">CNY - –ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å</option>
                          <option value="RUB">RUB - –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å</option>
                          <option value="TRY">TRY - –¢—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞</option>
                        </select>
                      </div>
                    </div>
                    <div className="mt-4">
                      <label className="block text-sm font-medium text-black mb-2">–ê–¥—Ä–µ—Å –±–∞–Ω–∫–∞</label>
                      <textarea value={supplierFormData.bank_address} onChange={e => setSupplierFormData({...supplierFormData, bank_address: e.target.value})} rows={2} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-blue-400" placeholder="–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –±–∞–Ω–∫–∞ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤..." />
                    </div>
                    <div className="mt-4">
                      <label className="block text-sm font-medium text-black mb-2">–ü–ª–∞—Ç–µ–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è</label>
                      <select value={supplierFormData.payment_terms} onChange={e => setSupplierFormData({...supplierFormData, payment_terms: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-blue-400">
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª–æ–≤–∏—è</option>
                        <option value="30% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 70% –¥–æ –æ—Ç–≥—Ä—É–∑–∫–∏">30% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 70% –¥–æ –æ—Ç–≥—Ä—É–∑–∫–∏</option>
                        <option value="50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 50% –¥–æ –æ—Ç–≥—Ä—É–∑–∫–∏">50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 50% –¥–æ –æ—Ç–≥—Ä—É–∑–∫–∏</option>
                        <option value="100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞">100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞</option>
                        <option value="T/T 30 –¥–Ω–µ–π">T/T 30 –¥–Ω–µ–π</option>
                        <option value="L/C at sight">L/C at sight</option>
                        <option value="Cash on delivery">Cash on delivery</option>
                      </select>
                    </div>
            </div>

                  {/* P2P –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É */}
                  <div className="border-2 border-green-200 rounded-lg p-6 bg-green-50">
                    <h4 className="text-lg font-semibold text-green-800 mb-4 flex items-center gap-2"><span className="text-2xl">üí≥</span> P2P –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–ë–∞–Ω–∫-—ç–º–∏—Ç–µ–Ω—Ç</label>
                        <input type="text" value={supplierFormData.card_bank || ''} onChange={e => setSupplierFormData({...supplierFormData, card_bank: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-green-400" placeholder="–°–±–µ—Ä–±–∞–Ω–∫, Tinkoff, ICBC..." />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã</label>
                        <input type="text" value={supplierFormData.card_number || ''} onChange={e => setSupplierFormData({...supplierFormData, card_number: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-green-400" placeholder="1234 5678 9012 3456" />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–í–ª–∞–¥–µ–ª–µ—Ü –∫–∞—Ä—Ç—ã</label>
                        <input type="text" value={supplierFormData.card_holder || ''} onChange={e => setSupplierFormData({...supplierFormData, card_holder: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-green-400" placeholder="IVAN IVANOV" />
                      </div>
                    </div>
                  </div>

                  {/* –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ */}
                  <div className="border-2 border-yellow-200 rounded-lg p-6 bg-yellow-50">
                    <h4 className="text-lg font-semibold text-yellow-800 mb-4 flex items-center gap-2"><span className="text-2xl">‚Çø</span> –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–°–µ—Ç—å</label>
                        <input type="text" value={supplierFormData.crypto_network || ''} onChange={e => setSupplierFormData({...supplierFormData, crypto_network: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-yellow-400" placeholder="USDT TRC20, BTC, ETH..." />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-black mb-2">–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</label>
                        <input type="text" value={supplierFormData.crypto_address || ''} onChange={e => setSupplierFormData({...supplierFormData, crypto_address: e.target.value})} className="w-full px-3 py-2 border-2 border-black focus:outline-none focus:ring-2 focus:ring-yellow-400" placeholder="0x... –∏–ª–∏ T..." />
                      </div>
                    </div>
                  </div>
                </div>
              )}

                  {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ */}
                  {supplierFormStep === 6 && Object.keys(supplierFormErrors).length > 0 && (
                    <div className="mt-6 p-4 bg-red-50 border-2 border-red-200 rounded-lg">
                      <h4 className="text-lg font-semibold text-red-800 mb-2">–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏:</h4>
                      <ul className="space-y-1">
                        {Object.entries(supplierFormErrors).map(([field, error]) => (
                          <li key={field} className="text-sm text-red-600">‚Ä¢ {error}</li>
                        ))}
                      </ul>
                    </div>
                  )}

              {supplierFormStep === 7 && (
                <div className="space-y-8">
                  <h3 className="text-xl font-medium text-black mb-4 uppercase tracking-wider">–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–≤—å—é</h3>
                  
                  {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="border-2 border-blue-200 rounded-lg p-6 bg-blue-50">
                    <h4 className="text-lg font-semibold text-blue-800 mb-4 flex items-center gap-2">
                      <span className="text-2xl">üè¢</span> –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                          <span className="font-medium text-black">{supplierFormData.name}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ö–æ–º–ø–∞–Ω–∏—è:</span>
                          <span className="font-medium text-black">{supplierFormData.company_name}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                          <span className="font-medium text-black">{supplierFormData.category}</span>
                        </div>
                      </div>
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–°—Ç—Ä–∞–Ω–∞:</span>
                          <span className="font-medium text-black">{supplierFormData.country}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ì–æ—Ä–æ–¥:</span>
                          <span className="font-medium text-black">{supplierFormData.city}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ú–∏–Ω. –∑–∞–∫–∞–∑:</span>
                          <span className="font-medium text-black">{supplierFormData.min_order || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="border-2 border-green-200 rounded-lg p-6 bg-green-50">
                    <h4 className="text-lg font-semibold text-green-800 mb-4 flex items-center gap-2">
                      <span className="text-2xl">üìû</span> –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">Email:</span>
                          <span className="font-medium text-black">{supplierFormData.email}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                          <span className="font-medium text-black">{supplierFormData.phone}</span>
                        </div>
                      </div>
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</span>
                          <span className="font-medium text-black">{supplierFormData.contact_person}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–í–µ–±-—Å–∞–π—Ç:</span>
                          <span className="font-medium text-black">{supplierFormData.website || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
                  {(() => {
                    const certs = getCertifications(supplierFormData.certifications?.join(',') || null)
                    return certs.length > 0 && (
                      <div className="border-2 border-purple-200 rounded-lg p-6 bg-purple-50">
                        <h4 className="text-lg font-semibold text-purple-800 mb-4 flex items-center gap-2">
                          <span className="text-2xl">üèÜ</span> –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                        </h4>
                        <div className="flex flex-wrap gap-3">
                          {certs.map((cert: string, index: number) => (
                            <span key={index} className="bg-purple-100 text-purple-800 px-3 py-1 text-sm border border-purple-200 rounded">
                              {cert}
                            </span>
                          ))}
                        </div>
                      </div>
                    )
                  })()}

                  {/* –¢–æ–≤–∞—Ä—ã */}
                  {supplierFormData.products.length > 0 && (
                    <div className="border-2 border-orange-200 rounded-lg p-6 bg-orange-50">
                      <h4 className="text-lg font-semibold text-orange-800 mb-4 flex items-center gap-2">
                        <span className="text-2xl">üì¶</span> –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ ({supplierFormData.products.length})
                      </h4>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        {supplierFormData.products.map((product, index) => (
                          <div key={product.id} className="border-2 border-orange-300 bg-white p-4 rounded">
                            {/* –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ */}
                            <div className="w-full h-32 bg-gray-100 border border-gray-300 flex items-center justify-center mb-3 rounded">
                              {product.images && product.images.length > 0 ? (
                                <img 
                                  src={product.images[0]} 
                                  alt={product.name}
                                  className="w-full h-full object-cover rounded"
                                />
                              ) : (
                                <span className="text-gray-400 text-sm">–§–û–¢–û –¢–û–í–ê–†–ê</span>
                              )}
                            </div>
                            
                            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                            <h5 className="font-medium text-black mb-2 line-clamp-2">{product.name || `–¢–æ–≤–∞—Ä #${index + 1}`}</h5>
                            <p className="text-sm text-gray-600 mb-3 line-clamp-2">{product.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                            
                            <div className="space-y-2">
                              {product.price && (
                                <div className="flex justify-between text-sm">
                                  <span className="text-gray-600">–¶–µ–Ω–∞:</span>
                                  <span className="font-medium text-orange-600">{product.price}</span>
                                </div>
                              )}
                              {product.minOrder && (
                                <div className="flex justify-between text-sm">
                                  <span className="text-gray-600">MOQ:</span>
                                  <span className="font-medium">{product.minOrder}</span>
                                </div>
                              )}
                              <div className="flex justify-between text-sm">
                                <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                                <span className={`font-medium ${product.inStock ? 'text-green-600' : 'text-orange-600'}`}>
                                  {product.inStock ? '–í –Ω–∞–ª–∏—á–∏–∏' : '–ü–æ–¥ –∑–∞–∫–∞–∑'}
                                </span>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}

                  {/* –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π */}
                  {(supplierFormData.bank_name || supplierFormData.card_number || supplierFormData.crypto_address) && (
                    <div className="border-2 border-yellow-200 rounded-lg p-6 bg-yellow-50">
                      <h4 className="text-lg font-semibold text-yellow-800 mb-4 flex items-center gap-2">
                        <span className="text-2xl">üí≥</span> –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
                      </h4>
                      <div className="space-y-3">
                        {supplierFormData.bank_name && (
                          <div className="flex justify-between">
                            <span className="text-gray-600">–ë–∞–Ω–∫:</span>
                            <span className="font-medium text-black">{supplierFormData.bank_name}</span>
                          </div>
                        )}
                        {supplierFormData.card_bank && (
                          <div className="flex justify-between">
                            <span className="text-gray-600">P2P –∫–∞—Ä—Ç–∞:</span>
                            <span className="font-medium text-black">{supplierFormData.card_bank}</span>
                          </div>
                        )}
                        {supplierFormData.crypto_network && (
                          <div className="flex justify-between">
                            <span className="text-gray-600">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞:</span>
                            <span className="font-medium text-black">{supplierFormData.crypto_network}</span>
                          </div>
                        )}
                      </div>
                    </div>
                  )}

                  {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                  <div className="border-2 border-gray-300 rounded-lg p-6 bg-gray-50">
                    <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                      <span className="text-2xl">üìä</span> –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    </h4>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                      <div className="text-center">
                        <div className="text-2xl font-bold text-black">{supplierFormData.products.length}</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–¢–æ–≤–∞—Ä–æ–≤</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-black">{supplierFormData.certifications.length}</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-black">{supplierFormData.products.filter(p => p.inStock).length}</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–í –Ω–∞–ª–∏—á–∏–∏</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-black">
                          {[supplierFormData.bank_name, supplierFormData.card_bank, supplierFormData.crypto_network].filter(Boolean).length}
                        </div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–°–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã</div>
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>

                        {/* Footer –º–æ–¥–∞–ª–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
            <div className="border-t-2 border-black p-6">
              <div className="flex items-center justify-between">
                <div className="flex gap-3">
                  {supplierFormStep > 1 && (
                    <button
                      onClick={() => {
                        setSupplierFormStep(supplierFormStep - 1)
                      }}
                      className="border-2 border-black text-black px-6 py-3 hover:bg-black hover:text-white transition-all text-sm font-medium uppercase tracking-wider"
                    >
                      ‚Üê –ù–∞–∑–∞–¥
                    </button>
                  )}
                
                  {supplierFormStep < supplierSteps.length ? (
                     <button
                       onClick={() => {
                         if (validateSupplierStep(supplierFormStep)) {
                           setSupplierFormStep(supplierFormStep + 1)
                          setMaxSupplierStep(Math.max(maxSupplierStep, supplierFormStep + 1))
                         }
                       }}
                       className="bg-orange-500 text-white px-6 py-3 hover:bg-orange-600 transition-all text-sm font-medium uppercase tracking-wider"
                     >
                      –í–ø–µ—Ä–µ–¥ ‚Üí
                     </button>
                  ) : (
                     <button
                      onClick={handleSubmitSupplier}
                      disabled={loading}
                      className="bg-green-600 text-white px-6 py-3 hover:bg-green-700 transition-all text-sm font-medium uppercase tracking-wider disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      {loading ? '‚è≥ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '‚úì –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'}
                     </button>
                  )}
                </div>
                  
                                     <button
                     onClick={() => {
                       setShowAddSupplierModal(false)
                       resetSupplierForm()
                       setEchoCardForImport(null) // –û—á–∏—â–∞–µ–º —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
                       console.log('üîÑ –§–æ—Ä–º–∞ –∑–∞–∫—Ä—ã—Ç–∞, —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ')
                     }}
                     className="border-2 border-gray-400 text-gray-600 px-6 py-3 hover:bg-gray-400 hover:text-white transition-all text-sm font-medium uppercase tracking-wider"
                   >
                     –û—Ç–º–µ–Ω–∞
                   </button>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ */}
      {selectedSupplier && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white border-4 border-black max-w-6xl w-full max-h-[95vh] my-4 flex flex-col">
            {/* Header –º–æ–¥–∞–ª–∞ */}
            <div className="border-b-2 border-black p-6">
              <div className="flex items-center justify-between mb-6">
                <div className="flex items-center gap-6">
                  {/* –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø */}
                  <div 
                    className="w-20 h-20 border-2 border-black flex items-center justify-center bg-gray-50 cursor-pointer hover:border-blue-600 hover:shadow-lg transition-all duration-300 relative group"
                    onClick={openLogoFileDialog}
                    title="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Å–º–µ–Ω—ã –ª–æ–≥–æ—Ç–∏–ø–∞"
                  >
                    {uploadingSupplierLogo ? (
                      <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                    ) : selectedSupplier.logo_url ? (
                      <>
                        <img 
                          src={selectedSupplier.logo_url} 
                          alt={selectedSupplier.name}
                          className="w-full h-full object-cover"
                        />
                        {/* Overlay –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
                        <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center">
                          <span className="text-white text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300 font-bold">
                            –°–ú–ï–ù–ò–¢–¨
                          </span>
                        </div>
                      </>
                    ) : (
                      <div className="text-red-600 text-xs text-center font-bold bg-red-100 w-full h-full flex flex-col items-center justify-center group-hover:bg-blue-100 group-hover:text-blue-600 transition-all duration-300">
                        <span>–õ–û–ì–û–¢–ò–ü</span>
                        <span>–û–¢–°–£–¢–°–¢–í–£–ï–¢</span>
                        <span className="text-[8px] mt-1 opacity-70">–ö–õ–ò–ö–ù–ò–¢–ï</span>
                      </div>
                    )}
                  </div>
                  
                  <div>
                    <h2 className="text-3xl font-light text-black tracking-wide">{selectedSupplier.name}</h2>
                    <div className="w-24 h-0.5 bg-black mt-2"></div>
                    <p className="text-gray-600 mt-3 font-light">{selectedSupplier.company_name}</p>
                    <div className="flex items-center gap-4 mt-2">
                      <span className="bg-blue-100 text-blue-800 px-3 py-1 text-sm rounded-full">{selectedSupplier.category}</span>
                      <span className="text-gray-600 text-sm">üìç {selectedSupplier.city}, {selectedSupplier.country}</span>
                    </div>
                  </div>
                </div>
                <button
                  onClick={() => setSelectedSupplier(null)}
                  className="border-2 border-black text-black px-4 py-2 hover:bg-black hover:text-white transition-all text-lg font-bold"
                >
                  ‚úï
                </button>
              </div>

              {/* –¢–∞–±—ã */}
              <div className="flex border-2 border-black">
                <button
                  onClick={() => setModalTab('info')}
                  className={`px-6 py-3 text-sm font-medium uppercase tracking-wider transition-all duration-300 ${
                    modalTab === 'info'
                      ? 'bg-blue-600 text-white border-r-2 border-blue-600'
                      : 'bg-white text-black border-r-2 border-black hover:bg-gray-50'
                  }`}
                >
                  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </button>
                <button
                  onClick={() => {
                    setModalTab('products')
                    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–æ–º
                    if (selectedSupplier) {
                      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
                      const supplierType = selectedRoom === 'blue' ? 'user' : 'verified'
                      loadSupplierProducts(selectedSupplier.id, supplierType)
                    }
                  }}
                  className={`px-6 py-3 text-sm font-medium uppercase tracking-wider transition-all duration-300 ${
                    modalTab === 'products'
                      ? 'bg-blue-600 text-white border-r-2 border-blue-600'
                      : 'bg-white text-black border-r-2 border-black hover:bg-gray-50'
                  }`}
                >
                  –¢–æ–≤–∞—Ä—ã
                </button>
                {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ */}
                {activeMode === 'clients' && (
                  <button
                    onClick={() => {
                      setModalTab('management')
                      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                      if (selectedSupplier) {
                        loadSupplierProducts(selectedSupplier.id, 'user')
                      }
                    }}
                    className={`px-6 py-3 text-sm font-medium uppercase tracking-wider transition-all duration-300 ${
                      modalTab === 'management'
                        ? 'bg-green-600 text-white'
                        : 'bg-white text-black hover:bg-gray-50'
                    }`}
                  >
                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                  </button>
                )}
              </div>
            </div>

            {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞ */}
            <div className="flex-1 overflow-y-auto p-6">
              {modalTab === 'info' ? (
                <div className="space-y-6">
                  {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                  {selectedSupplier.description && (
                    <div className="border-2 border-gray-200 rounded-lg p-6 bg-gray-50">
                      <h4 className="text-lg font-semibold text-gray-800 mb-3">–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</h4>
                      <p className="text-gray-700 leading-relaxed">{selectedSupplier.description}</p>
                    </div>
                  )}

                  {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="border-2 border-blue-200 rounded-lg p-6 bg-blue-50">
                    <h4 className="text-lg font-semibold text-blue-800 mb-4 flex items-center gap-2">
                      <span className="text-2xl">üìû</span> –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">Email:</span>
                          <span className="font-medium text-black">{selectedSupplier.contact_email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                          <span className="font-medium text-black">{selectedSupplier.contact_phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                      </div>
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</span>
                          <span className="font-medium text-black">{selectedSupplier.contact_person || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–í–µ–±-—Å–∞–π—Ç:</span>
                          <span className="font-medium text-black">{selectedSupplier.website || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* –ë–∏–∑–Ω–µ—Å-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="border-2 border-green-200 rounded-lg p-6 bg-green-50">
                    <h4 className="text-lg font-semibold text-green-800 mb-4 flex items-center gap-2">
                      <span className="text-2xl">üè≠</span> –ë–∏–∑–Ω–µ—Å-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    </h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑:</span>
                          <span className="font-medium text-black">{selectedSupplier.min_order || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:</span>
                          <span className="font-medium text-black">{selectedSupplier.response_time || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                        </div>
                      </div>
                      <div className="space-y-3">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:</span>
                          <span className="font-medium text-black">{selectedSupplier.employees || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ì–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è:</span>
                          <span className="font-medium text-black">{selectedSupplier.established || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
                  <div className="border-2 border-orange-200 rounded-lg p-6 bg-orange-50">
                    <div className="flex items-center justify-between mb-4">
                      <h4 className="text-lg font-semibold text-orange-800 flex items-center gap-2">
                        <span className="text-2xl">üìä</span> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
                      </h4>
                      {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞—è */}
                      {activeMode === 'clients' && (selectedSupplier.total_projects === 0 || !selectedSupplier.total_projects) && (
                        <button
                          onClick={() => {
                            setShowEchoCardsModal(true)
                            console.log('üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', selectedSupplier.name)
                          }}
                          className="bg-purple-600 text-white px-3 py-2 text-xs uppercase tracking-wider hover:bg-purple-700 transition-colors flex items-center gap-2"
                          title="–ù–∞–π—Ç–∏ –∏ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫"
                        >
                          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                          </svg>
                          –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
                        </button>
                      )}
                    </div>
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                      <div className="text-center">
                        <div className="text-2xl font-bold text-black">{selectedSupplier.total_projects || 0}</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-green-600">{selectedSupplier.successful_projects || 0}</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–£—Å–ø–µ—à–Ω—ã—Ö</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-red-600">{selectedSupplier.cancelled_projects || 0}</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–û—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-blue-600">{selectedSupplier.total_spent || 0}$</div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ</div>
                      </div>
                    </div>
                    
                    {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –µ—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞—è */}
                    {(selectedSupplier.total_projects === 0 || !selectedSupplier.total_projects) && activeMode === 'clients' && (
                      <div className="mt-4 text-sm text-gray-600 bg-yellow-50 border border-yellow-200 p-3 rounded">
                        üí° <strong>–°–æ–≤–µ—Ç:</strong> –ï—Å–ª–∏ —ç—Ç–æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏" –≤—ã—à–µ, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.
                      </div>
                    )}
                  </div>

                  {/* –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
                  {(() => {
                    const certs = selectedSupplier ? getCertifications(selectedSupplier.certifications) : []
                    return certs.length > 0 && (
                      <div className="border-2 border-purple-200 rounded-lg p-6 bg-purple-50">
                        <h4 className="text-lg font-semibold text-purple-800 mb-4 flex items-center gap-2">
                          <span className="text-2xl">üèÜ</span> –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                        </h4>
                        <div className="flex flex-wrap gap-3">
                          {certs.map((cert: string, index: number) => (
                            <span key={index} className="bg-purple-100 text-purple-800 px-3 py-1 text-sm border border-purple-200 rounded">
                              {cert}
                            </span>
                          ))}
                        </div>
                      </div>
                    )
                  })()}
                </div>
              ) : modalTab === 'products' ? (
                <div className="space-y-6">
                  {loadingProducts ? (
                    <div className="text-center py-12">
                      <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
                      <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</div>
                    </div>
                  ) : supplierProducts.length === 0 ? (
                    <div className="text-center py-12 text-gray-500">
                      <div className="text-6xl mb-4">üì¶</div>
                      <h3 className="text-xl font-semibold mb-2">–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                      <p className="text-gray-600">–£ —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</p>
                      <p className="text-sm text-gray-500 mt-2">–¢–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤</p>
                    </div>
                  ) : (
                    <div>
                      <div className="flex items-center justify-between mb-6">
                        <h3 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
                          <Package className="w-6 h-6 text-blue-600" />
                          –¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ ({supplierProducts.length})
                        </h3>
                        <span className="text-sm text-gray-500">
                          –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date().toLocaleDateString('ru-RU')}
                        </span>
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        {supplierProducts.map((product: any) => (
                          <div 
                            key={product.id} 
                            className="border-2 border-gray-200 rounded-lg p-4 hover:shadow-lg hover:border-blue-300 transition-all duration-300 cursor-pointer group"
                            onClick={() => openProductModal(product)}
                            title="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
                          >
                            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                            <div className="w-full h-48 border border-gray-200 rounded-md mb-4 flex items-center justify-center bg-gray-50">
                              {product.images && product.images.length > 0 ? (
                                <img 
                                  src={product.images[0]} 
                                  alt={product.name}
                                  className="w-full h-full object-cover rounded-md"
                                />
                              ) : (
                                <div className="text-gray-400 text-center">
                                  <Package className="w-12 h-12 mx-auto mb-2" />
                                  <span className="text-sm">–ù–µ—Ç —Ñ–æ—Ç–æ</span>
                                </div>
                              )}
                            </div>
                            
                            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                            <div className="space-y-3">
                              <h4 className="font-semibold text-gray-900 text-lg line-clamp-2">{product.name}</h4>
                              
                              {product.description && (
                                <p className="text-gray-600 text-sm line-clamp-2">{product.description}</p>
                              )}
                              
                              {/* –¶–µ–Ω–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                              <div className="space-y-2">
                                {product.price && (
                                  <div className="flex items-center justify-between">
                                    <span className="text-gray-600 text-sm">–¶–µ–Ω–∞:</span>
                                    <span className="font-semibold text-lg text-blue-600">
                                      {product.price} {product.currency || 'USD'}
                                    </span>
                                  </div>
                                )}
                                
                                {product.min_order && (
                                  <div className="flex items-center justify-between">
                                    <span className="text-gray-600 text-sm">–ú–∏–Ω. –∑–∞–∫–∞–∑:</span>
                                    <span className="text-gray-800 text-sm">{product.min_order}</span>
                                  </div>
                                )}
                                
                                <div className="flex items-center justify-between">
                                  <span className="text-gray-600 text-sm">–í –Ω–∞–ª–∏—á–∏–∏:</span>
                                  <span className={`text-sm font-medium ${product.in_stock ? 'text-green-600' : 'text-red-600'}`}>
                                    {product.in_stock ? '–î–∞' : '–ù–µ—Ç'}
                                  </span>
                                </div>
                                
                                {product.sku && (
                                  <div className="flex items-center justify-between">
                                    <span className="text-gray-600 text-sm">–ê—Ä—Ç–∏–∫—É–ª:</span>
                                    <span className="text-gray-800 text-sm font-mono">{product.sku}</span>
                                  </div>
                                )}
                              </div>
                              
                              {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                              <div className="flex gap-2 pt-3">
                                <button 
                                  className="flex-1 bg-blue-600 text-white py-2 px-3 text-sm rounded hover:bg-blue-700 transition-colors"
                                  onClick={(e) => {
                                    e.stopPropagation()
                                    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Ü–µ–Ω—ã
                                    alert('–§—É–Ω–∫—Ü–∏—è "–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ü–µ–Ω—É" –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
                                  }}
                                >
                                  –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ü–µ–Ω—É
                                </button>
                                <button 
                                  className="flex-1 border border-blue-600 text-blue-600 py-2 px-3 text-sm rounded hover:bg-blue-600 hover:text-white transition-colors"
                                  onClick={(e) => {
                                    e.stopPropagation()
                                    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç
                                    alert('–§—É–Ω–∫—Ü–∏—è "–í –ø—Ä–æ–µ–∫—Ç" –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
                                  }}
                                >
                                  –í –ø—Ä–æ–µ–∫—Ç
                                </button>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              ) : modalTab === 'management' ? (
                <div className="space-y-6">
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                  <div className="border-2 border-green-200 rounded-lg p-6 bg-green-50">
                    <h3 className="text-2xl font-bold text-green-800 mb-4 flex items-center gap-2">
                      <Edit className="w-8 h-8 text-green-600" />
                      –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                    </h3>
                    <p className="text-green-700">
                      –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä–∞–º–∏ –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏ —É–¥–∞–ª—è—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ.
                    </p>
                  </div>

                  {/* –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="border-2 border-blue-200 rounded-lg p-4 bg-blue-50 text-center">
                      <div className="text-3xl font-bold text-blue-600">{supplierProducts.length}</div>
                      <div className="text-sm text-blue-700 font-medium">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</div>
                    </div>
                    <div className="border-2 border-green-200 rounded-lg p-4 bg-green-50 text-center">
                      <div className="text-3xl font-bold text-green-600">
                        {supplierProducts.filter(p => p.in_stock).length}
                      </div>
                      <div className="text-sm text-green-700 font-medium">–í –Ω–∞–ª–∏—á–∏–∏</div>
                    </div>
                    <div className="border-2 border-orange-200 rounded-lg p-4 bg-orange-50 text-center">
                      <div className="text-3xl font-bold text-orange-600">
                        {supplierProducts.filter(p => !p.in_stock).length}
                      </div>
                      <div className="text-sm text-orange-700 font-medium">–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</div>
                    </div>
                  </div>

                  {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º */}
                  <div className="border-2 border-red-200 rounded-lg p-6 bg-red-50">
                    <h4 className="text-xl font-semibold text-red-800 mb-4 flex items-center gap-2">
                      <Trash2 className="w-6 h-6 text-red-600" />
                      –û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º
                    </h4>
                    <div className="space-y-4">
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <h5 className="font-medium text-red-800 mb-2">–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞</h5>
                          <p className="text-red-700 text-sm">
                            –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –≤–∞—à–µ–π —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã. –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. 
                            –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.
                          </p>
                          <div className="mt-3">
                            <div className="text-xs text-red-600 space-y-1">
                              <div>‚Ä¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫: <strong>{selectedSupplier.name}</strong></div>
                              <div>‚Ä¢ –¢–æ–≤–∞—Ä—ã –∫ —É–¥–∞–ª–µ–Ω–∏—é: <strong>{supplierProducts.length} —à—Ç</strong></div>
                              <div>‚Ä¢ ID: <span className="font-mono">{selectedSupplier.id}</span></div>
                            </div>
                          </div>
                        </div>
                        <button
                          onClick={() => handleDeleteSupplier(selectedSupplier.id)}
                          className="bg-red-600 text-white px-6 py-3 rounded-lg hover:bg-red-700 transition-colors flex items-center gap-2 ml-4"
                        >
                          <Trash2 className="w-5 h-5" />
                          –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                        </button>
                      </div>
                      
                      <div className="border-t border-red-200 pt-4">
                        <div className="flex items-center gap-2 text-red-700 text-sm">
                          <span className="text-red-500">‚ö†Ô∏è</span>
                          <span>
                            –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∏—Å—á–µ–∑–Ω–µ—Ç –∏–∑ –≤–∞—à–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞–≤—Å–µ–≥–¥–∞. 
                            –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ */}
                  <div className="border-2 border-gray-200 rounded-lg p-6">
                    <div className="flex items-center justify-between mb-6">
                      <h4 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
                        <Package className="w-6 h-6 text-blue-600" />
                        –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
                      </h4>
                      <button
                        onClick={() => openProductEditor()}
                        className="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2"
                      >
                        <Plus className="w-5 h-5" />
                        –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                      </button>
                    </div>

                    {loadingProducts ? (
                      <div className="text-center py-12">
                        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
                        <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</div>
                      </div>
                    ) : supplierProducts.length === 0 ? (
                      <div className="text-center py-12 text-gray-500">
                        <div className="text-6xl mb-4">üì¶</div>
                        <h3 className="text-xl font-semibold mb-2">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</h3>
                        <p className="text-gray-600 mb-4">–£ —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ</p>
                        <button
                          onClick={() => openProductEditor()}
                          className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 mx-auto"
                        >
                          <Plus className="w-5 h-5" />
                          –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä
                        </button>
                      </div>
                    ) : (
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        {supplierProducts.map((product: any) => (
                          <div key={product.id} className="border-2 border-gray-200 rounded-lg p-4 hover:shadow-lg transition-all duration-300 relative group">
                            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                            <div className="absolute top-2 right-2 flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity">
                              <button
                                onClick={() => openProductEditor(product)}
                                className="bg-blue-600 text-white p-1.5 rounded hover:bg-blue-700 transition-colors"
                                title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä"
                              >
                                <Edit className="w-4 h-4" />
                              </button>
                              <button
                                onClick={() => handleDeleteProduct(product.id)}
                                className="bg-red-600 text-white p-1.5 rounded hover:bg-red-700 transition-colors"
                                title="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"
                              >
                                <Trash2 className="w-4 h-4" />
                              </button>
                            </div>

                            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                            <div className="w-full h-48 border border-gray-200 rounded-md mb-4 flex items-center justify-center bg-gray-50">
                              {product.images && product.images.length > 0 ? (
                                <img 
                                  src={product.images[0]} 
                                  alt={product.name}
                                  className="w-full h-full object-cover rounded-md"
                                />
                              ) : (
                                <div className="text-gray-400 text-center">
                                  <Package className="w-12 h-12 mx-auto mb-2" />
                                  <span className="text-sm">–ù–µ—Ç —Ñ–æ—Ç–æ</span>
                                </div>
                              )}
                            </div>
                            
                            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                            <div className="space-y-3">
                              <h4 className="font-semibold text-gray-900 text-lg line-clamp-2">{product.name}</h4>
                              
                              {product.description && (
                                <p className="text-gray-600 text-sm line-clamp-2">{product.description}</p>
                              )}
                              
                              {/* –¶–µ–Ω–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                              <div className="space-y-2">
                                {product.price && (
                                  <div className="flex items-center justify-between">
                                    <span className="text-gray-600 text-sm">–¶–µ–Ω–∞:</span>
                                    <span className="font-semibold text-lg text-blue-600">
                                      {product.price} {product.currency || 'USD'}
                                    </span>
                                  </div>
                                )}
                                
                                {product.min_order && (
                                  <div className="flex items-center justify-between">
                                    <span className="text-gray-600 text-sm">–ú–∏–Ω. –∑–∞–∫–∞–∑:</span>
                                    <span className="text-gray-800 text-sm">{product.min_order}</span>
                                  </div>
                                )}
                                
                                <div className="flex items-center justify-between">
                                  <span className="text-gray-600 text-sm">–í –Ω–∞–ª–∏—á–∏–∏:</span>
                                  <span className={`text-sm font-medium ${product.in_stock ? 'text-green-600' : 'text-red-600'}`}>
                                    {product.in_stock ? '–î–∞' : '–ù–µ—Ç'}
                                  </span>
                                </div>
                                
                                {product.sku && (
                                  <div className="flex items-center justify-between">
                                    <span className="text-gray-600 text-sm">–ê—Ä—Ç–∏–∫—É–ª:</span>
                                    <span className="text-gray-800 text-sm font-mono">{product.sku}</span>
                                  </div>
                                )}
                              </div>
                              
                              {/* –°—Ç–∞—Ç—É—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                              <div className="pt-3 border-t border-gray-200">
                                <div className="flex items-center justify-between">
                                  <span className="text-xs text-gray-500">ID: {product.id.slice(0, 8)}...</span>
                                  <span className={`text-xs px-2 py-1 rounded ${product.in_stock ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`}>
                                    {product.in_stock ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                                  </span>
                                </div>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              ) : null}
            </div>

            {/* Footer –º–æ–¥–∞–ª–∞ */}
            <div className="border-t-2 border-black p-6">
              <div className="flex items-center justify-between">
                <div className="flex gap-3">
                  <button 
                    onClick={() => handleStartProject(selectedSupplier)}
                    className="bg-blue-600 text-white px-6 py-3 hover:bg-blue-700 transition-all text-sm font-medium uppercase tracking-wider"
                  >
                    –ù–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                  </button>
                  <button className="border-2 border-green-600 text-green-600 px-6 py-3 hover:bg-green-600 hover:text-white transition-all text-sm font-medium uppercase tracking-wider">
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                  </button>
                </div>
                <button
                  onClick={() => setSelectedSupplier(null)}
                  className="border-2 border-gray-400 text-gray-600 px-6 py-3 hover:bg-gray-400 hover:text-white transition-all text-sm font-medium uppercase tracking-wider"
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
      {showProductEditor && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999] p-4">
          <div className="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª–∞ */}
            <div className="border-b-2 border-black p-6">
              <div className="flex items-center justify-between">
                <h2 className="text-2xl font-bold text-black flex items-center gap-2">
                  <Package className="w-6 h-6 text-blue-600" />
                  {editingProduct ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä' : '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'}
                </h2>
                <button
                  onClick={() => setShowProductEditor(false)}
                  className="text-gray-500 hover:text-gray-700 transition-colors"
                >
                  <X className="w-6 h-6" />
                </button>
              </div>
            </div>

            {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞ */}
            <div className="p-6 space-y-6">
              {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *
                    </label>
                    <input
                      type="text"
                      value={productFormData.name}
                      onChange={(e) => setProductFormData({...productFormData, name: e.target.value})}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ê—Ä—Ç–∏–∫—É–ª
                    </label>
                    <input
                      type="text"
                      value={productFormData.sku}
                      onChange={(e) => setProductFormData({...productFormData, sku: e.target.value})}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª"
                    />
                  </div>

                  <div className="grid grid-cols-2 gap-3">
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –¶–µ–Ω–∞
                      </label>
                      <input
                        type="number"
                        value={productFormData.price}
                        onChange={(e) => setProductFormData({...productFormData, price: e.target.value})}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                        placeholder="0"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –í–∞–ª—é—Ç–∞
                      </label>
                      <select
                        value={productFormData.currency}
                        onChange={(e) => setProductFormData({...productFormData, currency: e.target.value})}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                      >
                        <option value="USD">USD</option>
                        <option value="EUR">EUR</option>
                        <option value="RUB">RUB</option>
                      </select>
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑
                    </label>
                    <input
                      type="text"
                      value={productFormData.min_order}
                      onChange={(e) => setProductFormData({...productFormData, min_order: e.target.value})}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                      placeholder="1 —à—Ç"
                    />
                  </div>

                  <div className="flex items-center">
                    <input
                      type="checkbox"
                      id="in_stock"
                      checked={productFormData.in_stock}
                      onChange={(e) => setProductFormData({...productFormData, in_stock: e.target.checked})}
                      className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    />
                    <label htmlFor="in_stock" className="ml-2 text-sm text-gray-700">
                      –í –Ω–∞–ª–∏—á–∏–∏
                    </label>
                  </div>
                </div>

                {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
                    </label>
                    <div className="border-2 border-dashed border-gray-300 rounded-lg p-4 hover:border-blue-500 transition-colors">
                      <input
                        type="file"
                        multiple
                        accept="image/*"
                        onChange={(e) => e.target.files && handleProductImageUpload(e.target.files)}
                        className="hidden"
                        id="product-images"
                        disabled={uploadingProductImages}
                      />
                      <label htmlFor="product-images" className="cursor-pointer block text-center">
                        {uploadingProductImages ? (
                          <div className="text-blue-600">
                            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2"></div>
                            –ó–∞–≥—Ä—É–∑–∫–∞...
                          </div>
                        ) : (
                          <div className="text-gray-600">
                            <ImageIcon className="w-8 h-8 mx-auto mb-2" />
                            <span className="text-sm">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</span>
                          </div>
                        )}
                      </label>
                    </div>
                  </div>

                  {/* –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
                  {productFormData.images.length > 0 && (
                    <div className="grid grid-cols-2 gap-2">
                      {productFormData.images.map((image, index) => (
                        <div key={index} className="relative">
                          <img
                            src={image}
                            alt={`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index + 1}`}
                            className="w-full h-24 object-cover rounded border"
                          />
                          <button
                            onClick={() => removeProductImage(index)}
                            className="absolute top-1 right-1 bg-red-600 text-white p-1 rounded-full hover:bg-red-700 transition-colors"
                          >
                            <X className="w-3 h-3" />
                          </button>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                </label>
                <textarea
                  value={productFormData.description}
                  onChange={(e) => setProductFormData({...productFormData, description: e.target.value})}
                  rows={4}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                  placeholder="–û–ø–∏—à–∏—Ç–µ —Ç–æ–≤–∞—Ä, –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏"
                />
              </div>
            </div>

            {/* Footer –º–æ–¥–∞–ª–∞ */}
            <div className="border-t-2 border-black p-6">
              <div className="flex items-center justify-between">
                <button
                  onClick={() => setShowProductEditor(false)}
                  className="border-2 border-gray-400 text-gray-600 px-6 py-3 hover:bg-gray-400 hover:text-white transition-all text-sm font-medium uppercase tracking-wider"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  onClick={handleSaveProduct}
                  disabled={!productFormData.name.trim()}
                  className="bg-blue-600 text-white px-6 py-3 hover:bg-blue-700 transition-all text-sm font-medium uppercase tracking-wider disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
                >
                  <Save className="w-4 h-4" />
                  {editingProduct ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'}
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç–æ–≤–∞—Ä–∞ - —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω */}
      {selectedProduct && showProductModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60] p-4">
          <div className="bg-white border-4 border-black max-w-5xl w-full max-h-[95vh] my-4 flex flex-col">
            {/* Header –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–≤–∞—Ä–∞ */}
            <div className="border-b-2 border-black p-8">
              <div className="flex items-center justify-between">
                <div className="flex items-start gap-8">
                  {/* –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                  <div className="w-48 h-48 border-2 border-black flex items-center justify-center bg-gray-50">
                    {selectedProduct.images && selectedProduct.images.length > 0 ? (
                      <img 
                        src={selectedProduct.images[0]} 
                        alt={selectedProduct.name}
                        className="w-full h-full object-cover"
                      />
                    ) : (
                      <div className="text-gray-400 text-center">
                        <Package className="w-24 h-24 mx-auto mb-3" />
                        <span className="text-lg font-medium">–ù–µ—Ç —Ñ–æ—Ç–æ</span>
                      </div>
                    )}
                  </div>
                  
                  {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                  <div className="flex-1 space-y-4">
                    <div>
                      <h2 className="text-4xl font-light text-black tracking-wide mb-2">{selectedProduct.name}</h2>
                      <div className="w-32 h-0.5 bg-black"></div>
                    </div>
                    
                    {selectedProduct.sku && (
                      <p className="text-gray-600 font-mono text-sm">
                        –ê—Ä—Ç–∏–∫—É–ª: <span className="text-black font-medium">{selectedProduct.sku}</span>
                      </p>
                    )}

                    {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É */}
                    <div className="grid grid-cols-3 gap-6 pt-4">
                      <div className="text-center">
                        <div className="text-3xl font-light text-black mb-1">
                          {selectedProduct.price ? `${selectedProduct.price} ${selectedProduct.currency || 'USD'}` : '‚Äî'}
                        </div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–¶–µ–Ω–∞</div>
                      </div>
                      
                      <div className="text-center">
                        <div className="text-3xl font-light text-black mb-1">
                          {selectedProduct.min_order || '‚Äî'}
                        </div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–ú–∏–Ω. –∑–∞–∫–∞–∑</div>
                      </div>
                      
                      <div className="text-center">
                        <div className={`text-3xl font-light mb-1 ${selectedProduct.in_stock ? 'text-green-600' : 'text-red-600'}`}>
                          {selectedProduct.in_stock ? '‚úì' : '‚úó'}
                        </div>
                        <div className="text-sm text-gray-600 uppercase tracking-wider">–ù–∞–ª–∏—á–∏–µ</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <button
                  onClick={closeProductModal}
                  className="border-2 border-black text-black px-4 py-2 hover:bg-black hover:text-white transition-all text-2xl font-bold"
                >
                  ‚úï
                </button>
              </div>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
            <div className="flex-1 overflow-y-auto">
              <div className="grid grid-cols-1 lg:grid-cols-3 gap-0">
                {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –û–ø–∏—Å–∞–Ω–∏–µ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                <div className="lg:col-span-2 p-8 border-r-2 border-black">
                  <div className="space-y-8">
                    {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                    {selectedProduct.description && (
                      <div>
                        <h3 className="text-2xl font-light text-black mb-4 tracking-wide">
                          –û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                        </h3>
                        <div className="w-16 h-0.5 bg-black mb-6"></div>
                        <div className="text-gray-700 leading-relaxed text-lg whitespace-pre-wrap">
                          {selectedProduct.description}
                        </div>
                      </div>
                    )}

                    {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                    {selectedProduct.images && selectedProduct.images.length > 1 && (
                      <div>
                        <h3 className="text-2xl font-light text-black mb-4 tracking-wide">
                          –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        </h3>
                        <div className="w-16 h-0.5 bg-black mb-6"></div>
                        <div className="grid grid-cols-3 gap-4">
                          {selectedProduct.images.slice(1).map((image: string, index: number) => (
                            <div key={index} className="border-2 border-gray-200 hover:border-black transition-colors">
                              <img 
                                src={image} 
                                alt={`${selectedProduct.name} - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index + 2}`}
                                className="w-full h-32 object-cover"
                              />
                            </div>
                          ))}
                        </div>
                      </div>
                    )}

                    {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                    {selectedProduct.specifications && Object.keys(selectedProduct.specifications).length > 0 && (
                      <div>
                        <h3 className="text-2xl font-light text-black mb-4 tracking-wide">
                          –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                        </h3>
                        <div className="w-16 h-0.5 bg-black mb-6"></div>
                        <div className="space-y-3">
                          {Object.entries(selectedProduct.specifications).map(([key, value]) => (
                            <div key={key} className="flex justify-between py-3 border-b border-gray-200">
                              <span className="text-gray-600 capitalize text-lg">{key}</span>
                              <span className="font-medium text-black text-lg">{String(value)}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>

                {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
                <div className="p-8 bg-gray-50 space-y-8">
                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ */}
                  <div>
                    <h3 className="text-2xl font-light text-black mb-4 tracking-wide">
                      –ü–æ—Å—Ç–∞–≤—â–∏–∫
                    </h3>
                    <div className="w-16 h-0.5 bg-black mb-6"></div>
                    
                    <div className="border-2 border-black p-6 bg-white">
                      <div className="flex items-center gap-4 mb-4">
                        <div className="w-16 h-16 border-2 border-black flex items-center justify-center bg-gray-50">
                          {selectedSupplier?.logo_url ? (
                            <img 
                              src={selectedSupplier.logo_url} 
                              alt={selectedSupplier.name}
                              className="w-full h-full object-cover"
                            />
                          ) : (
                            <Building className="w-8 h-8 text-gray-400" />
                          )}
                        </div>
                        <div>
                          <h4 className="text-xl font-medium text-black">{selectedSupplier?.name}</h4>
                          <p className="text-gray-600">{selectedSupplier?.company_name}</p>
                        </div>
                      </div>
                      
                      <div className="space-y-2 text-sm">
                        <div className="flex justify-between">
                          <span className="text-gray-600">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</span>
                          <span className="text-black">{selectedSupplier?.city}, {selectedSupplier?.country}</span>
                        </div>
                        {selectedProduct.category && (
                          <div className="flex justify-between">
                            <span className="text-gray-600">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                            <span className="text-black">{selectedProduct.category}</span>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>

                  {/* –î–µ–π—Å—Ç–≤–∏—è */}
                  <div>
                    <h3 className="text-2xl font-light text-black mb-4 tracking-wide">
                      –î–µ–π—Å—Ç–≤–∏—è
                    </h3>
                    <div className="w-16 h-0.5 bg-black mb-6"></div>
                    
                    <div className="space-y-4">
                      <button className="w-full bg-black text-white py-4 px-6 hover:bg-gray-800 transition-colors text-lg font-medium uppercase tracking-wider flex items-center justify-center gap-3">
                        <MessageCircle className="w-5 h-5" />
                        –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ü–µ–Ω—É
                      </button>
                      
                      <button className="w-full border-2 border-black text-black py-4 px-6 hover:bg-black hover:text-white transition-colors text-lg font-medium uppercase tracking-wider flex items-center justify-center gap-3">
                        <Plus className="w-5 h-5" />
                        –î–æ–±–∞–≤–∏—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç
                      </button>
                      
                      <button className="w-full border-2 border-gray-400 text-gray-600 py-3 px-6 hover:bg-gray-400 hover:text-white transition-colors text-sm font-medium uppercase tracking-wider flex items-center justify-center gap-3">
                        <Heart className="w-4 h-4" />
                        –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                      </button>
                    </div>
                  </div>

                  {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="pt-6 border-t border-gray-300">
                    <div className="text-xs text-gray-500 space-y-1">
                      <div>ID —Ç–æ–≤–∞—Ä–∞: <span className="font-mono">{selectedProduct.id}</span></div>
                      <div>–î–æ–±–∞–≤–ª–µ–Ω: {new Date(selectedProduct.created_at).toLocaleDateString('ru-RU')}</div>
                      {selectedProduct.updated_at !== selectedProduct.created_at && (
                        <div>–û–±–Ω–æ–≤–ª–µ–Ω: {new Date(selectedProduct.updated_at).toLocaleDateString('ru-RU')}</div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –≠–•–û –ö–ê–†–¢–û–ß–ö–ò: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {showEchoCardsModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white max-w-[1384px] w-full max-h-[95vh] overflow-hidden border-4 border-black">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
            <div className="flex items-center justify-between p-6 border-b-2 border-black bg-purple-50">
              <div>
                <h2 className="text-3xl font-light text-black tracking-wide">üîÆ –≠—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤</h2>
                <p className="text-gray-600 mt-1">–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∏–∑ –≤–∞—à–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤</p>
              </div>
              <button
                onClick={() => setShowEchoCardsModal(false)}
                className="border-2 border-black text-black px-4 py-2 hover:bg-black hover:text-white transition-all text-2xl font-bold"
              >
                ‚úï
              </button>
            </div>

            {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
            <div className="p-6 overflow-y-auto max-h-[calc(95vh-140px)]">
              {loadingEchoCards ? (
                <div className="text-center py-12">
                  <div className="text-xl text-gray-600">üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã...</div>
                  <div className="text-sm text-gray-500 mt-2">–ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</div>
                </div>
              ) : echoCardsError ? (
                <div className="text-center py-12">
                  <div className="text-xl text-red-600">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</div>
                  <div className="text-sm text-gray-500 mt-2">{echoCardsError}</div>
                  <button 
                    onClick={loadEchoCards}
                    className="mt-4 bg-purple-600 text-white px-6 py-2 hover:bg-purple-700 transition-colors"
                  >
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                  </button>
                </div>
              ) : echoCards.length === 0 ? (
                <div className="text-center py-12">
                  <div className="text-xl text-gray-600">üîÆ –≠—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>
                  <div className="text-sm text-gray-500 mt-2">
                    –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
                  </div>
                </div>
              ) : (
                <div className="space-y-6">
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π */}
                  <div className="bg-purple-50 border-2 border-purple-200 p-4 mb-6">
                    <div className="text-lg font-medium text-purple-800">
                      üéØ –ù–∞–π–¥–µ–Ω–æ {echoCards.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
                    </div>
                    <div className="text-sm text-purple-600 mt-1">
                      –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
                    </div>
                  </div>

                  {/* –°–ø–∏—Å–æ–∫ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
                  {echoCards.map((echoCard, index) => (
                    <div key={echoCard.supplier_key} className="border-2 border-gray-300 hover:border-purple-400 transition-all p-6">
                      <div className="flex items-start justify-between">
                        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                        <div className="flex-1">
                          <div className="flex items-center gap-4 mb-4">
                            <h3 className="text-2xl font-light text-black tracking-wide">
                              {echoCard.supplier_info.name}
                            </h3>
                            <div className="w-px h-6 bg-gray-400"></div>
                            <span className="bg-purple-100 text-purple-800 px-3 py-1 text-xs uppercase tracking-wider font-medium">
                              {echoCard.supplier_info.category}
                            </span>
                            <span className="bg-green-100 text-green-800 px-3 py-1 text-xs uppercase tracking-wider font-medium">
                              –ò–ó {echoCard.statistics.total_projects} –ü–†–û–ï–ö–¢–û–í
                            </span>
                          </div>

                          <div className="grid grid-cols-3 gap-6 mb-4">
                            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
                            <div className="border-l-4 border-purple-600 pl-4">
                              <div className="text-2xl font-light text-black">{echoCard.statistics.success_rate}%</div>
                              <div className="text-sm text-gray-600 uppercase tracking-wider">–£—Å–ø–µ—à–Ω–æ—Å—Ç—å</div>
                            </div>
                            <div className="border-l-4 border-green-600 pl-4">
                              <div className="text-2xl font-light text-black">${echoCard.statistics.total_spent.toLocaleString()}</div>
                              <div className="text-sm text-gray-600 uppercase tracking-wider">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ</div>
                            </div>
                            <div className="border-l-4 border-blue-600 pl-4">
                              <div className="text-2xl font-light text-black">{echoCard.statistics.products_count}</div>
                              <div className="text-sm text-gray-600 uppercase tracking-wider">–¢–æ–≤–∞—Ä–æ–≤</div>
                            </div>
                          </div>

                          {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                          <div className="flex items-center gap-6 text-sm text-gray-600 mb-4">
                            {echoCard.supplier_info.city && (
                              <div className="flex items-center gap-2">
                                <MapPin className="w-4 h-4" />
                                <span>{echoCard.supplier_info.city}, {echoCard.supplier_info.country}</span>
                              </div>
                            )}
                            {echoCard.supplier_info.contact_email && (
                              <div className="flex items-center gap-2">
                                <Mail className="w-4 h-4" />
                                <span>{echoCard.supplier_info.contact_email}</span>
                              </div>
                            )}
                            {echoCard.supplier_info.contact_phone && (
                              <div className="flex items-center gap-2">
                                <Phone className="w-4 h-4" />
                                <span>{echoCard.supplier_info.contact_phone}</span>
                              </div>
                            )}
                          </div>

                          {/* –¢–æ–≤–∞—Ä—ã */}
                          {echoCard.products && echoCard.products.length > 0 && (
                            <div className="mb-4">
                              <div className="text-sm font-medium text-gray-700 mb-2">–¢–æ–≤–∞—Ä—ã –∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤:</div>
                              <div className="flex flex-wrap gap-2">
                                {echoCard.products.slice(0, 5).map((product: string, idx: number) => (
                                  <span key={idx} className="bg-gray-100 text-gray-700 px-2 py-1 text-xs border border-gray-300">
                                    {product}
                                  </span>
                                ))}
                                {echoCard.products.length > 5 && (
                                  <span className="text-xs text-gray-500">
                                    +{echoCard.products.length - 5} –µ—â–µ
                                  </span>
                                )}
                              </div>
                            </div>
                          )}

                          {/* –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö */}
                          <div className="flex items-center gap-4 mb-4">
                            <div className="text-sm text-gray-600">
                              –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {echoCard.extraction_info.completeness_score}%
                            </div>
                            <div className="flex-1 bg-gray-200 h-2">
                              <div 
                                className="bg-purple-600 h-2" 
                                style={{width: `${echoCard.extraction_info.completeness_score}%`}}
                              ></div>
                            </div>
                          </div>

                          {/* –í–´–ë–û–† –®–ê–ì–û–í –ò–ú–ü–û–†–¢–ê */}
                          {(() => {
                            initializeStepsSelection(echoCard.supplier_key)
                            const selection = importStepsSelection[echoCard.supplier_key] || {
                              step2_products: true,
                              step4_payment: true,
                              step5_requisites: true
                            }
                            
                            return (
                              <div className="bg-gray-50 border-2 border-gray-200 p-4 mb-4">
                                <div className="text-sm font-medium text-gray-700 mb-3">
                                  üéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ 7-—à–∞–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞:
                                </div>
                                <div className="space-y-2">
                                  <label className="flex items-center gap-3 cursor-pointer hover:bg-gray-100 p-2 rounded">
                                    <input
                                      type="checkbox"
                                      checked={selection.step2_products}
                                      onChange={(e) => updateStepSelection(echoCard.supplier_key, 'step2_products', e.target.checked)}
                                      className="w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
                                    />
                                    <div className="flex items-center gap-2">
                                      <span className="bg-blue-100 text-blue-800 px-2 py-1 text-xs font-medium">STEP 2</span>
                                      <span className="text-sm">–¢–æ–≤–∞—Ä—ã –∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ ({echoCard.statistics.products_count} —Ç–æ–≤–∞—Ä–æ–≤)</span>
                                    </div>
                                  </label>
                                  
                                  <label className="flex items-center gap-3 cursor-pointer hover:bg-gray-100 p-2 rounded">
                                    <input
                                      type="checkbox"
                                      checked={selection.step4_payment}
                                      onChange={(e) => updateStepSelection(echoCard.supplier_key, 'step4_payment', e.target.checked)}
                                      className="w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
                                    />
                                    <div className="flex items-center gap-2">
                                      <span className="bg-orange-100 text-orange-800 px-2 py-1 text-xs font-medium">STEP 4</span>
                                      <span className="text-sm">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã ({echoCard.supplier_info.payment_type || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'})</span>
                                    </div>
                                  </label>
                                  
                                  <label className="flex items-center gap-3 cursor-pointer hover:bg-gray-100 p-2 rounded">
                                    <input
                                      type="checkbox"
                                      checked={selection.step5_requisites}
                                      onChange={(e) => updateStepSelection(echoCard.supplier_key, 'step5_requisites', e.target.checked)}
                                      className="w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
                                    />
                                    <div className="flex items-center gap-2">
                                      <span className="bg-green-100 text-green-800 px-2 py-1 text-xs font-medium">STEP 5</span>
                                      <span className="text-sm">–†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–±–∞–Ω–∫/–∫–∞—Ä—Ç–∞/–∫—Ä–∏–ø—Ça)</span>
                                    </div>
                                  </label>
                                </div>
                              </div>
                            )
                          })()}
                        </div>

                        {/* –ö–Ω–æ–ø–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ */}
                        <div className="ml-6">
                          <button
                            onClick={() => {
                              const selectedSteps = importStepsSelection[echoCard.supplier_key] || {
                                step2_products: true,
                                step4_payment: true,
                                step5_requisites: true
                              }
                              // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ 1
                              resetSupplierForm()
                              setSupplierFormStep(1)
                              setMaxSupplierStep(1)
                              // –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
                              setEchoCardForImport({...echoCard, selectedSteps})
                              setShowAddSupplierModal(true)
                              setShowEchoCardsModal(false)
                              console.log('üöÄ –ò–º–ø–æ—Ä—Ç —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏: —Ñ–æ—Ä–º–∞ —Å–±—Ä–æ—à–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å —à–∞–≥–∞ 1')
                            }}
                            className="bg-purple-600 text-white px-6 py-3 hover:bg-purple-700 transition-colors font-medium uppercase tracking-wider text-sm flex items-center gap-2"
                          >
                            <Plus className="w-4 h-4" />
                            –î–û–ó–ê–ü–û–õ–ù–ò–¢–¨
                          </button>
                          {echoCard.extraction_info.needs_manual_review && (
                            <div className="text-xs text-amber-600 mt-1 text-center">
                              ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>

            {/* –§—É—Ç–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
            <div className="p-4 border-t-2 border-black bg-gray-50 flex justify-between items-center">
              <div className="text-sm text-gray-600">
                üí° –≠—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
              </div>
              <button
                onClick={() => setShowEchoCardsModal(false)}
                className="border-2 border-gray-400 text-gray-600 px-6 py-2 hover:bg-gray-400 hover:text-white transition-all uppercase tracking-wider text-sm font-medium"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è inline */}

      {/* üõí –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã */}
      {showCart && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg max-w-2xl w-full max-h-[80vh] overflow-hidden">
            <div className="p-6 border-b">
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-xl font-semibold flex items-center gap-2">
                    <ShoppingCart className="w-5 h-5" />
                    –ö–æ—Ä–∑–∏–Ω–∞ ({getTotalItems()})
                  </h2>
                  {activeSupplier && (
                    <p className="text-sm text-gray-600 mt-1">
                      üîí –ü–æ—Å—Ç–∞–≤—â–∏–∫: <span className="font-medium">{activeSupplier}</span>
                    </p>
                  )}
                </div>
                <button
                  onClick={() => setShowCart(false)}
                  className="text-gray-500 hover:text-gray-700"
                >
                  <X className="w-6 h-6" />
                </button>
              </div>
            </div>

            <div className="p-6 max-h-[50vh] overflow-y-auto">
              {cart.length === 0 ? (
                <div className="text-center py-8">
                  <div className="text-gray-500 mb-4">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</div>
                  <div className="text-sm text-gray-400">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞</div>
                </div>
              ) : (
                <div className="space-y-4">
                  {cart.map((item) => (
                    <div key={item.id} className="flex items-center gap-4 p-4 border rounded-lg">
                      <div className="w-16 h-16 bg-gray-100 rounded flex-shrink-0">
                        {item.images && item.images[0] ? (
                          <img
                            src={item.images[0]}
                            alt={item.name}
                            className="w-full h-full object-cover rounded"
                          />
                        ) : (
                          <div className="w-full h-full flex items-center justify-center">
                            <Package className="w-6 h-6 text-gray-400" />
                          </div>
                        )}
                      </div>
                      
                      <div className="flex-1">
                        <div className="font-medium text-sm">{item.name}</div>
                        <div className="text-xs text-gray-500">{item.supplier_name}</div>
                        <div className="flex items-center gap-2 text-sm">
                          <span className="text-gray-600">${item.price}</span>
                          <span className="text-gray-400">√ó</span>
                          <span className="text-gray-600">{item.quantity}</span>
                          <span className="text-gray-400">=</span>
                          <span className="font-semibold text-green-600">
                            ${item.total_price.toFixed(2)} {item.currency}
                          </span>
                        </div>
                      </div>

                      <div className="flex items-center gap-2">
                        <button
                          onClick={() => updateCartQuantity(item.id, item.quantity - 1)}
                          className="w-8 h-8 border rounded flex items-center justify-center hover:bg-gray-100"
                        >
                          -
                        </button>
                        <span className="w-8 text-center">{item.quantity}</span>
                        <button
                          onClick={() => updateCartQuantity(item.id, item.quantity + 1)}
                          className="w-8 h-8 border rounded flex items-center justify-center hover:bg-gray-100"
                        >
                          +
                        </button>
                      </div>

                      <button
                        onClick={() => removeFromCart(item.id)}
                        className="text-red-500 hover:text-red-700 p-1"
                      >
                        <X className="w-4 h-4" />
                      </button>
                    </div>
                  ))}
                </div>
              )}
            </div>

            {cart.length > 0 && (
              <div className="p-6 border-t bg-gray-50">
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ –¥–ª—è —à–∞–≥–æ–≤ 4 –∏ 5 */}
                {activeSupplier && (
                  <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                    <div className="text-sm font-medium text-blue-900 mb-2">
                      üí° –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞:
                    </div>
                    <div className="text-xs text-blue-700 space-y-1">
                      <div>üìã –®–∞–≥ 2: –¢–æ–≤–∞—Ä—ã –æ—Ç "{activeSupplier}"</div>
                      <div>üí≥ –®–∞–≥ 4: –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</div>
                      <div>üè¶ –®–∞–≥ 5: –†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –±—É–¥—É—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏</div>
                    </div>
                  </div>
                )}
                
                {/* –ü–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π */}
                <div className="mb-4 space-y-2">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:</span>
                    <span className="font-medium">{getTotalItems()} —à—Ç.</span>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-gray-600">–°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤:</span>
                    <span className="font-medium">${getTotalPrice().toFixed(2)}</span>
                  </div>
                  <div className="pt-2 border-t">
                    <div className="flex items-center justify-between">
                      <span className="font-semibold text-lg">–ò—Ç–æ–≥–æ:</span>
                      <span className="font-bold text-lg text-green-600">
                        ${getTotalPrice().toFixed(2)}
                      </span>
                    </div>
                  </div>
                </div>
                
                <button
                  onClick={createProjectFromCart}
                  className="w-full bg-purple-600 text-white py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium flex items-center justify-center gap-2"
                >
                  <Plus className="w-5 h-5" />
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞
                </button>
              </div>
            )}
          </div>
        </div>
      )}

      {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ */}
      <input
        type="file"
        accept="image/*"
        onChange={(e) => {
          const file = e.target.files?.[0]
          if (file) {
            handleSupplierLogoChange(file)
          }
        }}
        className="hidden"
        ref={(el) => setLogoInputRef(el)}
      />
    </div>
  )
}