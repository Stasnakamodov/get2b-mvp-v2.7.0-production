import { type NextRequest, NextResponse } from "next/server"
import { sendTelegramProjectApprovalRequest } from "@/lib/telegram"

export async function POST(request: NextRequest) {
  try {
    console.log("üì° [API] /api/telegram/send-project-approval –≤—ã–∑–≤–∞–Ω");
    
    const { text, projectId, type } = await request.json()
    console.log("üìã [API] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:", { text: text?.substring(0, 100) + "...", projectId, type });

    if (!text || !projectId) {
      console.error("‚ùå [API] –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è");
      return NextResponse.json({ error: "Text and projectId are required" }, { status: 400 })
    }

    console.log("üöÄ [API] –í—ã–∑—ã–≤–∞–µ–º sendTelegramProjectApprovalRequest...");
    await sendTelegramProjectApprovalRequest(text, projectId, type)
    console.log("‚úÖ [API] sendTelegramProjectApprovalRequest –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ");

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error("‚ùå [API] –û—à–∏–±–∫–∞ –≤ /api/telegram/send-project-approval:", error)
    console.error("‚ùå [API] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", {
      message: error instanceof Error ? error.message : String(error),
      stack: error instanceof Error ? error.stack : undefined
    });
    return NextResponse.json({ 
      error: "Failed to send approval request",
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 })
  }
}
