import { type NextRequest, NextResponse } from "next/server";

export async function GET(request: NextRequest) {
  try {
    console.log("üîß API /test-yandex-config –≤—ã–∑–≤–∞–Ω");
    
    const apiKey = process.env.YANDEX_VISION_API_KEY || '';
    const folderId = process.env.YANDEX_FOLDER_ID || '';
    
    console.log('üîë API Key:', apiKey ? `${apiKey.substring(0, 8)}...` : '–ù–ï –ù–ê–ô–î–ï–ù');
    console.log('üìÅ Folder ID:', folderId ? folderId : '–ù–ï –ù–ê–ô–î–ï–ù');
    
    return NextResponse.json({
      success: true,
      config: {
        apiKeyExists: !!apiKey,
        apiKeyPreview: apiKey ? `${apiKey.substring(0, 8)}...` : null,
        folderIdExists: !!folderId,
        folderId: folderId || null
      },
      message: "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Yandex Vision –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ API test-yandex-config:", error);
    return NextResponse.json(
      {
        error: "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
        details: error instanceof Error ? error.message : String(error)
      },
      { status: 500 }
    );
  }
} 