const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
);

async function debugAPICounting() {
  console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c021fb58-c00f-405e-babd-47d20e8a8ff6\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: userSuppliers } = await supabase
    .from('catalog_user_suppliers')
    .select('id, name, category, catalog_user_products(*)')
    .eq('user_id', 'c021fb58-c00f-405e-babd-47d20e8a8ff6')
    .eq('is_active', true);
    
  console.log('üë• –í–°–ï –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
  if (userSuppliers) {
    userSuppliers.forEach(supplier => {
      console.log(`   - ${supplier.name}: –∫–∞—Ç–µ–≥–æ—Ä–∏—è "${supplier.category}", —Ç–æ–≤–∞—Ä–æ–≤: ${supplier.catalog_user_products?.length || 0}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      if (supplier.catalog_user_products && supplier.catalog_user_products.length > 0) {
        supplier.catalog_user_products.forEach(product => {
          console.log(`      ‚Ä¢ ${product.name} (${product.category})`);
        });
      }
    });
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"
  console.log('\nüì± –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞":');
  
  const electronicsKeywords = ['—ç–ª–µ–∫—Ç—Ä–æ–Ω', 'electronic', '–∫–æ–º–ø—å—é—Ç–µ—Ä', 'computer', 'it', 'tech'];
  
  const electronicsSuppliers = userSuppliers?.filter(supplier => {
    const supplierCategory = supplier.category?.toLowerCase() || '';
    return electronicsKeywords.some(keyword => 
      supplierCategory.includes(keyword) || keyword.includes(supplierCategory)
    );
  });
  
  let totalElectronicsProducts = 0;
  
  if (electronicsSuppliers && electronicsSuppliers.length > 0) {
    electronicsSuppliers.forEach(supplier => {
      const productsCount = supplier.catalog_user_products?.length || 0;
      totalElectronicsProducts += productsCount;
      
      console.log(`   - ${supplier.name}: ${productsCount} —Ç–æ–≤–∞—Ä–æ–≤`);
      if (supplier.catalog_user_products) {
        supplier.catalog_user_products.forEach(product => {
          console.log(`      ‚Ä¢ ${product.name} (—Ä–µ–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category})`);
        });
      }
    });
    
    console.log(`\nüìä –ò–¢–û–ì–û –≤ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–µ": ${electronicsSuppliers.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, ${totalElectronicsProducts} —Ç–æ–≤–∞—Ä–æ–≤`);
  } else {
    console.log('   –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π API
  console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π API:');
  
  try {
    const response = await fetch('http://localhost:3000/api/catalog/categories/hierarchical?room=user', {
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    const apiData = await response.json();
    
    if (apiData.success) {
      const electronicsCategory = apiData.categoryTrees?.find(tree => 
        tree.main_category.name.toLowerCase().includes('—ç–ª–µ–∫—Ç—Ä–æ–Ω')
      );
      
      if (electronicsCategory) {
        console.log(`   API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: ${electronicsCategory.main_category.products_count || 0} —Ç–æ–≤–∞—Ä–æ–≤`);
        console.log(`   API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: ${electronicsCategory.main_category.suppliers_count || 0} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤`);
        
        console.log('   –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ API:');
        electronicsCategory.subcategories?.forEach(sub => {
          console.log(`      - ${sub.name}: ${sub.products_count || 0} —Ç–æ–≤–∞—Ä–æ–≤`);
        });
        
        console.log(`\nüö® –ü–†–û–ë–õ–ï–ú–ê: –†–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ ${totalElectronicsProducts}, –Ω–æ API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç ${electronicsCategory.main_category.products_count || 0}`);
        
        if (totalElectronicsProducts !== (electronicsCategory.main_category.products_count || 0)) {
          console.log('‚ùå –ü–æ–¥—Å—á–µ—Ç –≤ API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
          console.log('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
          console.log('   1. API —Å—á–∏—Ç–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã –∏–∑ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
          console.log('   2. API –∫—ç—à–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ');
          console.log('   3. –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ –ø–æ–¥—Å—á–µ—Ç–∞ API');
        }
      }
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API:', error.message);
  }

  process.exit(0);
}

debugAPICounting().catch(console.error);