// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
import React from "react";
import { useAddSupplierContext } from "../../catalog/context/AddSupplierContext";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Separator } from "@/components/ui/separator";
import { 
  CreditCard, 
  Building2, 
  Bitcoin,
  Landmark,
  Smartphone,
  FileText
} from "lucide-react";

export function AddSupplierStep4BankingDetails() {
  const { supplierData, setSupplierData } = useAddSupplierContext();

  const updateField = (field: string, value: string) => {
    setSupplierData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</h2>
        <p className="text-gray-600 mt-2">
          –î–æ–±–∞–≤—å—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
        </p>
      </div>

      {/* üè¶ –ë–ê–ù–ö–û–í–°–ö–ò–ï –†–ï–ö–í–ò–ó–ò–¢–´ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Building2 className="h-5 w-5 text-blue-500" />
            –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <Label htmlFor="recipient_name">–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–ª–∞—Ç–µ–∂–∞</Label>
              <Input
                id="recipient_name"
                value={supplierData.recipient_name || ''}
                onChange={(e) => updateField('recipient_name', e.target.value)}
                placeholder="–û–û–û –í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è"
              />
            </div>
            <div>
              <Label htmlFor="bank_name">–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</Label>
              <Input
                id="bank_name"
                value={supplierData.bank_name || ''}
                onChange={(e) => updateField('bank_name', e.target.value)}
                placeholder="–°–±–µ—Ä–±–∞–Ω–∫ –†–æ—Å—Å–∏–∏"
              />
            </div>
            <div>
              <Label htmlFor="account_number">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞</Label>
              <Input
                id="account_number"
                value={supplierData.account_number || ''}
                onChange={(e) => updateField('account_number', e.target.value)}
                placeholder="40702810..."
              />
            </div>
            <div>
              <Label htmlFor="swift">SWIFT/BIC</Label>
              <Input
                id="swift"
                value={supplierData.swift || ''}
                onChange={(e) => updateField('swift', e.target.value)}
                placeholder="SABRRUMM"
              />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* üì± P2P –ü–ï–†–ï–í–û–î–´ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Smartphone className="h-5 w-5 text-green-500" />
            P2P –ø–µ—Ä–µ–≤–æ–¥—ã (–∫–∞—Ä—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É)
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <Label htmlFor="p2p_bank">–ë–∞–Ω–∫ –∫–∞—Ä—Ç—ã</Label>
              <Input
                id="p2p_bank"
                value={supplierData.p2p_bank || ''}
                onChange={(e) => updateField('p2p_bank', e.target.value)}
                placeholder="–°–±–µ—Ä–±–∞–Ω–∫"
              />
            </div>
            <div>
              <Label htmlFor="p2p_card_number">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã</Label>
              <Input
                id="p2p_card_number"
                value={supplierData.p2p_card_number || ''}
                onChange={(e) => updateField('p2p_card_number', e.target.value)}
                placeholder="2202 **** **** 1234"
              />
            </div>
            <div>
              <Label htmlFor="p2p_holder_name">–î–µ—Ä–∂–∞—Ç–µ–ª—å –∫–∞—Ä—Ç—ã</Label>
              <Input
                id="p2p_holder_name"
                value={supplierData.p2p_holder_name || ''}
                onChange={(e) => updateField('p2p_holder_name', e.target.value)}
                placeholder="IVAN PETROV"
              />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* ‚Çø –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–´ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bitcoin className="h-5 w-5 text-orange-500" />
            –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <Label htmlFor="crypto_name">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</Label>
              <Input
                id="crypto_name"
                value={supplierData.crypto_name || ''}
                onChange={(e) => updateField('crypto_name', e.target.value)}
                placeholder="USDT, Bitcoin, Ethereum"
              />
            </div>
            <div>
              <Label htmlFor="crypto_network">–°–µ—Ç—å</Label>
              <Input
                id="crypto_network"
                value={supplierData.crypto_network || ''}
                onChange={(e) => updateField('crypto_network', e.target.value)}
                placeholder="TRC20, ERC20, BEP20"
              />
            </div>
            <div className="md:col-span-2">
              <Label htmlFor="crypto_address">–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</Label>
              <Input
                id="crypto_address"
                value={supplierData.crypto_address || ''}
                onChange={(e) => updateField('crypto_address', e.target.value)}
                placeholder="TJRyWwFs..."
              />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* üá∑üá∫ –†–û–°–°–ò–ô–°–ö–ò–ï –†–ï–ö–í–ò–ó–ò–¢–´ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <FileText className="h-5 w-5 text-red-500" />
            –†–æ—Å—Å–∏–π—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <Label htmlFor="inn">–ò–ù–ù</Label>
              <Input
                id="inn"
                value={supplierData.inn || ''}
                onChange={(e) => updateField('inn', e.target.value)}
                placeholder="1234567890"
              />
            </div>
            <div>
              <Label htmlFor="kpp">–ö–ü–ü</Label>
              <Input
                id="kpp"
                value={supplierData.kpp || ''}
                onChange={(e) => updateField('kpp', e.target.value)}
                placeholder="123456789"
              />
            </div>
            <div>
              <Label htmlFor="ogrn">–û–ì–†–ù</Label>
              <Input
                id="ogrn"
                value={supplierData.ogrn || ''}
                onChange={(e) => updateField('ogrn', e.target.value)}
                placeholder="1234567890123"
              />
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
} 