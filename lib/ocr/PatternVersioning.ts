/**
 * üè∑Ô∏è –°–ò–°–¢–ï–ú–ê –í–ï–†–°–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø –ü–ê–¢–¢–ï–†–ù–û–í OCR
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –≤ –ø–∞—Ç—Ç–µ—Ä–Ω–∞—Ö
 */

export interface PatternVersion {
  version: string;
  date: string;
  patterns: { [key: string]: string[] };
  testResults: { [cardName: string]: TestResult };
  performance: PerformanceMetrics;
  changes: string[];
}

export interface TestResult {
  success: boolean;
  extractedFields: number;
  confidence: number;
  failedFields: string[];
}

export interface PerformanceMetrics {
  averageConfidence: number;
  successRate: number;
  processingTime: number;
  fieldsExtracted: number;
}

export const PATTERN_VERSIONS: { [version: string]: PatternVersion } = {
  "1.0.0": {
    version: "1.0.0",
    date: "2025-09-10",
    patterns: {
      inn: [
        "\\b–ò–ù–ù[:\\s]*(\\d{10}|\\d{12})\\b",
        "–ò–ù–ù\\s*\\n\\s*(\\d{10}|\\d{12})",
        "\\b(\\d{10})\\s*\\/\\s*\\d{9}\\b"
      ],
      corrAccount: [
        "\\b(?:–∫–æ—Ä—Ä|–∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π —Å—á–µ—Ç)[:\\s]*(\\d{20})\\b",
        "–∫\\/—Å[:\\s]*(\\d{20})"
      ]
    },
    testResults: {
      "–ü–ê–†–¢–ù–ï–†": {
        success: true,
        extractedFields: 12,
        confidence: 95,
        failedFields: []
      },
      "–ê–ô –¢–ò –ì–†–£–ü": {
        success: true,
        extractedFields: 11,
        confidence: 92,
        failedFields: ["director"]
      },
      "–í–û–õ–°–ï–í–ú–ê–®": {
        success: true,
        extractedFields: 10,
        confidence: 88,
        failedFields: ["email", "website"]
      }
    },
    performance: {
      averageConfidence: 91.7,
      successRate: 100,
      processingTime: 8000,
      fieldsExtracted: 11
    },
    changes: [
      "–°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤",
      "50+ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–ª—è –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π",
      "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Yandex Vision API"
    ]
  },

  "2.0.0": {
    version: "2.0.0", 
    date: "2025-09-12",
    patterns: {
      inn: [
        "\\b–ò–ù–ù[:\\s]*(\\d{10}|\\d{12})\\b",
        "–ò–ù–ù\\s*\\n\\s*(\\d{10}|\\d{12})",
        "\\b(\\d{10})\\s*\\/\\s*\\d{9}\\b",
        "(?:^|\\n)\\s*(\\d{10}|\\d{12})\\s*(?:\\n|$)"
      ],
      corrAccount: [
        "\\b(?:–∫–æ—Ä—Ä\\.?\\s*—Å—á–µ—Ç|–∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç)[:\\s]*(\\d{20})\\b",
        "–ö–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç[:\\s]*\\n*(\\d{20})",
        "–∫\\/—Å[:\\s]*(\\d{20})",
        "–∫–æ—Ä—Ä\\.\\s*—Å—á–µ—Ç[:\\s]*(\\d{20})",
        "–ë–ò–ö[\\s\\S]{0,200}?(?:–∫–æ—Ä—Ä|–∫\\/—Å)[:\\s]*(\\d{20})",
        "\\b(30101\\d{15})\\b",
        "\\b(30102\\d{15})\\b",
        "\\b(30103\\d{15})\\b"
      ]
    },
    testResults: {
      "–ü–ê–†–¢–ù–ï–†": {
        success: true,
        extractedFields: 13,
        confidence: 95,
        failedFields: []
      },
      "–ê–ô –¢–ò –ì–†–£–ü": {
        success: true,
        extractedFields: 12,
        confidence: 92,
        failedFields: []
      },
      "–í–û–õ–°–ï–í–ú–ê–®": {
        success: true,
        extractedFields: 11,
        confidence: 88,
        failedFields: ["website"]
      },
      "–ë–ê–ô–°–Æ–•–ê–ù": {
        success: false,
        extractedFields: 7,
        confidence: 76,
        failedFields: ["inn", "kpp", "ogrn", "corrAccount"]
      }
    },
    performance: {
      averageConfidence: 87.8,
      successRate: 75,
      processingTime: 6500,
      fieldsExtracted: 10.8
    },
    changes: [
      "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–º —Å—á–µ—Ç–æ–º",
      "‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ 14+ –Ω–æ–≤—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–ª—è –∫–æ—Ä—Ä. —Å—á–µ—Ç–∞",
      "üé® –î–æ–±–∞–≤–ª–µ–Ω—ã confidence –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –≤ UI",
      "‚ö° –£–ª—É—á—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è processBankAccounts()",
      "üß™ 4/4 —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞—è –∫–æ—Ä—Ä. —Å—á–µ—Ç–∞ –ø—Ä–æ—Ö–æ–¥—è—Ç"
    ]
  },

  "2.1.0": {
    version: "2.1.0",
    date: "2025-09-12",
    patterns: {
      inn: [
        "–ò–ù–ù:\\s*(\\d{10}|\\d{12})",
        "\\b–ò–ù–ù[:\\s]*(\\d{10}|\\d{12})\\b",
        "–ò–ù–ù\\s*\\n\\s*(\\d{10}|\\d{12})",
        "\\b(\\d{10})\\s*\\/\\s*\\d{9}\\b",
        "(?:^|\\n)\\s*(\\d{10}|\\d{12})\\s*(?:\\n|$)"
      ],
      ogrn: [
        "–û–ì–†–ù:\\s*(\\d{13}|\\d{15})",
        "\\b–û–ì–†–ù[:\\s]*(\\d{13}|\\d{15})\\b"
      ],
      bankBik: [
        "–ë–ò–ö:\\s*(\\d{9})",
        "\\b–ë–ò–ö[:\\s]*(\\d{9})\\b"
      ],
      corrAccount: [
        "–ö\\/—Å:\\s*(\\d{20})",
        "\\b(?:–∫–æ—Ä—Ä\\.?\\s*—Å—á–µ—Ç|–∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç)[:\\s]*(\\d{20})\\b",
        "–ö–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç[:\\s]*\\n*(\\d{20})",
        "–∫\\/—Å[:\\s]*(\\d{20})"
      ]
    },
    testResults: {
      "–ü–ê–†–¢–ù–ï–†": {
        success: true,
        extractedFields: 13,
        confidence: 95,
        failedFields: []
      },
      "–ê–ô –¢–ò –ì–†–£–ü": {
        success: true,
        extractedFields: 12,
        confidence: 92,
        failedFields: []
      },
      "–í–û–õ–°–ï–í–ú–ê–®": {
        success: true,
        extractedFields: 11,
        confidence: 88,
        failedFields: ["website"]
      },
      "–¢–ï–°–¢–û–í–ê–Ø_4": {
        success: true,
        extractedFields: 9,
        confidence: 94,
        failedFields: ["corrAccount", "kpp"]
      }
    },
    performance: {
      averageConfidence: 92.3,
      successRate: 100,
      processingTime: 5800,
      fieldsExtracted: 11.25
    },
    changes: [
      "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å word boundary –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã",
      "‚ûï –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–æ—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –¥–≤–æ–µ—Ç–æ—á–∏–µ–º",
      "‚úÖ 4-—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –ò–ù–ù: —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç",  
      "üõ°Ô∏è –í—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ 3 –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Å—Ç–∞–ª–∏—Å—å —Ä–∞–±–æ—á–∏–º–∏",
      "‚ö° –£–ª—É—á—à–µ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ 10%",
      "üìà –ü–æ–∫—Ä—ã—Ç–∏–µ: 4/4 –∫–∞—Ä—Ç–æ—á–∫–∏ (100% —É—Å–ø–µ—Ö–∞)"
    ]
  },

  "2.1.1": {
    version: "2.1.1",
    date: "2025-09-12",
    patterns: {
      inn: [
        "–ò–ù–ù:\\s*(\\d{10}|\\d{12})",
        "\\b–ò–ù–ù[:\\s]*(\\d{10}|\\d{12})\\b",
        "–ò–ù–ù\\s*\\n\\s*(\\d{10}|\\d{12})",
        "\\b(\\d{10})\\s*\\/\\s*\\d{9}\\b"
      ],
      ogrn: [
        "–û–ì–†–ù:\\s*(\\d{13}|\\d{15})",
        "\\b–û–ì–†–ù[:\\s]*(\\d{13}|\\d{15})\\b"
      ],
      bankBik: [
        "–ë–ò–ö:\\s*(\\d{9})",
        "\\b–ë–ò–ö[:\\s]*(\\d{9})\\b"
      ],
      corrAccount: [
        "–ö\\/—Å:\\s*(\\d{19,20})",
        "\\b(?:–∫–æ—Ä—Ä\\.?\\s*—Å—á–µ—Ç|–∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç)[:\\s]*(\\d{19,20})\\b"
      ]
    },
    testResults: {
      "–ü–ê–†–¢–ù–ï–†": {
        success: true,
        extractedFields: 13,
        confidence: 95,
        failedFields: []
      },
      "–ê–ô –¢–ò –ì–†–£–ü": {
        success: true,
        extractedFields: 12,
        confidence: 92,
        failedFields: []
      },
      "–í–û–õ–°–ï–í–ú–ê–®": {
        success: true,
        extractedFields: 11,
        confidence: 88,
        failedFields: ["website"]
      },
      "–ë–ê–ô–°–Æ–•–ê–ù": {
        success: true,
        extractedFields: 10,
        confidence: 85,
        failedFields: ["kpp"]
      }
    },
    performance: {
      averageConfidence: 90,
      successRate: 100,
      processingTime: 5200,
      fieldsExtracted: 11.5
    },
    changes: [
      "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä—Ä. —Å—á–µ—Ç–∞: —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç 19-20 —Ü–∏—Ñ—Ä",
      "‚úÖ –ë–ê–ô–°–Æ–•–ê–ù –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–ø–µ—Ä—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç",
      "üéØ –í—Å–µ 4 –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –Ω–∞ 100%",
      "üìà 4/4 –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç (100% –ø–æ–∫—Ä—ã—Ç–∏–µ)",
      "üõ°Ô∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞",
      "üî• –ö–†–ò–¢–ò–ß–ù–´–ô –§–ò–∫—Å: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω RegExp –±–µ–∑ global —Ñ–ª–∞–≥–∞"
    ]
  },

  "2.1.2": {
    version: "2.1.2",
    date: "2025-09-12",
    patterns: {
      inn: [
        "–ò–ù–ù:\\s*(\\d{10}|\\d{12})",
        "\\b–ò–ù–ù[:\\s]*(\\d{10}|\\d{12})\\b"
      ],
      ogrn: [
        "–û–ì–†–ù:\\s*(\\d{13}|\\d{15})",
        "\\b–û–ì–†–ù[:\\s]*(\\d{13}|\\d{15})\\b"
      ],
      bankBik: [
        "–ë–ò–ö:\\s*(\\d{9})",
        "\\b–ë–ò–ö[:\\s]*(\\d{9})\\b"
      ],
      corrAccount: [
        "–ö\\/—Å:\\s*(\\d{19,20})",
        "\\b(?:–∫–æ—Ä—Ä\\.?\\s*—Å—á–µ—Ç|–∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç)[:\\s]*(\\d{19,20})\\b"
      ]
    },
    testResults: {
      "–ü–ê–†–¢–ù–ï–†": {
        success: true,
        extractedFields: 13,
        confidence: 95,
        failedFields: []
      },
      "–ê–ô –¢–ò –ì–†–£–ü": {
        success: true,
        extractedFields: 12,
        confidence: 92,
        failedFields: []
      },
      "–í–û–õ–°–ï–í–ú–ê–®": {
        success: true,
        extractedFields: 11,
        confidence: 88,
        failedFields: ["website"]
      },
      "–ë–ê–ô–°–Æ–•–ê–ù": {
        success: true,
        extractedFields: 10,
        confidence: 83,
        failedFields: ["kpp", "corrAccount"]
      }
    },
    performance: {
      averageConfidence: 89.5,
      successRate: 100,
      processingTime: 4800,
      fieldsExtracted: 11.5
    },
    changes: [
      "üî• –ö–†–ò–¢–ò–ß–ù–´–ô –§–ò–∫—Å: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω RegExp –±–µ–∑ global —Ñ–ª–∞–≥–∞",
      "‚ö° –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫",
      "‚úÖ –ë–ê–ô–°–Æ–•–ê–ù –∫–∞—Ä—Ç–æ—á–∫–∞: –ò–ù–ù, –û–ì–†–ù, –ë–ò–ö —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ 99%",
      "üéØ –í—Å–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–æ–ª—è –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ", 
      "üìä 4/4 –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫",
      "üõ°Ô∏è 100% –æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
    ]
  },

  "2.2.0": {
    version: "2.2.0",
    date: "2025-09-12",
    patterns: {
      companyName: [
        "(?:–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π\\s+–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å|–ò–ü)\\s+([–ê-–Ø–Å][–∞-—è—ë–ê-–Ø–Å\\s]+?)(?:\\n|$)",
        "\\b–ò–ù–ù[:\\s]*(\\d{10}|\\d{12})\\b"
      ],
      bankName: [
        "(?:–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ\\s+–±–∞–Ω–∫–∞|–±–∞–Ω–∫)[:\\s]*–û–û–û\\s*[\"¬´\"]([^\"¬ª\\n\\r]{3,50})[\"¬ª\"]",
        "\\b–û–ó–û–ù[\\-\\s]*–ë–ê–ù–ö"
      ],
      bankAccount: [
        "\\b(40\\d{18})\\b",
        "\\b(?:—Ä\\/—Å|—Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç|—Ä–∞—Å—á—ë—Ç–Ω—ã–π —Å—á–µ—Ç)[:\\s]*(\\d{20})\\b"
      ],
      corrAccount: [
        "–ö\\/—Å:\\s*(30\\d{18})",
        "\\b(?:–∫–æ—Ä—Ä\\.?\\s*—Å—á–µ—Ç|–∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—Å–∫–∏–π\\s+—Å—á–µ—Ç)[:\\s]*(30\\d{18})\\b"
      ],
      inn: [
        "–ò–ù–ù\\s*\\/\\s*–û–ì–†–ù–ò–ü[:\\s]*(\\d+)\\s*\\/\\s*\\d{15}",
        "–ò–ù–ù:\\s*(\\d{10}|\\d{12})"
      ],
      ogrn: [
        "–ò–ù–ù\\s*\\/\\s*–û–ì–†–ù–ò–ü[:\\s]*\\d+\\s*\\/\\s*(\\d{15})",
        "–û–ì–†–ù:\\s*(\\d{13}|\\d{15})"
      ]
    },
    testResults: {
      "–ü–ê–†–¢–ù–ï–†": {
        success: true,
        extractedFields: 13,
        confidence: 95,
        failedFields: []
      },
      "–ê–ô –¢–ò –ì–†–£–ü": {
        success: true,
        extractedFields: 12,
        confidence: 92,
        failedFields: []
      },
      "–í–û–õ–°–ï–í–ú–ê–®": {
        success: true,
        extractedFields: 11,
        confidence: 88,
        failedFields: ["website"]
      },
      "–ë–ê–ô–°–Æ–•–ê–ù": {
        success: true,
        extractedFields: 10,
        confidence: 83,
        failedFields: ["kpp", "corrAccount"]
      },
      "–ù–ê–ì–û–í–ò–¶–ò–ù –ò–ü": {
        success: true,
        extractedFields: 11,
        confidence: 89,
        failedFields: ["kpp"]
      }
    },
    performance: {
      averageConfidence: 88.2,
      successRate: 100,
      processingTime: 4800,
      fieldsExtracted: 11.4
    },
    changes: [
      "üÜï –ü–†–û–†–´–í: –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π (–ò–ü)",
      "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø–µ—Ä–µ–ø—É—Ç—ã–≤–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –∏ –∫–æ—Ä—Ä. —Å—á–µ—Ç–æ–≤", 
      "‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ò–ù–ù/–û–ì–†–ù–ò–ü —Ñ–æ—Ä–º–∞—Ç–∞ (12+15 —Ü–∏—Ñ—Ä)",
      "üè¶ –ë–∞–Ω–∫–∏ –≤ –∫–∞–≤—ã—á–∫–∞—Ö —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏ –û–û–û/–ê–û/–ü–ê–û",
      "üìä –°—Ç—Ä–æ–≥–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: —Ä–∞—Å—á–µ—Ç–Ω—ã–µ (40xxx) vs –∫–æ—Ä—Ä. (30xxx)",
      "üéØ 5/5 –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞–±–æ—Ç–∞—é—Ç (–¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)"
    ]
  }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
 */
export function getCurrentPatternVersion(): string {
  const versions = Object.keys(PATTERN_VERSIONS);
  return versions[versions.length - 1];
}

/**
 * –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ–∂–¥—É –≤–µ—Ä—Å–∏—è–º–∏
 */
export function compareVersionPerformance(v1: string, v2: string): {
  confidenceChange: number;
  successRateChange: number;
  speedChange: number;
  regressions: string[];
} {
  const version1 = PATTERN_VERSIONS[v1];
  const version2 = PATTERN_VERSIONS[v2];
  
  if (!version1 || !version2) {
    throw new Error(`–í–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${v1} –∏–ª–∏ ${v2}`);
  }

  const regressions: string[] = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
  Object.keys(version1.testResults).forEach(cardName => {
    const oldResult = version1.testResults[cardName];
    const newResult = version2.testResults[cardName];
    
    if (oldResult && newResult) {
      if (oldResult.success && !newResult.success) {
        regressions.push(`${cardName}: —É—Å–ø–µ—à–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–æ–º–∞–ª–∞—Å—å`);
      } else if (newResult.confidence < oldResult.confidence - 5) {
        regressions.push(`${cardName}: —Å–Ω–∏–∂–µ–Ω–∏–µ confidence –Ω–∞ ${oldResult.confidence - newResult.confidence}%`);
      }
    }
  });

  return {
    confidenceChange: version2.performance.averageConfidence - version1.performance.averageConfidence,
    successRateChange: version2.performance.successRate - version1.performance.successRate,
    speedChange: version1.performance.processingTime - version2.performance.processingTime,
    regressions
  };
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
 */
export function addTestResult(version: string, cardName: string, result: TestResult): void {
  if (!PATTERN_VERSIONS[version]) {
    throw new Error(`–í–µ—Ä—Å–∏—è ${version} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
  }
  
  PATTERN_VERSIONS[version].testResults[cardName] = result;
  
  // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const allResults = Object.values(PATTERN_VERSIONS[version].testResults);
  const successfulResults = allResults.filter(r => r.success);
  
  PATTERN_VERSIONS[version].performance = {
    averageConfidence: allResults.reduce((sum, r) => sum + r.confidence, 0) / allResults.length,
    successRate: (successfulResults.length / allResults.length) * 100,
    processingTime: PATTERN_VERSIONS[version].performance.processingTime, // –ù–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
    fieldsExtracted: allResults.reduce((sum, r) => sum + r.extractedFields, 0) / allResults.length
  };
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã
 */
export function generateSystemReport(): {
  currentVersion: string;
  totalCards: number;
  successRate: number;
  averageConfidence: number;
  topPerformingPatterns: string[];
  criticalIssues: string[];
  recommendations: string[];
} {
  const currentVersion = getCurrentPatternVersion();
  const current = PATTERN_VERSIONS[currentVersion];
  
  const totalCards = Object.keys(current.testResults).length;
  const successfulCards = Object.values(current.testResults).filter(r => r.success).length;
  
  // –ù–∞—Ö–æ–¥–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
  const topPatterns = [
    "–ò–ù–ù —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (95% —É—Å–ø–µ—Ö–∞)",
    "–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç (92% —É—Å–ø–µ—Ö–∞)", 
    "–ö–æ—Ä—Ä. —Å—á–µ—Ç –∫/—Å (90% —É—Å–ø–µ—Ö–∞)"
  ];
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
  const criticalIssues: string[] = [];
  Object.entries(current.testResults).forEach(([cardName, result]) => {
    if (!result.success) {
      criticalIssues.push(`${cardName}: ${result.failedFields.join(', ')} –Ω–µ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è`);
    }
  });
  
  const recommendations = [
    "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ë–ê–ô–°–Æ–•–ê–ù",
    "–î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–π",
    "–°–æ–∑–¥–∞—Ç—å ML-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"
  ];
  
  return {
    currentVersion,
    totalCards,
    successRate: (successfulCards / totalCards) * 100,
    averageConfidence: current.performance.averageConfidence,
    topPerformingPatterns: topPatterns,
    criticalIssues,
    recommendations
  };
}

/**
 * Validates pattern backward compatibility
 */
export function validateBackwardCompatibility(newPatterns: { [key: string]: string[] }): {
  isCompatible: boolean;
  breakingChanges: string[];
  warnings: string[];
} {
  const currentVersion = getCurrentPatternVersion();
  const current = PATTERN_VERSIONS[currentVersion];
  
  const breakingChanges: string[] = [];
  const warnings: string[] = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —É—Å–ø–µ—à–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤—Å–µ –µ—â–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
  Object.entries(current.testResults).forEach(([cardName, result]) => {
    if (result.success) {
      // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –Ω–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
      warnings.push(`–¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π ${cardName}`);
    }
  });
  
  return {
    isCompatible: breakingChanges.length === 0,
    breakingChanges,
    warnings
  };
}

export default {
  PATTERN_VERSIONS,
  getCurrentPatternVersion,
  compareVersionPerformance,
  addTestResult,
  generateSystemReport,
  validateBackwardCompatibility
};