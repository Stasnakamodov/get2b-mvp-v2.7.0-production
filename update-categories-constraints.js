const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://ejkhdhexkadecpbjjmsz.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVqa2hkaGV4a2FkZWNwYmpqbXN6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NzAzNzE0MiwiZXhwIjoyMDYyNjEzMTQyfQ.P-Vxbk4VWq4LdpIqOTnSMxq7QNJfqGiZXpxLF8VRxjw';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function updateCategoriesConstraints() {
  console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –ë–î...');
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ catalog_categories –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    
    const categories = [
      {
        key: 'stroitelstvo',
        name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', 
        description: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
        icon: 'üèóÔ∏è',
        is_active: true
      },
      {
        key: 'tekstil_i_odezhda',
        name: '–¢–µ–∫—Å—Ç–∏–ª—å –∏ –æ–¥–µ–∂–¥–∞',
        description: '–¢–µ–∫—Å—Ç–∏–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –∏ –æ–¥–µ–∂–¥–∞', 
        icon: 'üëï',
        is_active: true
      },
      {
        key: 'promyshlennost',
        name: '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å',
        description: '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
        icon: 'üè≠', 
        is_active: true
      },
      {
        key: 'produkty_pitaniya',
        name: '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è',
        description: '–ü–∏—â–µ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã',
        icon: 'üçé',
        is_active: true
      },
      {
        key: 'dom_i_byt', 
        name: '–î–æ–º –∏ –±—ã—Ç',
        description: '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞ –∏ –±—ã—Ç–∞',
        icon: 'üè†',
        is_active: true
      },
      {
        key: 'zdorove_i_meditsina',
        name: '–ó–¥–æ—Ä–æ–≤—å–µ –∏ –º–µ–¥–∏—Ü–∏–Ω–∞',
        description: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è',
        icon: '‚öïÔ∏è',
        is_active: true
      }
    ];

    for (const category of categories) {
      const { error } = await supabase
        .from('catalog_categories')
        .upsert(category, { onConflict: 'key' });
      
      if (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.name}:`, error);
      } else {
        console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category.name}" –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
      }
    }

    console.log('\nüîß –û–±–Ω–æ–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö...');
    
    // –û–±–Ω–æ–≤–∏–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQL –∫–æ–º–∞–Ω–¥—ã
    const allowedCategories = [
      '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
      '–ê–≤—Ç–æ—Ç–æ–≤–∞—Ä—ã', 
      '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ',
      '–¢–µ–∫—Å—Ç–∏–ª—å –∏ –æ–¥–µ–∂–¥–∞',
      '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å',
      '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è',
      '–î–æ–º –∏ –±—ã—Ç',
      '–ó–¥–æ—Ä–æ–≤—å–µ –∏ –º–µ–¥–∏—Ü–∏–Ω–∞'
    ];
    
    const categoryList = allowedCategories.map(cat => `'${cat}'`).join(', ');
    
    // SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è constraints
    const sqlCommands = [
      `ALTER TABLE catalog_verified_suppliers DROP CONSTRAINT IF EXISTS valid_category_verified;`,
      `ALTER TABLE catalog_verified_suppliers ADD CONSTRAINT valid_category_verified CHECK (category IN (${categoryList}));`,
      
      `ALTER TABLE catalog_verified_products DROP CONSTRAINT IF EXISTS valid_category_products;`,
      `ALTER TABLE catalog_verified_products ADD CONSTRAINT valid_category_products CHECK (category IN (${categoryList}));`,
      
      `ALTER TABLE catalog_user_suppliers DROP CONSTRAINT IF EXISTS valid_category_user;`,
      `ALTER TABLE catalog_user_suppliers ADD CONSTRAINT valid_category_user CHECK (category IN (${categoryList}));`,
      
      `ALTER TABLE catalog_user_products DROP CONSTRAINT IF EXISTS valid_category_user_products;`,
      `ALTER TABLE catalog_user_products ADD CONSTRAINT valid_category_user_products CHECK (category IN (${categoryList}));`
    ];

    for (const sql of sqlCommands) {
      try {
        const { error } = await supabase.rpc('execute_sql', { sql_query: sql });
        if (error) {
          console.log(`‚ö†Ô∏è SQL –∫–æ–º–∞–Ω–¥–∞ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ): ${sql.substring(0, 50)}...`);
        } else {
          console.log(`‚úÖ SQL –≤—ã–ø–æ–ª–Ω–µ–Ω: ${sql.substring(0, 50)}...`);
        }
      } catch (err) {
        console.log(`‚ö†Ô∏è SQL –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞: ${sql.substring(0, 50)}...`);
      }
    }

    console.log('\n‚úÖ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ–ø—É—Å—Ç–∏–º—ã–º–∏ –≤ –ë–î!');
    console.log('üìã –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    allowedCategories.forEach(cat => console.log(`  - ${cat}`));
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

updateCategoriesConstraints().catch(console.error);