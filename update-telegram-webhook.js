// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Telegram webhook —Å –Ω–æ–≤—ã–º ngrok URL

const updateWebhook = async () => {
  try {
    console.log('üîß –û–±–Ω–æ–≤–ª—è–µ–º Telegram webhook...');
    
    // –ù–æ–≤—ã–π ngrok URL
    const newWebhookUrl = 'https://c9fbbebb430c.ngrok-free.app/api/telegram-chat-webhook';
    
    console.log('üì° –ù–æ–≤—ã–π URL:', newWebhookUrl);
    
    const response = await fetch('http://localhost:3000/api/telegram/set-chat-webhook', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        webhookUrl: newWebhookUrl
      })
    });

    const result = await response.json();
    
    console.log('üìä –°—Ç–∞—Ç—É—Å:', response.status);
    console.log('üì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç:', JSON.stringify(result, null, 2));
    
    if (result.success) {
      console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      console.log('üéØ URL:', result.result?.result?.url);
      console.log('üìä –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω–æ');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è webhook:', result);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error);
  }
};

updateWebhook(); 