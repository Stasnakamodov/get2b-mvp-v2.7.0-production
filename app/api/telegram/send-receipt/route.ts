import { NextRequest, NextResponse } from 'next/server'
import { ManagerBotService } from '@/lib/telegram/ManagerBotService'

export async function POST(request: NextRequest) {
  try {
    const { projectRequestId, receiptUrl, fileName } = await request.json()

    console.log('üì§ [Send Receipt] –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ–∫–∞ –≤ Telegram:', {
      projectRequestId,
      receiptUrl,
      fileName
    })

    if (!projectRequestId || !receiptUrl) {
      return NextResponse.json(
        { error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã' },
        { status: 400 }
      )
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è
    const managerBot = new ManagerBotService()
    await managerBot.sendReceiptApprovalRequest({
      projectRequestId,
      receiptUrl,
      fileName
    })

    return NextResponse.json({ 
      success: true, 
      message: '–ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É'
    })

  } catch (error) {
    console.error('‚ùå [Send Receipt] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞' },
      { status: 500 }
    )
  }
} 