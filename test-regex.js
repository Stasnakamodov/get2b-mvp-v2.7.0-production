// –¢–µ—Å—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ project ID

const testText = "üí¨ –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –í –ß–ê–¢–ï\n\nüÜî –ü—Ä–æ–µ–∫—Ç: b7f63bf3-3cfa-4b2c-8a42-ee7b19c53c2d\nüìã –ù–∞–∑–≤–∞–Ω–∏–µ: –ª–æ–≤—ã–¥—Ä–∞–¥–ª–≥—Ñ—Ç—ã—É–æ–ª–∞—Ç—Ñ–≥—ã—è\nüè¢ –ö–æ–º–ø–∞–Ω–∏—è: –ò–≥—Ä–∏–∫ –ò–≤–∞–Ω–æ–≤\nüë§ –û—Ç –∫–æ–≥–æ: –í—ã\n\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n\"xt nfv\"\n\n‚ùó –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É –≤ —á–∞—Ç.";

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ project ID...');
console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:');
console.log(testText);
console.log('\n');

// –¢–µ–∫—É—â–∏–π —Ä–µ–≥–µ–∫—Å –∏–∑ –∫–æ–¥–∞
const projectMatch = testText.match(/üÜî –ü—Ä–æ–µ–∫—Ç: ([a-f0-9-]+)/);

console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:');
console.log('Match:', projectMatch);
console.log('Project ID:', projectMatch ? projectMatch[1] : '–ù–ï –ù–ê–ô–î–ï–ù');

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
const altRegex1 = testText.match(/–ü—Ä–æ–µ–∫—Ç: ([a-f0-9\-]{36})/);
const altRegex2 = testText.match(/–ü—Ä–æ–µ–∫—Ç: ([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})/);

console.log('\nüîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ–≥–µ–∫—Å—ã:');
console.log('Alt 1:', altRegex1 ? altRegex1[1] : '–ù–ï –ù–ê–ô–î–ï–ù');
console.log('Alt 2:', altRegex2 ? altRegex2[1] : '–ù–ï –ù–ê–ô–î–ï–ù'); 