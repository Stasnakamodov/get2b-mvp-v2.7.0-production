import { TelegramService } from './TelegramService';

/**
 * üë®‚Äçüíº –ú–ï–ù–ï–î–ñ–ï–†–°–ö–ò–ô –ë–û–¢ SERVICE
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞ (@Get2b_bot)
 * –§—É–Ω–∫—Ü–∏–∏: –æ–¥–æ–±—Ä–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤, –∑–∞–≥—Ä—É–∑–∫–∞ —á–µ–∫–æ–≤, –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏
 */

export class ManagerBotService {
  private telegramService: TelegramService;
  private chatId: string;

  constructor() {
    console.log("üîß [ManagerBotService] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...");
    console.log("üîß [ManagerBotService] –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è...");
    
    const botToken = process.env.TELEGRAM_BOT_TOKEN;
    const chatId = process.env.TELEGRAM_CHAT_ID;

    console.log("üîß [ManagerBotService] TELEGRAM_BOT_TOKEN:", botToken ? "‚úÖ –Ω–∞–π–¥–µ–Ω" : "‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω");
    console.log("üîß [ManagerBotService] TELEGRAM_CHAT_ID:", chatId ? "‚úÖ –Ω–∞–π–¥–µ–Ω" : "‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω");

    if (!botToken) {
      throw new Error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞");
    }
    if (!chatId) {
      throw new Error("‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞");
    }

    console.log("üîß [ManagerBotService] –°–æ–∑–¥–∞–µ–º TelegramService...");
    this.telegramService = new TelegramService(botToken);
    this.chatId = chatId;
    console.log("‚úÖ [ManagerBotService] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   */
  async sendMessage(text: string) {
    console.log("üë®‚Äçüíº ManagerBotService: –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è");
    
    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç
   */
  async sendDocument(documentUrl: string, caption?: string) {
    console.log("üë®‚Äçüíº ManagerBotService: –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞");
    
    return await this.telegramService.sendDocument({
      chat_id: this.chatId,
      document: documentUrl,
      caption: caption || ""
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–µ–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
   */
  async sendClientReceiptApprovalRequest(documentUrl: string, caption: string, projectRequestId: string) {
    console.log("üë®‚Äçüíº [ManagerBotService] sendClientReceiptApprovalRequest –≤—ã–∑–≤–∞–Ω");
    console.log("üë®‚Äçüíº [ManagerBotService] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:", { 
      documentUrl: documentUrl?.substring(0, 100) + "...",
      captionLength: caption?.length,
      projectRequestId
    });
    
    const replyMarkup = {
      inline_keyboard: [
        [
          { text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å —á–µ–∫ –∫–ª–∏–µ–Ω—Ç–∞", callback_data: `approve_client_receipt_${projectRequestId}` },
          { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å —á–µ–∫ –∫–ª–∏–µ–Ω—Ç–∞", callback_data: `reject_client_receipt_${projectRequestId}` },
        ],
      ],
    };

    console.log("üë®‚Äçüíº [ManagerBotService] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ Telegram...");
    const result = await this.telegramService.sendDocument({
      chat_id: this.chatId,
      document: documentUrl,
      caption: caption,
      reply_markup: replyMarkup
    });
    console.log("‚úÖ [ManagerBotService] –î–æ–∫—É–º–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", result);
    return result;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
   */
  async sendProjectApprovalRequest(text: string, projectId: string, type: "spec" | "receipt" | "invoice" = "spec") {
    console.log("üë®‚Äçüíº [ManagerBotService] sendProjectApprovalRequest –≤—ã–∑–≤–∞–Ω");
    console.log("üë®‚Äçüíº [ManagerBotService] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:", { 
      textLength: text.length, 
      projectId, 
      type,
      chatId: this.chatId 
    });
    
    let replyMarkup;
    if (type === "receipt") {
      replyMarkup = {
        inline_keyboard: [
          [
            { text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å —á–µ–∫", callback_data: `approve_receipt_${projectId}` },
            { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å —á–µ–∫", callback_data: `reject_receipt_${projectId}` },
          ],
        ],
      };
    } else if (type === "invoice") {
      replyMarkup = {
        inline_keyboard: [
          [
            { text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –∏–Ω–≤–æ–π—Å", callback_data: `approve_invoice_${projectId}` },
            { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∏–Ω–≤–æ–π—Å", callback_data: `reject_invoice_${projectId}` },
          ],
        ],
      };
    } else {
      replyMarkup = {
        inline_keyboard: [
          [
            { text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data: `approve_project_${projectId}` },
            { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data: `reject_project_${projectId}` },
          ],
        ],
      };
    }

    console.log("üë®‚Äçüíº [ManagerBotService] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram...");
    const result = await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: replyMarkup
    });
    console.log("‚úÖ [ManagerBotService] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", result);
    return result;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —á–µ–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
   */
  async sendSupplierReceiptRequest({
    projectId,
    email,
    companyName,
    amount,
    currency,
    paymentMethod,
    requisites,
  }: {
    projectId: string;
    email: string;
    companyName: string;
    amount: number;
    currency: string;
    paymentMethod: string;
    requisites?: string;
  }) {
    console.log("üë®‚Äçüíº ManagerBotService: –∑–∞–ø—Ä–æ—Å –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞");
    
    const text = `–ö–ª–∏–µ–Ω—Ç –¥–æ—à—ë–ª –¥–æ —ç—Ç–∞–ø–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫–∞.

–ü—Ä–æ–µ–∫—Ç: ${projectId}
–ö–æ–º–ø–∞–Ω–∏—è: ${companyName}
Email –∫–ª–∏–µ–Ω—Ç–∞: ${email}
–°—É–º–º–∞: ${amount} ${currency}
–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${paymentMethod}${requisites || ''}

‚ùóÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ (—Ñ–æ—Ç–æ/—Ñ–∞–π–ª) –≤ reply –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º—É. –ß–µ–∫ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω –∫ –ø—Ä–æ–µ–∫—Ç—É –∏ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ —Å–∞–π—Ç–µ.`;

    const replyMarkup = {
      inline_keyboard: [
        [{ text: "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞", callback_data: `upload_supplier_receipt_${projectId}` }],
      ],
    };

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: replyMarkup
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
   */
  async sendClientConfirmationRequest({
    projectId,
    email,
    companyName,
  }: {
    projectId: string;
    email: string;
    companyName: string;
  }) {
    console.log("üë®‚Äçüíº ManagerBotService: –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞");
    
    const text = `–ü–æ—Å—Ç–∞–≤—â–∏–∫ –∑–∞–≥—Ä—É–∑–∏–ª —Å—á–µ—Ç-—Ñ–∞–∫—Ç—É—Ä—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É: ${projectId}
–ö–æ–º–ø–∞–Ω–∏—è: ${companyName}
Email: ${email}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–∫–æ–º, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ä–µ–¥—Å—Ç–≤.`;

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: {
        force_reply: true,
        selective: true
      }
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –Ω–∞ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
   */
  async sendAccreditationRequest({
    supplierId,
    supplierName,
    companyName,    country,
    category,
    userEmail,
    notes,
    productsCount
  }: {
    supplierId: string;
    supplierName: string;
    companyName: string;
    country: string;
    category: string;
    userEmail: string;
    notes?: string;
    productsCount: number;
  }) {
    console.log("üë®‚Äçüíº ManagerBotService: –∑–∞—è–≤–∫–∞ –Ω–∞ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é");
    
    const text = `üè™ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ê–ö–ö–†–ï–î–ò–¢–ê–¶–ò–Æ

üìã –ü–æ—Å—Ç–∞–≤—â–∏–∫: ${supplierName}
üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${companyName}
üåç –°—Ç—Ä–∞–Ω–∞: ${country}
üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}
üë§ –ó–∞—è–≤–∏—Ç–µ–ª—å: ${userEmail}
üõçÔ∏è –¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞—è–≤–∫–µ: ${productsCount}

${notes ? `üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: ${notes}` : ''}

‚ùóÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ Get2B.`;

    const replyMarkup = {
      inline_keyboard: [
        [
          { text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é", callback_data: `accredit_approve_${supplierId}` },
          { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data: `accredit_reject_${supplierId}` },
        ],
        [
          { text: "üìã –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫—É", callback_data: `accredit_revision_${supplierId}` }
        ]
      ],
    };

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: replyMarkup
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞
   */
  async sendClientProfileNotification({
    userId,
    userName,
    userEmail,
    profileId,
    companyName,
    legalName,
    inn,
    kpp,
    ogrn,
    address,
    email,
    phone,
    bankName,
    bankAccount,
    corrAccount,
    bik
  }: {
    userId: string;
    userName?: string;
    userEmail?: string;
    profileId: string;
    companyName: string;
    legalName: string;
    inn: string;
    kpp: string;
    ogrn: string;
    address: string;
    email: string;
    phone: string;
    bankName: string;
    bankAccount: string;
    corrAccount: string;
    bik: string;
  }) {
    console.log("üë®‚Äçüíº ManagerBotService: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞");
    
    const text = `üë§ –ù–û–í–´–ô –ü–†–û–§–ò–õ–¨ –ö–õ–ò–ï–ù–¢–ê

üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \`${userId}\`
üë§ –ò–º—è: ${userName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìß Email: ${userEmail || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üè¢ –î–ê–ù–ù–´–ï –ö–û–ú–ü–ê–ù–ò–ò:
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ${companyName}
‚Ä¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${legalName}
‚Ä¢ –ò–ù–ù: ${inn}
‚Ä¢ –ö–ü–ü: ${kpp}
‚Ä¢ –û–ì–†–ù: ${ogrn}
‚Ä¢ –ê–¥—Ä–µ—Å: ${address}

üìû –ö–û–ù–¢–ê–ö–¢–´:
‚Ä¢ Email: ${email}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}

üè¶ –ë–ê–ù–ö–û–í–°–ö–ò–ï –†–ï–ö–í–ò–ó–ò–¢–´:
‚Ä¢ –ë–∞–Ω–∫: ${bankName}
‚Ä¢ –†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç: ${bankAccount}
‚Ä¢ –ö–æ—Ä—Ä. —Å—á–µ—Ç: ${corrAccount}
‚Ä¢ –ë–ò–ö: ${bik}

üÜî ID –ø—Ä–æ—Ñ–∏–ª—è: \`${profileId}\`

‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö`;

    const replyMarkup = {
      inline_keyboard: [
        [
          { text: "üë§ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data: `view_client_profile_${profileId}` },
          { text: "üìã –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", url: `${process.env.NEXT_PUBLIC_BASE_URL || 'https://140545935474.ngrok-free.app'}/dashboard/profile` }
        ],
        [
          { text: "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π", callback_data: `approve_client_profile_${profileId}` },
          { text: "‚ùå –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", callback_data: `review_client_profile_${profileId}` }
        ]
      ]
    };

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: replyMarkup,
      parse_mode: 'Markdown'
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
   */
  async sendSupplierProfileNotification({
    userId,
    userName,
    userEmail,
    profileId,
    companyName,
    category,
    country,
    city,
    description,
    contactEmail,
    contactPhone,
    website
  }: {
    userId: string;
    userName?: string;
    userEmail?: string;
    profileId: string;
    companyName: string;
    category: string;
    country: string;
    city?: string;
    description?: string;
    contactEmail?: string;
    contactPhone?: string;
    website?: string;
  }) {
    console.log("üë®‚Äçüíº ManagerBotService: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞");
    
    const text = `üè≠ –ù–û–í–´–ô –ü–†–û–§–ò–õ–¨ –ü–û–°–¢–ê–í–©–ò–ö–ê

üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \`${userId}\`
üë§ –ò–º—è: ${userName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìß Email: ${userEmail || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üè¢ –î–ê–ù–ù–´–ï –ö–û–ú–ü–ê–ù–ò–ò:
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: ${companyName}
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}
‚Ä¢ –°—Ç—Ä–∞–Ω–∞: ${country}
‚Ä¢ –ì–æ—Ä–æ–¥: ${city || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üìù –û–ü–ò–°–ê–ù–ò–ï:
${description || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üìû –ö–û–ù–¢–ê–ö–¢–´:
‚Ä¢ Email: ${contactEmail || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${contactPhone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –°–∞–π—Ç: ${website || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üÜî ID –ø—Ä–æ—Ñ–∏–ª—è: \`${profileId}\`

‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é`;

    const replyMarkup = {
      inline_keyboard: [
        [
          { text: "üè≠ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data: `view_supplier_profile_${profileId}` },
          { text: "üìã –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", url: `${process.env.NEXT_PUBLIC_BASE_URL || 'https://140545935474.ngrok-free.app'}/dashboard/profile` }
        ],
        [
          { text: "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π", callback_data: `approve_supplier_profile_${profileId}` },
          { text: "‚ùå –¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", callback_data: `review_supplier_profile_${profileId}` }
        ]
      ]
    };

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: replyMarkup,
      parse_mode: 'Markdown'
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ callback query
   */
  async answerCallbackQuery(callbackQueryId: string, text: string, showAlert = false) {
    console.log("üë®‚Äçüíº ManagerBotService: –æ—Ç–≤–µ—Ç –Ω–∞ callback query");
    
    return await this.telegramService.answerCallbackQuery({
      callback_query_id: callbackQueryId,
      text,
      show_alert: showAlert
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
   */
  async sendAtomicConstructorApprovalRequest({
    text,
    requestId,
    userEmail,
    userName,
    currentStage,
    activeScenario
  }: {
    text: string;
    requestId: string;
    userEmail: string;
    userName: string;
    currentStage: number;
    activeScenario: string;
  }) {
    console.log("üë®‚Äçüíº [ManagerBotService] sendAtomicConstructorApprovalRequest –≤—ã–∑–≤–∞–Ω");
    console.log("üë®‚Äçüíº [ManagerBotService] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:", { 
      requestId, 
      userEmail, 
      currentStage, 
      activeScenario,
      chatId: this.chatId 
    });
    
    // –î–ª—è UUID –Ω–µ –æ—á–∏—â–∞–µ–º –∏ –Ω–µ –æ–±—Ä–µ–∑–∞–µ–º - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    // UUID —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è callback_data
    let cleanRequestId = requestId;
    
    console.log("üîß [ManagerBotService] –û—á–∏—â–µ–Ω–Ω—ã–π requestId:", cleanRequestId);
    console.log("üîß [ManagerBotService] callback_data –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è:", `approve_atomic_${cleanRequestId}`);
    console.log("üîß [ManagerBotService] callback_data –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:", `reject_atomic_${cleanRequestId}`);
    
    const replyMarkup = {
      inline_keyboard: [
        [
          { text: "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data: `approve_atomic_${cleanRequestId}` },
          { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data: `reject_atomic_${cleanRequestId}` },
        ],
        [
          { text: "üìã –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", callback_data: `request_changes_atomic_${cleanRequestId}` },
          { text: "üîó –û—Ç–∫—Ä—ã—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ", url: `${process.env.NEXT_PUBLIC_BASE_URL || 'https://140545935474.ngrok-free.app'}/dashboard/project-constructor` }
        ]
      ]
    };

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text,
      reply_markup: replyMarkup,
      parse_mode: 'Markdown'
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ —á–µ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è
   */
  async sendReceiptApprovalRequest({
    projectRequestId,
    receiptUrl,
    fileName
  }: {
    projectRequestId: string;
    receiptUrl: string;
    fileName: string;
  }) {
    console.log("üë®‚Äçüíº [ManagerBotService] sendReceiptApprovalRequest –≤—ã–∑–≤–∞–Ω");
    console.log("üë®‚Äçüíº [ManagerBotService] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:", { 
      projectRequestId, 
      receiptUrl,
      fileName,
      chatId: this.chatId 
    });
    
    // –î–ª—è UUID –Ω–µ –æ—á–∏—â–∞–µ–º —Å–∏–º–≤–æ–ª—ã, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è callback_data
    // UUID —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (—Ü–∏—Ñ—Ä—ã, –±—É–∫–≤—ã, –¥–µ—Ñ–∏—Å—ã)
    let cleanRequestId = projectRequestId;
    
    console.log("üîß [ManagerBotService] –û—á–∏—â–µ–Ω–Ω—ã–π requestId –¥–ª—è —á–µ–∫–∞:", cleanRequestId);
    console.log("üîß [ManagerBotService] callback_data –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è —á–µ–∫–∞:", `approve_receipt_${cleanRequestId}`);
    console.log("üîß [ManagerBotService] callback_data –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —á–µ–∫–∞:", `reject_receipt_${cleanRequestId}`);
    
    const message = `üìÑ –ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –∑–∞–≥—Ä—É–∂–µ–Ω

üîó ID –∑–∞–ø—Ä–æ—Å–∞: ${projectRequestId}
üìÅ –§–∞–π–ª: ${fileName || 'receipt'}
üîó –°—Å—ã–ª–∫–∞: ${receiptUrl}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ–∫ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É.`;

    const replyMarkup = {
      inline_keyboard: [
        [
          { text: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data: `approve_receipt_${cleanRequestId}` },
          { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å —á–µ–∫", callback_data: `reject_receipt_${cleanRequestId}` },
        ],
        [
          { text: "üìã –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–π —á–µ–∫", callback_data: `request_new_receipt_${cleanRequestId}` },
          { text: "üîó –û—Ç–∫—Ä—ã—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ", url: `${process.env.NEXT_PUBLIC_BASE_URL || 'https://140545935474.ngrok-free.app'}/dashboard/project-constructor` }
        ]
      ]
    };

    return await this.telegramService.sendMessage({
      chat_id: this.chatId,
      text: message,
      reply_markup: replyMarkup
    });
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  async handleFileUpload(fileId: string, fileName: string) {
    console.log("üë®‚Äçüíº ManagerBotService: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞");
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    const fileData = await this.telegramService.getFile(fileId);
    
    if (fileData.ok) {
      const fileUrl = this.telegramService.getFileDownloadUrl(fileData.result.file_path);
      return { fileUrl, fileName };
    } else {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –æ—Ç Telegram");
    }
  }
} 