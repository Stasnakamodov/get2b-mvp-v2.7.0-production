const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
  'https://ejkhdhexkadecpbjjmsz.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVqa2hkaGV4a2FkZWNwYmpqbXN6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwMzcxNDIsImV4cCI6MjA2MjYxMzE0Mn0.DHcfdHrQmPiG4AkwDaCa9AXYB7zQPJlK7VuXt-g1uUU'
);

async function checkProductsSchema() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã catalog_verified_products...');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–∏–Ω –ø—Ä–æ—Å—Ç–æ–π —Ç–æ–≤–∞—Ä —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫—É
    const testProduct = {
      supplier_id: 'test',
      product_name: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä',
      description: '–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
      price: '‚ÇΩ1000',
      currency: 'RUB'
    };
    
    const { data, error } = await supabase
      .from('catalog_verified_products')
      .insert([testProduct])
      .select();
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:', error);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ª—é–±—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã...');
      const { data: existing, error: selectError } = await supabase
        .from('catalog_verified_products')
        .select('*')
        .limit(1);
      
      if (selectError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', selectError);
      } else {
        if (existing && existing.length > 0) {
          console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞:');
          console.log(JSON.stringify(existing[0], null, 2));
        } else {
          console.log('üìã –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞');
        }
      }
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—Ö–µ–º—É —á–µ—Ä–µ–∑ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π select
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è...');
      try {
        const { data: schemaTest, error: schemaError } = await supabase
          .from('catalog_verified_products')
          .select('id, supplier_id, product_name, description, price, currency')
          .limit(0);
          
        if (schemaError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å—Ö–µ–º—ã:', schemaError);
        } else {
          console.log('‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã');
        }
      } catch (e) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ö–µ–º—ã:', e.message);
      }
      
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω:', data[0]);
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

checkProductsSchema();