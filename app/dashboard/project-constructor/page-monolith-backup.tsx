"use client"

import * as React from "react"

// CSS —Å—Ç–∏–ª–∏ –¥–ª—è —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const phantomDataStyles = `
  .phantom-data-step {
    border-style: solid !important;
    border-width: 2px !important;
  }
`
import { useState, useEffect, useRef } from "react"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Card, CardContent } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog"
import {
  Blocks,
  Building,
  FileText,
  Store,
  Users,
  Plus,
  CheckCircle,
  ArrowRight,
  ArrowLeft,
  X,
  ChevronRight,
  ChevronLeft,
  CreditCard,
  Banknote,
  Download,
  CheckCircle2,
  Clock,
  DollarSign,
  Send,
  MousePointerClick,
  Download as DownloadIcon,
  CheckCircle2 as CheckCircle2Icon,
  Upload,
  Save,
  Package,
  Mail,
  Edit,
  Lock,
  ChevronDown,
  Check,
  Loader,
  BarChart3,
  Eye,
  User,
} from "lucide-react"
import { motion, AnimatePresence } from "framer-motion"
import { useProjectTemplates } from "../create-project/hooks/useSaveTemplate"
import { useClientProfiles } from "@/hooks/useClientProfiles"
import { useSupplierProfiles } from "@/hooks/useSupplierProfiles"
import { supabase } from "@/lib/supabaseClient"
import { useToast } from "@/components/ui/use-toast"
import CatalogModal from "../create-project/components/CatalogModal"
import { ManagerBotService } from "@/lib/telegram/ManagerBotService"
import { sendTelegramDocumentClient } from "@/lib/telegram-client"
import { sendClientReceiptApprovalRequest } from "@/lib/telegram"

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —à–∞–≥–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
const constructorSteps = [
  { id: 1, name: "–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞", description: "–î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏", sources: ["profile", "template", "manual", "upload"] },
  { id: 2, name: "–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è", description: "–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤", sources: ["profile", "template", "catalog", "manual", "upload"] },
  { id: 3, name: "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞", description: "–ó–∞–≥—Ä—É–∑–∫–∞ —á–µ–∫–∞", sources: ["manual"] },
  { id: 4, name: "–ú–µ—Ç–æ–¥", description: "–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", sources: ["profile", "template", "catalog", "manual"] },
  { id: 5, name: "–†–µ–∫–≤–∏–∑–∏—Ç—ã", description: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã", sources: ["profile", "template", "catalog", "manual"] },
  { id: 6, name: "–ü–æ–ª—É—á–µ–Ω–∏–µ", description: "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤", sources: ["automatic"] },
  { id: 7, name: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", description: "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ", sources: ["automatic"] }
]

// –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
const dataSources = {
  profile: { name: "–ü—Ä–æ—Ñ–∏–ª—å", icon: Users, color: "bg-blue-500" },
  template: { name: "–®–∞–±–ª–æ–Ω", icon: FileText, color: "bg-green-500" },
  catalog: { name: "–ö–∞—Ç–∞–ª–æ–≥", icon: Store, color: "bg-purple-500" },
  manual: { name: "–í—Ä—É—á–Ω—É—é", icon: Plus, color: "bg-gray-500" },
  upload: { name: "–ó–∞–≥—Ä—É–∑–∏—Ç—å (Yandex Vision OCR)", icon: Eye, color: "bg-orange-500" },
  automatic: { name: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", icon: CheckCircle, color: "bg-emerald-500" }
}

// –ò–∫–æ–Ω–∫–∏ –¥–ª—è —à–∞–≥–æ–≤
const stepIcons = [
  null,
  Building,
  FileText,
  Clock,
  CreditCard,
  Banknote,
  DownloadIcon,
  CheckCircle2Icon,
]

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏ (–®–∞–≥ I)
const CompanyForm = ({ onSave, onCancel, initialData }: { onSave: (data: any) => void, onCancel: () => void, initialData?: any }) => {
  console.log("üîç CompanyForm –ø–æ–ª—É—á–∏–ª initialData:", initialData);
  const [formData, setFormData] = useState({
    name: initialData?.name || '',
    legalName: initialData?.legalName || '',
    inn: initialData?.inn || '',
    kpp: initialData?.kpp || '',
    ogrn: initialData?.ogrn || '',
    address: initialData?.address || '',
    // –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
    bankName: initialData?.bankName || '',
    bankAccount: initialData?.bankAccount || '',
    bik: initialData?.bik || '',
    correspondentAccount: initialData?.correspondentAccount || '',
    // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    email: initialData?.email || '',
    phone: initialData?.phone || '',
    website: initialData?.website || '',
    director: initialData?.director || ''
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSave(formData)
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ */}
      <div className="space-y-2">
        <Label htmlFor="name" className="text-sm font-semibold text-gray-700">
          –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="name"
          value={formData.name}
          onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
        />
      </div>
      
      <div className="space-y-2">
        <Label htmlFor="legalName" className="text-sm font-semibold text-gray-700">
          –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="legalName"
          value={formData.legalName}
          onChange={(e) => setFormData(prev => ({ ...prev, legalName: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
        />
      </div>
      
      {/* –ò–ù–ù, –ö–ü–ü, –û–ì–†–ù */}
      <div className="grid grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="inn" className="text-sm font-semibold text-gray-700">
            –ò–ù–ù <span className="text-red-500 font-bold">*</span>
          </Label>
          <Input
            id="inn"
            value={formData.inn}
            onChange={(e) => setFormData(prev => ({ ...prev, inn: e.target.value }))}
            required
            className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
            placeholder="1234567890"
          />
        </div>
        <div className="space-y-2">
          <Label htmlFor="kpp" className="text-sm font-semibold text-gray-700">
            –ö–ü–ü <span className="text-red-500 font-bold">*</span>
          </Label>
          <Input
            id="kpp"
            value={formData.kpp}
            onChange={(e) => setFormData(prev => ({ ...prev, kpp: e.target.value }))}
            required
            className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
            placeholder="123456789"
          />
        </div>
      </div>
      
      <div className="space-y-2">
        <Label htmlFor="ogrn" className="text-sm font-semibold text-gray-700">
          –û–ì–†–ù <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="ogrn"
          value={formData.ogrn}
          onChange={(e) => setFormData(prev => ({ ...prev, ogrn: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="1234567890123"
        />
      </div>
      
      {/* –ê–¥—Ä–µ—Å */}
      <div className="space-y-2">
        <Label htmlFor="address" className="text-sm font-semibold text-gray-700">
          –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="address"
          value={formData.address}
          onChange={(e) => setFormData(prev => ({ ...prev, address: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1, –æ—Ñ. 100"
        />
      </div>
      
      {/* –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã */}
      <div className="space-y-4 pt-4 border-t border-gray-300">
        <h3 className="text-lg font-semibold text-gray-800">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</h3>
        
        <div className="space-y-2">
          <Label htmlFor="bankName" className="text-sm font-semibold text-gray-700">
            –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ <span className="text-red-500 font-bold">*</span>
          </Label>
          <Input
            id="bankName"
            value={formData.bankName}
            onChange={(e) => setFormData(prev => ({ ...prev, bankName: e.target.value }))}
            required
            className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
            placeholder="–°–±–µ—Ä–±–∞–Ω–∫ –†–æ—Å—Å–∏–∏"
          />
        </div>
        
        <div className="space-y-2">
          <Label htmlFor="bankAccount" className="text-sm font-semibold text-gray-700">
            –†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç <span className="text-red-500 font-bold">*</span>
          </Label>
          <Input
            id="bankAccount"
            value={formData.bankAccount}
            onChange={(e) => setFormData(prev => ({ ...prev, bankAccount: e.target.value }))}
            required
            className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
            placeholder="40702810123456789012"
          />
        </div>
        
        <div className="grid grid-cols-2 gap-4">
          <div className="space-y-2">
            <Label htmlFor="bik" className="text-sm font-semibold text-gray-700">
              –ë–ò–ö <span className="text-red-500 font-bold">*</span>
            </Label>
            <Input
              id="bik"
              value={formData.bik}
              onChange={(e) => setFormData(prev => ({ ...prev, bik: e.target.value }))}
              required
              className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
              placeholder="044525225"
            />
          </div>
          <div className="space-y-2">
            <Label htmlFor="correspondentAccount" className="text-sm font-semibold text-gray-700">
              –ö–æ—Ä—Ä. —Å—á–µ—Ç <span className="text-red-500 font-bold">*</span>
            </Label>
            <Input
              id="correspondentAccount"
              value={formData.correspondentAccount}
              onChange={(e) => setFormData(prev => ({ ...prev, correspondentAccount: e.target.value }))}
              required
              className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
              placeholder="30101810123456789012"
            />
          </div>
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
      <div className="space-y-4 pt-4 border-t border-gray-300">
        <h3 className="text-lg font-semibold text-gray-800">–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
        
        <div className="grid grid-cols-2 gap-4">
          <div className="space-y-2">
            <Label htmlFor="email" className="text-sm font-semibold text-gray-700">
              Email
            </Label>
            <Input
              id="email"
              type="email"
              value={formData.email}
              onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}
              className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
              placeholder="info@company.ru"
            />
          </div>
          <div className="space-y-2">
            <Label htmlFor="phone" className="text-sm font-semibold text-gray-700">
              –¢–µ–ª–µ—Ñ–æ–Ω <span className="text-red-500 font-bold">*</span>
            </Label>
            <Input
              id="phone"
              value={formData.phone}
              onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}
              required
              className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
              placeholder="+7 (495) 123-45-67"
            />
          </div>
        </div>
        
        <div className="grid grid-cols-2 gap-4">
          <div className="space-y-2">
            <Label htmlFor="website" className="text-sm font-semibold text-gray-700">
              –í–µ–±-—Å–∞–π—Ç
            </Label>
            <Input
              id="website"
              value={formData.website}
              onChange={(e) => setFormData(prev => ({ ...prev, website: e.target.value }))}
              className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
              placeholder="https://www.company.ru"
            />
          </div>
          <div className="space-y-2">
            <Label htmlFor="director" className="text-sm font-semibold text-gray-700">
              –î–∏—Ä–µ–∫—Ç–æ—Ä
            </Label>
            <Input
              id="director"
              value={formData.director}
              onChange={(e) => setFormData(prev => ({ ...prev, director: e.target.value }))}
              className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
              placeholder="–ò–≤–∞–Ω–æ–≤ –ò.–ò."
            />
          </div>
        </div>
      </div>
      
      <div className="flex gap-3 pt-4">
        <Button type="button" variant="outline" onClick={onCancel} className="flex-1 h-12 text-base font-medium">
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit" className="flex-1 h-12 text-base font-medium bg-blue-600 hover:bg-blue-700">
          <Save className="h-4 w-4 mr-2" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const ContactsForm = ({ onSave, onCancel, initialData }: { onSave: (data: any) => void, onCancel: () => void, initialData?: any }) => {
  const [formData, setFormData] = useState({
    email: initialData?.email || '',
    phone: initialData?.phone || '',
    website: initialData?.website || ''
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSave(formData)
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
      <div className="space-y-2">
        <Label htmlFor="email" className="text-sm font-semibold text-gray-700">
          Email
        </Label>
        <Input
          id="email"
          type="email"
          value={formData.email}
          onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="info@company.ru"
        />
      </div>
      
      <div className="space-y-2">
        <Label htmlFor="phone" className="text-sm font-semibold text-gray-700">
          –¢–µ–ª–µ—Ñ–æ–Ω <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="phone"
          value={formData.phone}
          onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="+7 (495) 123-45-67"
        />
      </div>
      
      <div className="space-y-2">
        <Label htmlFor="website" className="text-sm font-semibold text-gray-700">
          –í–µ–±-—Å–∞–π—Ç
        </Label>
        <Input
          id="website"
          value={formData.website}
          onChange={(e) => setFormData(prev => ({ ...prev, website: e.target.value }))}
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="https://www.company.ru"
        />
      </div>
      

      
      <div className="flex gap-3 pt-4">
        <Button type="button" variant="outline" onClick={onCancel} className="flex-1 h-12 text-base font-medium">
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit" className="flex-1 h-12 text-base font-medium bg-blue-600 hover:bg-blue-700">
          <Save className="h-4 w-4 mr-2" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –¥–ª—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
const BankForm = ({ onSave, onCancel, initialData }: { onSave: (data: any) => void, onCancel: () => void, initialData?: any }) => {
  const [formData, setFormData] = useState({
    bankName: initialData?.bankName || '',
    bankAccount: initialData?.bankAccount || '',
    bankCorrAccount: initialData?.bankCorrAccount || '',
    bankBik: initialData?.bankBik || ''
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSave(formData)
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
      <div className="space-y-2">
        <Label htmlFor="bankName" className="text-sm font-semibold text-gray-700">
          –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="bankName"
          value={formData.bankName}
          onChange={(e) => setFormData(prev => ({ ...prev, bankName: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="–°–±–µ—Ä–±–∞–Ω–∫ –†–æ—Å—Å–∏–∏"
        />
      </div>
      
      <div className="space-y-2">
        <Label htmlFor="bankAccount" className="text-sm font-semibold text-gray-700">
          –†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç <span className="text-red-500 font-bold">*</span>
        </Label>
        <Input
          id="bankAccount"
          value={formData.bankAccount}
          onChange={(e) => setFormData(prev => ({ ...prev, bankAccount: e.target.value }))}
          required
          className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
          placeholder="40702810123456789012"
        />
      </div>
      
      <div className="grid grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="bankCorrAccount" className="text-sm font-semibold text-gray-700">
            –ö–æ—Ä—Ä. —Å—á–µ—Ç <span className="text-red-500 font-bold">*</span>
          </Label>
          <Input
            id="bankCorrAccount"
            value={formData.bankCorrAccount}
            onChange={(e) => setFormData(prev => ({ ...prev, bankCorrAccount: e.target.value }))}
            required
            className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
            placeholder="30101810123456789012"
          />
        </div>
        <div className="space-y-2">
          <Label htmlFor="bankBik" className="text-sm font-semibold text-gray-700">
            –ë–ò–ö <span className="text-red-500 font-bold">*</span>
          </Label>
          <Input
            id="bankBik"
            value={formData.bankBik}
            onChange={(e) => setFormData(prev => ({ ...prev, bankBik: e.target.value }))}
            required
            className="h-12 px-4 text-base border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200"
            placeholder="044525225"
          />
        </div>
      </div>
      

      
      <div className="flex gap-3 pt-4">
        <Button type="button" variant="outline" onClick={onCancel} className="flex-1 h-12 text-base font-medium">
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit" className="flex-1 h-12 text-base font-medium bg-blue-600 hover:bg-blue-700">
          <Save className="h-4 w-4 mr-2" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–®–∞–≥ II)
// –¢–∏–ø –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
interface SpecificationItem {
  name: string;
  quantity: number;
  price: number;
  code?: string;
  unit?: string;
  total?: number;
  description?: string;
}

const SpecificationForm = ({ onSave, onCancel, initialData }: { onSave: (data: any) => void, onCancel: () => void, initialData?: any }) => {
  console.log("üîç SpecificationForm –ø–æ–ª—É—á–∏–ª initialData:", initialData);
  const [formData, setFormData] = useState({
    supplier: initialData?.supplier || '',
    currency: initialData?.currency || 'RUB',
    items: (initialData?.items || [{ name: '', quantity: 1, price: 0 }]) as SpecificationItem[]
  })

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ initialData
  useEffect(() => {
    console.log("üîÑ SpecificationForm useEffect - initialData –∏–∑–º–µ–Ω–∏–ª—Å—è:", initialData);
    console.log("üìä –¢–∏–ø initialData:", typeof initialData);
    console.log("üìä –ö–ª—é—á–∏ –≤ initialData:", initialData ? Object.keys(initialData) : 'null');
    if (initialData) {
      const newFormData = {
        supplier: initialData.supplier || '',
        currency: initialData.currency || 'RUB',
        items: initialData.items || [{ name: '', quantity: 1, price: 0 }]
      };
      console.log("üìù SpecificationForm —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:", newFormData);
      console.log("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:", newFormData.items.length);
      console.log("üìä –¢–æ–≤–∞—Ä—ã:", newFormData.items);
      setFormData(newFormData);
    }
  }, [initialData]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSave(formData)
  }

  const addItem = () => {
    setFormData(prev => ({
      ...prev,
      items: [...prev.items, { name: '', quantity: 1, price: 0 } as SpecificationItem]
    }))
  }

  const updateItem = (index: number, field: string, value: any) => {
    setFormData(prev => ({
      ...prev,
      items: prev.items.map((item: SpecificationItem, i: number) => 
        i === index ? { ...item, [field]: value } : item
      )
    }))
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      <div className="grid grid-cols-2 gap-4">
        <div>
          <Label htmlFor="supplier">–ü–æ—Å—Ç–∞–≤—â–∏–∫ *</Label>
          <Input
            id="supplier"
            value={formData.supplier}
            onChange={(e) => setFormData(prev => ({ ...prev, supplier: e.target.value }))}
            required
          />
        </div>
        <div>
          <Label htmlFor="currency">–í–∞–ª—é—Ç–∞</Label>
          <select
            id="currency"
            value={formData.currency}
            onChange={(e) => setFormData(prev => ({ ...prev, currency: e.target.value }))}
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
            <option value="RUB">RUB</option>
          </select>
        </div>
      </div>
      
      <div>
        <Label>–¢–æ–≤–∞—Ä—ã</Label>
        <div className="space-y-2">
          {formData.items.map((item: SpecificationItem, index: number) => (
            <div key={index} className="grid grid-cols-3 gap-2">
              <Input
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
                value={item.name}
                onChange={(e) => updateItem(index, 'name', e.target.value)}
              />
              <Input
                type="number"
                placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                value={item.quantity}
                onChange={(e) => updateItem(index, 'quantity', parseInt(e.target.value) || 0)}
              />
              <Input
                type="number"
                placeholder="–¶–µ–Ω–∞"
                value={item.price}
                onChange={(e) => updateItem(index, 'price', parseFloat(e.target.value) || 0)}
              />
            </div>
          ))}
        </div>
        <Button type="button" variant="outline" onClick={addItem} className="mt-2">
          <Plus className="h-4 w-4 mr-2" />
          –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
        </Button>
      </div>
      
      <div className="flex gap-2">
        <Button type="button" variant="outline" onClick={onCancel}>
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit">
          <Save className="h-4 w-4 mr-2" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (–®–∞–≥ III)
const FileUploadForm = ({ onSave, onCancel }: { onSave: (data: any) => void, onCancel: () => void }) => {
  const [file, setFile] = useState<File | null>(null)

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const selectedFile = e.target.files?.[0]
    if (selectedFile) {
      setFile(selectedFile)
    }
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    if (file) {
      onSave({ file })
    }
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      <div className="text-center p-6 border-2 border-dashed border-gray-300 rounded-lg">
        <Upload className="h-12 w-12 mx-auto text-gray-400 mb-4" />
        <p className="text-gray-600 mb-4">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ–∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞</p>
        <input
          type="file"
          onChange={handleFileChange}
          accept=".pdf,.jpg,.jpeg,.png"
          className="hidden"
          id="file-upload"
        />
        <label htmlFor="file-upload" className="cursor-pointer">
          <Button type="button" variant="outline">
            –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
          </Button>
        </label>
      </div>
      
      {file && (
        <div className="p-3 bg-blue-50 border border-blue-200 rounded">
          <FileText className="h-4 w-4 text-blue-600 inline mr-2" />
          <span>–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {file.name}</span>
        </div>
      )}
      
      <div className="flex gap-2">
        <Button type="button" variant="outline" onClick={onCancel}>
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit" disabled={!file}>
          <Save className="h-4 w-4 mr-2" />
          –ó–∞–≥—Ä—É–∑–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã (–®–∞–≥ IV)
const PaymentMethodForm = ({ onSave, onCancel, initialData, getStepData }: { onSave: (data: any) => void, onCancel: () => void, initialData?: any, getStepData?: (stepId: number) => any }) => {
  const [method, setMethod] = useState(initialData?.method || '')
  const [supplier, setSupplier] = useState(initialData?.supplier || '')

  // üî• –ù–û–í–û–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —à–∞–≥–∞ 2, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ initialData
  React.useEffect(() => {
    if (!supplier && !initialData?.supplier && getStepData) {
      const step2Data = getStepData(2);
      console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–≥–∞ 2:", step2Data);
      if (step2Data?.supplier) {
        setSupplier(step2Data.supplier);
        console.log("üè¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ —à–∞–≥–∞ 2:", step2Data.supplier);
      }
    }
  }, [supplier, initialData?.supplier, getStepData]);

  // üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–∞ 2
  React.useEffect(() => {
    if (getStepData) {
      const step2Data = getStepData(2);
      console.log("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —à–∞–≥–∞ 2:", step2Data);
      if (step2Data?.supplier && step2Data.supplier !== supplier) {
        setSupplier(step2Data.supplier);
        console.log("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ —à–∞–≥–∞ 2:", step2Data.supplier);
      }
    }
  }, [getStepData, supplier]);

  // üî• –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, –µ—Å–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π
  React.useEffect(() => {
    if (getStepData && !supplier) {
      const step2Data = getStepData(2);
      if (step2Data?.supplier) {
        setSupplier(step2Data.supplier);
        console.log("üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ —à–∞–≥–∞ 2:", step2Data.supplier);
      }
    }
  });

  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ OCR, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
  const hasSuggestion = initialData?.suggested && initialData?.source === 'ocr_invoice';

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    if (method) {
      onSave({ method, supplier, suggested: false, source: 'manual' })
    }
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ OCR */}
      {hasSuggestion && (
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
          <div className="flex items-center gap-2 mb-2">
            <Eye className="h-4 w-4 text-blue-600" />
            <span className="text-sm font-medium text-blue-800">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ –∏–Ω–≤–æ–π—Å–∞</span>
          </div>
          <p className="text-sm text-blue-700 mb-3">
            –ù–∞ –æ—Å–Ω–æ–≤–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ –∏–Ω–≤–æ–π—Å–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
          </p>
          <div className="bg-white border border-blue-300 rounded p-3">
            <span className="text-sm font-medium">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥</span>
            <p className="text-xs text-gray-600 mt-1">
              –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
            </p>
          </div>
        </div>
      )}

      <div className="grid grid-cols-2 gap-4">
      <div>
        <Label htmlFor="method">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã *</Label>
        <select
          id="method"
          value={method}
          onChange={(e) => setMethod(e.target.value)}
          className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          required
        >
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</option>
          <option value="bank-transfer">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥</option>
          <option value="p2p">P2P –ø–ª–∞—Ç–µ–∂</option>
          <option value="crypto">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</option>
        </select>
        </div>
        
        <div>
          <Label htmlFor="supplier">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
          <Input
            id="supplier"
            value={supplier}
            onChange={(e) => setSupplier(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
        </div>
      </div>
      
      <div className="flex gap-2">
        <Button type="button" variant="outline" onClick={onCancel}>
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit" disabled={!method}>
          <Save className="h-4 w-4 mr-2" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ (–®–∞–≥ V)
const RequisitesForm = ({ onSave, onCancel, initialData }: { onSave: (data: any) => void, onCancel: () => void, initialData?: any }) => {
  const [formData, setFormData] = useState({
    bankName: initialData?.bankName || '',
    accountNumber: initialData?.accountNumber || '',
    swift: initialData?.swift || '',
    recipientName: initialData?.recipientName || '',
    recipientAddress: initialData?.recipientAddress || '',
    transferCurrency: initialData?.transferCurrency || 'USD',
    supplier: initialData?.supplier || initialData?.recipientName || ''
  })

  // üî• –ù–û–í–û–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
  React.useEffect(() => {
    if (formData.recipientName && !formData.supplier) {
      setFormData(prev => ({ ...prev, supplier: formData.recipientName }));
    }
  }, [formData.recipientName, formData.supplier]);

  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ OCR, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
  const hasSuggestion = initialData?.suggested && initialData?.source === 'ocr_invoice';

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSave({ ...formData, suggested: false, source: 'manual' })
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ OCR */}
      {hasSuggestion && (
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
          <div className="flex items-center gap-2 mb-2">
            <Eye className="h-4 w-4 text-blue-600" />
            <span className="text-sm font-medium text-blue-800">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–∑ –∏–Ω–≤–æ–π—Å–∞</span>
          </div>
          <p className="text-sm text-blue-700 mb-3">
            –ù–∞ –æ—Å–Ω–æ–≤–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ –∏–Ω–≤–æ–π—Å–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
          </p>
          <div className="bg-white border border-blue-300 rounded p-3 space-y-2">
            {initialData.accountNumber && (
              <div>
                <span className="text-xs text-gray-600">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞:</span>
                <p className="text-sm font-medium">{initialData.accountNumber}</p>
              </div>
            )}
            {initialData.swift && (
              <div>
                <span className="text-xs text-gray-600">SWIFT –∫–æ–¥:</span>
                <p className="text-sm font-medium">{initialData.swift}</p>
              </div>
            )}
            {initialData.recipientName && (
              <div>
                <span className="text-xs text-gray-600">–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</span>
                <p className="text-sm font-medium">{initialData.recipientName}</p>
              </div>
            )}
            {initialData.transferCurrency && (
              <div>
                <span className="text-xs text-gray-600">–í–∞–ª—é—Ç–∞:</span>
                <p className="text-sm font-medium">{initialData.transferCurrency}</p>
              </div>
            )}
          </div>
        </div>
      )}

      <div className="grid grid-cols-2 gap-4">
        <div>
          <Label htmlFor="bankName">–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</Label>
          <Input
            id="bankName"
            value={formData.bankName}
            onChange={(e) => setFormData(prev => ({ ...prev, bankName: e.target.value }))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞"
          />
        </div>
        <div>
          <Label htmlFor="accountNumber">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ *</Label>
          <Input
            id="accountNumber"
            value={formData.accountNumber}
            onChange={(e) => setFormData(prev => ({ ...prev, accountNumber: e.target.value }))}
            required
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞"
          />
        </div>
      </div>
      
      <div>
        <Label htmlFor="swift">SWIFT/BIC –∫–æ–¥</Label>
        <Input
          id="swift"
          value={formData.swift}
          onChange={(e) => setFormData(prev => ({ ...prev, swift: e.target.value }))}
          placeholder="–í–≤–µ–¥–∏—Ç–µ SWIFT/BIC –∫–æ–¥"
        />
      </div>

      <div className="grid grid-cols-2 gap-4">
        <div>
          <Label htmlFor="recipientName">–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è</Label>
          <Input
            id="recipientName"
            value={formData.recipientName}
            onChange={(e) => setFormData(prev => ({ ...prev, recipientName: e.target.value }))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
          />
        </div>
        <div>
          <Label htmlFor="supplier">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
          <Input
            id="supplier"
            value={formData.supplier}
            onChange={(e) => setFormData(prev => ({ ...prev, supplier: e.target.value }))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
          />
        </div>
      </div>

      <div>
        <Label htmlFor="recipientAddress">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è</Label>
        <Textarea
          id="recipientAddress"
          value={formData.recipientAddress}
          onChange={(e) => setFormData(prev => ({ ...prev, recipientAddress: e.target.value }))}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è"
          rows={3}
        />
      </div>

      <div>
        <Label htmlFor="transferCurrency">–í–∞–ª—é—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–∞</Label>
        <select
          id="transferCurrency"
          value={formData.transferCurrency}
          onChange={(e) => setFormData(prev => ({ ...prev, transferCurrency: e.target.value }))}
          className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
          <option value="USD">USD - –î–æ–ª–ª–∞—Ä –°–®–ê</option>
          <option value="EUR">EUR - –ï–≤—Ä–æ</option>
          <option value="RUB">RUB - –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å</option>
          <option value="CNY">CNY - –ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å</option>
        </select>
      </div>
      
      <div className="flex gap-2">
        <Button type="button" variant="outline" onClick={onCancel}>
          <X className="h-4 w-4 mr-2" />
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button type="submit">
          <Save className="h-4 w-4 mr-2" />
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </Button>
      </div>
    </form>
  )
}

export default function ProjectConstructorPage() {
  // –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  React.useEffect(() => {
    const style = document.createElement('style')
    style.textContent = phantomDataStyles
    document.head.appendChild(style)
    
    return () => {
      document.head.removeChild(style)
    }
  }, [])
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º
  const [stepConfigs, setStepConfigs] = useState<Record<number, string>>({})
  const [hoveredStep, setHoveredStep] = useState<number | null>(null)
  const [lastHoveredStep, setLastHoveredStep] = useState<number | null>(null)
  const [manualData, setManualData] = useState<Record<number, any>>({})
  const [uploadedFiles, setUploadedFiles] = useState<Record<number, string>>({})
  const [selectedSource, setSelectedSource] = useState<string | null>(null)
  const [templateStepSelection, setTemplateStepSelection] = useState<{templateId: string, availableSteps: number[]} | null>(null)
  const [templateSelection, setTemplateSelection] = useState<boolean>(false)
  const [showBankAccountSelector, setShowBankAccountSelector] = useState<boolean>(false)
  const [bankAccountSourceType, setBankAccountSourceType] = useState<'profile' | 'template'>('profile')
  const [showPreviewModal, setShowPreviewModal] = useState<boolean>(false)
  const [previewData, setPreviewData] = useState<any>(null)
  const [previewType, setPreviewType] = useState<string>('')
  const [editingType, setEditingType] = useState<string>('')
  const [currentItemIndex, setCurrentItemIndex] = useState(0)
  const [touchStart, setTouchStart] = useState(0)
  const [touchEnd, setTouchEnd] = useState(0)
  const [user, setUser] = useState<any>(null)
  const [autoFillNotification, setAutoFillNotification] = useState<{
    show: boolean;
    message: string;
    supplierName: string;
    filledSteps: number[];
  } | null>(null)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è OCR –∞–Ω–∞–ª–∏–∑–∞
  const [ocrAnalyzing, setOcrAnalyzing] = useState<Record<number, boolean>>({})
  const [ocrError, setOcrError] = useState<Record<number, string>>({})
  const [ocrDebugData, setOcrDebugData] = useState<Record<number, any>>({})
  const [showStepDataModal, setShowStepDataModal] = useState<boolean>(false)
  const [stepDataToView, setStepDataToView] = useState<{stepId: number, data: any} | null>(null)
  const [currentProductIndex, setCurrentProductIndex] = useState<number>(0)
  const [productsPerView] = useState<number>(3)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const [echoDataModal, setEchoDataModal] = useState<{
    show: boolean;
    supplierName: string;
    echoData: any;
    projectInfo: any;
  } | null>(null)
  
  const [showPhantomOptions, setShowPhantomOptions] = useState<boolean>(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const [echoDataAvailable, setEchoDataAvailable] = useState<{ [key: number]: boolean }>({})
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const [echoDataLoading, setEchoDataLoading] = useState<boolean>(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏–º–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const [echoDataTooltips, setEchoDataTooltips] = useState<{ [key: number]: boolean }>({})
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ª–æ–∞–¥–µ—Ä–∞ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–æ–≤ 1 –∏ 2
  const [echoDataLoadingSteps1_2, setEchoDataLoadingSteps1_2] = useState<boolean>(false)

  // –•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
  const { profiles: clientProfiles, loading: clientProfilesLoading, fetchProfiles: fetchClientProfiles } = useClientProfiles(user?.id || null)

  // –•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
  const { profiles: supplierProfiles, loading: supplierProfilesLoading, fetchProfiles: fetchSupplierProfiles } = useSupplierProfiles(user?.id || null)

  // –•—É–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const { toast } = useToast()

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞
  const [showProfileSelector, setShowProfileSelector] = useState<boolean>(false)
  const [selectedProfileId, setSelectedProfileId] = useState<string | null>(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const [showSupplierProfileSelector, setShowSupplierProfileSelector] = useState<boolean>(false)
  const [selectedSupplierProfileId, setSelectedSupplierProfileId] = useState<string | null>(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Å–≤–æ–¥–∫–∏
  const [showSummaryModal, setShowSummaryModal] = useState<boolean>(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤
  const [templateError, setTemplateError] = useState<string | null>(null)
  const [templateLoading, setTemplateLoading] = useState<boolean>(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞
  const [currentStage, setCurrentStage] = useState<number>(1)

  // –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º (–±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ)
  const [catalogSourceStep, setCatalogSourceStep] = useState<number | null>(null)
  const [showCatalogSourceModal, setShowCatalogSourceModal] = useState<boolean>(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
  const [showStageTransitionModal, setShowStageTransitionModal] = useState<boolean>(false)
  const [dontShowStageTransition, setDontShowStageTransition] = useState<boolean>(false)
  const [stageTransitionShown, setStageTransitionShown] = useState<boolean>(false)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É
  const [sendingToManager, setSendingToManager] = useState<boolean>(false)
  const [managerNotification, setManagerNotification] = useState<{
    show: boolean;
    type: 'success' | 'error';
    message: string;
  } | null>(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã
  const [showBlueRoomSupplierModal, setShowBlueRoomSupplierModal] = useState<boolean>(false)
  const [blueRoomSuppliers, setBlueRoomSuppliers] = useState<any[]>([])
  const [blueRoomLoading, setBlueRoomLoading] = useState<boolean>(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã
  const [showOrangeRoomSupplierModal, setShowOrangeRoomSupplierModal] = useState<boolean>(false)
  const [orangeRoomSuppliers, setOrangeRoomSuppliers] = useState<any[]>([])
  const [orangeRoomLoading, setOrangeRoomLoading] = useState<boolean>(false)
  const [selectedSupplierData, setSelectedSupplierData] = useState<any>(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏
  const [dealAnimationStep, setDealAnimationStep] = useState<number>(0) // 0-3: —à–∞–≥–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
  const [dealAnimationStatus, setDealAnimationStatus] = useState<string>('') // —Å—Ç–∞—Ç—É—Å –∞–Ω–∏–º–∞—Ü–∏–∏
  const [dealAnimationComplete, setDealAnimationComplete] = useState<boolean>(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å—Ç–µ–ø–µ—Ä–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (—à–∞–≥–∏ 3, 6, 7)
  const [infrastructureStepperStep, setInfrastructureStepperStep] = useState<number>(0) // 0-2: —à–∞–≥–∏ —Å—Ç–µ–ø–µ—Ä–∞
  const [infrastructureStepperStatus, setInfrastructureStepperStatus] = useState<string>('') // —Å—Ç–∞—Ç—É—Å —Å—Ç–µ–ø–µ—Ä–∞

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º –∞–ø—Ä—É–≤–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  const [managerApprovalStatus, setManagerApprovalStatus] = useState<'pending' | 'approved' | 'rejected' | null>(null)
  const [managerApprovalMessage, setManagerApprovalMessage] = useState<string>('')
  const [projectRequestId, setProjectRequestId] = useState<string>('')

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è —á–µ–∫–∞
  const [showRequisitesConfirmationModal, setShowRequisitesConfirmationModal] = useState<boolean>(false)
  const [showStage2SummaryModal, setShowStage2SummaryModal] = useState<boolean>(false)
  const [receiptApprovalStatus, setReceiptApprovalStatus] = useState<'pending' | 'approved' | 'rejected' | 'waiting' | null>(null)
  const [managerReceiptUrl, setManagerReceiptUrl] = useState<string | null>(null)
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
  const [showCatalogModal, setShowCatalogModal] = useState<boolean>(false)
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ —É–¥–∞–ª–µ–Ω—ã - —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ CatalogModal
  const [hasManagerReceipt, setHasManagerReceipt] = useState(false)
  const [isRequestSent, setIsRequestSent] = useState(false)
  const [showFullLoader, setShowFullLoader] = useState(false)
  const [clientReceiptFile, setClientReceiptFile] = useState<File | null>(null)
  const [clientReceiptUrl, setClientReceiptUrl] = useState<string | null>(null)
  const [isUploadingClientReceipt, setIsUploadingClientReceipt] = useState(false)
  const [clientReceiptUploadError, setClientReceiptUploadError] = useState<string | null>(null)
  const [projectDetailsDialogOpen, setProjectDetailsDialogOpen] = useState(false)
  const [projectDetails, setProjectDetails] = useState<any>(null)

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ supplier –≤ –ª—é–±–æ–º –∏–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤
  const findSupplierInAnyStep = () => {
    console.log('üîç –ò—â–µ–º supplier –≤ –ª—é–±–æ–º –∏–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤...')
    console.log('üîç manualData:', manualData)
    console.log('üîç selectedSupplierData:', selectedSupplierData)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–≥ 2 (—Ç–æ–≤–∞—Ä—ã)
    const step2Data = manualData[2]
    console.log('üîç step2Data:', step2Data)
    if (step2Data) {
      if (step2Data.supplier) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ —à–∞–≥–µ 2:', step2Data.supplier)
        return step2Data.supplier
      }
      if (step2Data.items && step2Data.items.length > 0) {
        const firstItem = step2Data.items[0]
        if (firstItem.supplier_name) {
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier_name –≤ —à–∞–≥–µ 2:', firstItem.supplier_name)
          return firstItem.supplier_name
        }
        if (firstItem.supplier) {
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ —Ç–æ–≤–∞—Ä–µ —à–∞–≥–∞ 2:', firstItem.supplier)
          return firstItem.supplier
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–≥ 4 (—Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã) - –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    const step4Data = manualData[4]
    console.log('üîç step4Data:', step4Data)
    if (step4Data) {
      if (step4Data.supplier_name) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier_name –≤ —à–∞–≥–µ 4:', step4Data.supplier_name)
        return step4Data.supplier_name
      }
      if (step4Data.supplier) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ —à–∞–≥–µ 4:', step4Data.supplier)
        return step4Data.supplier
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–≥ 5 (—Ä–µ–∫–≤–∏–∑–∏—Ç—ã) - –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    const step5Data = manualData[5]
    console.log('üîç step5Data:', step5Data)
    if (step5Data) {
      if (step5Data.supplier_name) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier_name –≤ —à–∞–≥–µ 5:', step5Data.supplier_name)
        return step5Data.supplier_name
      }
      if (step5Data.supplier) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ —à–∞–≥–µ 5:', step5Data.supplier)
        return step5Data.supplier
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º selectedSupplierData (–µ—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞)
    if (selectedSupplierData) {
      if (selectedSupplierData.name) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ selectedSupplierData:', selectedSupplierData.name)
        return selectedSupplierData.name
      }
      if (selectedSupplierData.company_name) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω company_name –≤ selectedSupplierData:', selectedSupplierData.company_name)
        return selectedSupplierData.company_name
      }
    }
    
    console.log('‚ùå Supplier –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–º —à–∞–≥–µ')
    console.log('üîç –î–µ—Ç–∞–ª–∏ manualData:')
    Object.keys(manualData).forEach(key => {
      const numericKey = parseInt(key)
      if (!isNaN(numericKey)) {
        console.log(`  ${key}:`, manualData[numericKey])
      }
    })
    return null
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const checkEchoDataAvailability = async () => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö...')
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
    setEchoDataLoading(true)
    
    // –ò—â–µ–º supplier –≤ –ª—é–±–æ–º –∏–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤
    const supplierName = findSupplierInAnyStep()
    
    if (!supplierName) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω supplier –Ω–∏ –≤ –æ–¥–Ω–æ–º —à–∞–≥–µ')
      setEchoDataAvailable({})
      setEchoDataLoading(false)
      return
    }

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierName)
    
    try {
      const echoData = await getEchoSupplierData(supplierName)
      if (echoData) {
        console.log('‚úÖ –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —à–∞–≥–æ–≤ 4 –∏ 5')
        setEchoDataAvailable({
          4: true,
          5: true
        })
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
        setEchoDataTooltips({
          4: true,
          5: true
        })
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          setEchoDataTooltips(prev => ({
            ...prev,
            4: false,
            5: false
          }))
        }, 10000)
      } else {
        console.log('‚ùå –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')
        setEchoDataAvailable({})
        setEchoDataTooltips({})
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö:', error)
      setEchoDataAvailable({})
      setEchoDataTooltips({})
    } finally {
      // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
      setEchoDataLoading(false)
    }
  }
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
  React.useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      const target = event.target as Element
      if (!target.closest('.phantom-options-dropdown')) {
        setShowPhantomOptions(false)
      }
    }
    
    document.addEventListener('mousedown', handleClickOutside)
    return () => {
      document.removeEventListener('mousedown', handleClickOutside)
    }
  }, [])

  // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const { templates, loading: templatesLoading, error: templatesError, fetchTemplates } = useProjectTemplates()

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  React.useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
    const checkAuthAndLoad = async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...')
      const { data: { user } } = await supabase.auth.getUser()
      if (user) {
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', user.email)
          setUser(user)
          console.log('üìã –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω—ã...')
          await fetchTemplates()
          console.log('üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤...')
          await fetchClientProfiles()
          console.log('üè≠ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...')
          await fetchSupplierProfiles()
        } else {
          console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
      }
    }
    
    checkAuthAndLoad()
  }, []) // –£–±–∏—Ä–∞–µ–º fetchTemplates –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // Polling —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
  useEffect(() => {
    if (!projectRequestId || currentStage !== 2) return
    
    const checkManagerStatus = async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è projectRequestId:', projectRequestId)
        const cleanRequestId = projectRequestId.replace(/[^a-zA-Z0-9]/g, '')
        console.log('üßπ –û—á–∏—â–µ–Ω–Ω—ã–π requestId –¥–ª—è –ø–æ–∏—Å–∫–∞:', cleanRequestId)
        
        const { data: projects, error } = await supabase
          .from('projects')
          .select('atomic_moderation_status')
          .ilike('atomic_request_id', `%${cleanRequestId}%`)
          .order('created_at', { ascending: false })
          .limit(1)

        if (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error)
          return
        }

        if (projects && projects.length > 0 && projects[0].atomic_moderation_status) {
          const status = projects[0].atomic_moderation_status
          console.log('üìä –°—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω:', status)
          setManagerApprovalStatus(status)
          
          // –ï—Å–ª–∏ –æ–¥–æ–±—Ä–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞—Ç—ë–∂–∫—É (—à–∞–≥ 3)
          if (status === 'approved') {
            console.log('‚úÖ –ê—Ç–æ–º–∞—Ä–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–¥–æ–±—Ä–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞—Ç—ë–∂–∫—É')
            // –ù–ï –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 3, –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ —ç—Ç–∞–ø–µ 2 –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–ª–∞—Ç—ë–∂–∫–∏
          }
        } else {
          console.log('üìä –ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —Å—Ç–∞—Ç—É—Å –ø—É—Å—Ç–æ–π')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ polling —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error)
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã
    const interval = setInterval(checkManagerStatus, 4000)
    
    // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    checkManagerStatus()
    
    return () => clearInterval(interval)
  }, [projectRequestId, currentStage, setCurrentStage])

  // Polling —Å—Ç–∞—Ç—É—Å–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è —á–µ–∫–∞
  useEffect(() => {
    if (!projectRequestId || currentStage !== 2) return
    
    const checkReceiptStatus = async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ–∫–∞ –¥–ª—è projectRequestId:', projectRequestId)
        const cleanRequestId = projectRequestId.replace(/[^a-zA-Z0-9]/g, '')
        console.log('üßπ –û—á–∏—â–µ–Ω–Ω—ã–π requestId –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–µ–∫–∞:', cleanRequestId)
        
        const { data: projects, error } = await supabase
          .from('projects')
          .select('status, atomic_moderation_status')
          .ilike('atomic_request_id', `%${cleanRequestId}%`)
          .order('created_at', { ascending: false })
          .limit(1)

        if (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —á–µ–∫–∞:', error)
          return
        }

        console.log('üìä [DEBUG] –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —á–µ–∫–∞:', projects)

        if (projects && projects.length > 0) {
          const project = projects[0]
          console.log('üìä [DEBUG] –ü—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω:', {
            status: project.status,
            atomic_moderation_status: project.atomic_moderation_status
          })
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –µ—Å–ª–∏ –æ–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
          if (project.atomic_moderation_status && managerApprovalStatus !== project.atomic_moderation_status) {
            console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞:', project.atomic_moderation_status)
            setManagerApprovalStatus(project.atomic_moderation_status)
          }
          
          if (project.status) {
            const status = project.status
            console.log('üìä –°—Ç–∞—Ç—É—Å —á–µ–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω:', status)
            
            if (status === 'receipt_approved' && receiptApprovalStatus !== 'approved') {
              console.log('‚úÖ –ß–µ–∫ –æ–¥–æ–±—Ä–µ–Ω - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 3 (–∞–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏)')
              setReceiptApprovalStatus('approved')
              setCurrentStage(3) // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 3: –∞–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏
            } else if (status === 'receipt_rejected' && receiptApprovalStatus !== 'rejected') {
              console.log('‚ùå –ß–µ–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω')
              setReceiptApprovalStatus('rejected')
            } else if (status === 'waiting_receipt' && receiptApprovalStatus !== 'waiting') {
              console.log('‚è≥ –ß–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω, –∂–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è')
              setReceiptApprovalStatus('waiting')
            }
          } else {
            console.log('üìä –°—Ç–∞—Ç—É—Å —á–µ–∫–∞ –ø—É—Å—Ç–æ–π')
          }
        } else {
          console.log('üìä –ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ polling —Å—Ç–∞—Ç—É—Å–∞ —á–µ–∫–∞:', error)
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã
    const interval = setInterval(checkReceiptStatus, 4000)
    
    // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    checkReceiptStatus()
    
    return () => clearInterval(interval)
  }, [projectRequestId, currentStage, managerApprovalStatus, receiptApprovalStatus])

  // Polling —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (—à–∞–≥ 6)
  useEffect(() => {
    if (!projectRequestId || currentStage !== 3) return
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç—Ç–∞–ø 3
    if (!isRequestSent) {
      console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç—Ç–∞–ø 3')
      sendManagerReceiptRequest()
    }
    
    const checkManagerReceipt = async () => {
      try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è projectRequestId:', projectRequestId)
        
        const { data: project, error } = await supabase
          .from('projects')
          .select('status, receipts')
          .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)
          .single()
        
        if (error || !project) {
          console.log('üìä –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞')
          return
        }
        
        console.log('üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —á–µ–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:', project.status)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        let managerReceiptUrl = null
        
        if (project.receipts) {
          try {
            // –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
            const receiptsData = JSON.parse(project.receipts)
            if (receiptsData.manager_receipt) {
              managerReceiptUrl = receiptsData.manager_receipt
            }
          } catch {
            // –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
            if (project.status === 'in_work') {
              managerReceiptUrl = project.receipts
            }
          }
        }
        
        if (managerReceiptUrl && !hasManagerReceipt) {
          console.log('‚úÖ –ß–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω:', managerReceiptUrl)
          console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasManagerReceipt=true')
          setManagerReceiptUrl(managerReceiptUrl)
          setHasManagerReceipt(true)
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          if (project.status === 'waiting_manager_receipt') {
            await supabase
              .from('projects')
              .update({ 
                status: 'in_work',
                updated_at: new Date().toISOString()
              })
              .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ in_work')
          }
        } else if (!managerReceiptUrl && hasManagerReceipt) {
          console.log('‚ùå –ß–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —É–¥–∞–ª–µ–Ω')
          console.log('üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º hasManagerReceipt=false')
          setManagerReceiptUrl(null)
          setHasManagerReceipt(false)
        } else {
          console.log('üìä –°—Ç–∞—Ç—É—Å —á–µ–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è:', { 
            hasManagerReceipt, 
            managerReceiptUrl: !!managerReceiptUrl,
            projectStatus: project.status 
          })
        }
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:', error)
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(checkManagerReceipt, 5000)
    
    // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    checkManagerReceipt()
    
    return () => clearInterval(interval)
  }, [projectRequestId, currentStage, hasManagerReceipt])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤
  const handleClientReceiptUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file || !projectRequestId) return

    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞:", {
      fileName: file.name,
      fileSize: file.size,
      fileType: file.type,
      projectRequestId
    })

    setIsUploadingClientReceipt(true)
    setClientReceiptUploadError(null)

    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤
      const { data: userData } = await supabase.auth.getUser()
      const userId = userData?.user?.id || 'unknown'

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
      const fileExtension = file.name.split('.').pop() || 'jpg'
      const fileName = `client-receipt-${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}-${Date.now()}.${fileExtension}`
      const filePath = `${userId}/${fileName}`

      console.log("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —á–µ–∫ –∫–ª–∏–µ–Ω—Ç–∞:", {
        fileName,
        size: file.size,
        type: file.type,
        projectRequestId
      })

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
      const { data: uploadData, error: uploadError } = await supabase.storage
        .from("step7-client-confirmations")
        .upload(filePath, file, {
          contentType: file.type,
          upsert: false
        })

      if (uploadError) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Storage:", uploadError)
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª: " + uploadError.message)
      }

      // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL —Ñ–∞–π–ª–∞
      const { data: urlData } = supabase.storage
        .from("step7-client-confirmations")
        .getPublicUrl(filePath)

      const fileUrl = urlData.publicUrl
      console.log("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:", fileUrl)

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ –ø—Ä–æ–µ–∫—Ç
      const { error: updateError } = await supabase
        .from("projects")
        .update({ 
          client_confirmation_url: fileUrl,
          updated_at: new Date().toISOString()
        })
        .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)

      if (updateError) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:", updateError)
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª")
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ Telegram
      const telegramCaption = `üìã –ö–õ–ò–ï–ù–¢ –ó–ê–ì–†–£–ó–ò–õ –ß–ï–ö –û –ü–û–õ–£–ß–ï–ù–ò–ò –°–†–ï–î–°–¢–í!\n\n` +
        `üÜî –ü—Ä–æ–µ–∫—Ç: ${projectRequestId}\n` +
        `üìõ –ù–∞–∑–≤–∞–Ω–∏–µ: ${manualData[1]?.name || '–ê—Ç–æ–º–∞—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç'}\n` +
        `üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${manualData[1]?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n` +
        `üìß Email: ${manualData[1]?.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n` +
        `üí∞ –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: ${manualData[4]?.method || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n` +
        `üìÑ –ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —á–µ–∫–æ–º.\n` +
        `‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –µ—Å–ª–∏ –≤—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.`

      console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram:", {
        fileUrl,
        telegramCaption,
        projectRequestId
      })

      try {
        console.log("üîß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ–∫ –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ API —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:", {
          fileUrl: fileUrl?.substring(0, 100) + "...",
          captionLength: telegramCaption?.length,
          projectRequestId
        })
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ Telegram —á–µ—Ä–µ–∑ API endpoint
        const response = await fetch('/api/telegram/send-client-receipt', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            documentUrl: fileUrl,
            caption: telegramCaption,
            projectRequestId
          })
        })
        
        const telegramResult = await response.json()
        
        if (telegramResult.success) {
          console.log("‚úÖ –ß–µ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ Telegram:", telegramResult)
        } else {
          console.error("‚ùå –û—à–∏–±–∫–∞ API –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ–∫–∞:", telegramResult.error)
          throw new Error(telegramResult.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API')
        }
      } catch (telegramError) {
        console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", telegramError)
        console.error("‚ö†Ô∏è –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", {
          message: telegramError instanceof Error ? telegramError.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
          stack: telegramError instanceof Error ? telegramError.stack : undefined
        })
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      }

      setClientReceiptFile(file)
      setClientReceiptUrl(fileUrl)

      toast({
        title: "–ß–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω!",
        description: "–í–∞—à —á–µ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
        variant: "default"
      })

    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞:", error)
      setClientReceiptUploadError(error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
      
      toast({
        title: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        variant: "destructive"
      })
    } finally {
      setIsUploadingClientReceipt(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —á–µ–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
  const handleRemoveClientReceipt = async () => {
    if (!projectRequestId || !clientReceiptUrl) return

    try {
      // –£–¥–∞–ª—è–µ–º URL –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const { error: updateError } = await supabase
        .from("projects")
        .update({ 
          client_confirmation_url: null,
          updated_at: new Date().toISOString()
        })
        .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)

      if (updateError) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:", updateError)
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª")
      }

      setClientReceiptFile(null)
      setClientReceiptUrl(null)

      toast({
        title: "–ß–µ–∫ —É–¥–∞–ª–µ–Ω",
        description: "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —á–µ–∫.",
        variant: "default"
      })

    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–µ–∫–∞:", error)
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —á–µ–∫.",
        variant: "destructive"
      })
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
  const handleShowProjectDetails = async () => {
    if (!projectRequestId) return

    console.log("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞:", projectRequestId)

    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
      const { data: projects, error } = await supabase
        .from("projects")
        .select("*")
        .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)
        .order("created_at", { ascending: false })
        .limit(1)

      if (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:", error)
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞")
      }

      if (!projects || projects.length === 0) {
        throw new Error("–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
      }

      const project = projects[0]
      setProjectDetails({
        ...project,
        manualData,
        stepConfigs,
        currentStage: getCurrentStage(),
        activeScenario: getActiveScenario()
      })
      setProjectDetailsDialogOpen(true)

      console.log("‚úÖ –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", project)
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞:", error)
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞",
        variant: "destructive",
      })
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —á–µ–∫–∞ (—à–∞–≥ 6)
  const sendManagerReceiptRequest = async () => {
    if (!projectRequestId || isRequestSent) {
      console.log('üîÑ –ó–∞–ø—Ä–æ—Å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ—Ç projectRequestId')
      return
    }
    
    try {
      setIsRequestSent(true)
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —á–µ–∫–∞')
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
      const { data: project, error } = await supabase
        .from('projects')
        .select('*')
        .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)
        .single()
      
      if (error || !project) {
        throw new Error('–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
      let requisiteText = ''
      try {
        const { data: requisiteData } = await supabase
          .from('project_requisites')
          .select('data')
          .eq('project_id', project.id)
          .order('created_at', { ascending: false })
          .limit(1)
          .single()
        
        if (requisiteData?.data) {
          const req = requisiteData.data
          const details = req.details || req
          
          if (project.payment_method === 'bank-transfer') {
            requisiteText = `\n\nüìã –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n‚Ä¢ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${details.recipientName || '-'}\n‚Ä¢ –ë–∞–Ω–∫: ${details.bankName || '-'}\n‚Ä¢ –°—á–µ—Ç: ${details.accountNumber || '-'}\n‚Ä¢ SWIFT/BIC: ${details.swift || details.cnapsCode || details.iban || '-'}\n‚Ä¢ –í–∞–ª—é—Ç–∞: ${details.transferCurrency || 'USD'}`
          } else if (project.payment_method === 'p2p') {
            requisiteText = `\n\nüí≥ –ö–∞—Ä—Ç–∞ –¥–ª—è P2P:\n‚Ä¢ –ë–∞–Ω–∫: ${req.bank || '-'}\n‚Ä¢ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: ${req.card_number || '-'}\n‚Ä¢ –î–µ—Ä–∂–∞—Ç–µ–ª—å: ${req.holder_name || '-'}`
          } else if (project.payment_method === 'crypto') {
            requisiteText = `\n\nü™ô –ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫:\n‚Ä¢ –ê–¥—Ä–µ—Å: ${req.address || '-'}\n‚Ä¢ –°–µ—Ç—å: ${req.network || '-'}`
          }
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:', error)
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram
      const response = await fetch('/api/telegram/send-supplier-receipt-request', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          projectId: project.id,
          email: project.email || 'email@example.com',
          companyName: project.company_data?.name || '–ü—Ä–æ–µ–∫—Ç',
          amount: project.amount || 0,
          currency: project.currency || 'USD',
          paymentMethod: project.payment_method || 'bank-transfer',
          requisites: requisiteText
        })
      })
      
      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞')
      }
      
      console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ')
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ waiting_manager_receipt
      await supabase
        .from('projects')
        .update({ 
          status: 'waiting_manager_receipt',
          updated_at: new Date().toISOString()
        })
        .eq('id', project.id)
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É:', error)
      setIsRequestSent(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  const getUserTemplates = () => {
    console.log('üìã [getUserTemplates] –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã:', {
      templates: templates,
      loading: templatesLoading,
      error: templatesError,
      length: templates?.length || 0
    });
    
    if (!templates || templates.length === 0) {
      console.log('üìã [getUserTemplates] –®–∞–±–ª–æ–Ω—ã –ø—É—Å—Ç—ã');
      return []
    }
    
    const mappedTemplates = templates.map(template => ({
      id: template.id,
      name: template.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      description: template.description || '–®–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∞',
      availableSteps: [1, 2], // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —à–∞–±–ª–æ–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —à–∞–≥–∏ 1 –∏ 2
      lastUsed: template.updated_at ? new Date(template.updated_at).toLocaleDateString('ru-RU') : '–ù–µ–¥–∞–≤–Ω–æ'
    }));
    
    console.log('üìã [getUserTemplates] –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:', mappedTemplates);
    return mappedTemplates;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
  const getSupplierDataFromCatalog = (supplierId: string) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('–ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierId)
    
    // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã
    const mockSupplierData = {
      "supplier-1": {
        bank_name: "–°–±–µ—Ä–±–∞–Ω–∫ –†–æ—Å—Å–∏–∏",
        account_number: "40702810123456789012",
        swift: "SABRRUMM",
        payment_method: "bank-transfer",
        name: "–û–û–û –¢–µ—Ö–Ω–æ–°–Ω–∞–±",
        contact_email: "info@technosnab.ru",
        contact_phone: "+7 (495) 123-45-67"
      },
      "supplier-2": {
        bank_name: "–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫",
        account_number: "40702810987654321098",
        swift: "TICSRUMM",
        payment_method: "bank-transfer",
        name: "–û–û–û –≠–ª–µ–∫—Ç—Ä–æ–∏–º–ø–æ—Ä—Ç",
        contact_email: "sales@electroimport.ru",
        contact_phone: "+7 (812) 987-65-43"
      },
      "echo-supplier-1": {
        bank_name: "–≠—Ö–æ –ë–∞–Ω–∫",
        account_number: "40702810111111111111",
        swift: "ECHORUMM",
        payment_method: "bank-transfer",
        name: "–û–û–û –≠—Ö–æ –ü–æ—Å—Ç–∞–≤—â–∏–∫",
        contact_email: "echo@supplier.ru",
        contact_phone: "+7 (495) 111-11-11"
      }
    }
    
    return mockSupplierData[supplierId as keyof typeof mockSupplierData] || null
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
  const getSupplierProducts = (supplierId: string) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('–ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierId)
    
    // –ú–æ–∫–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
    const mockSupplierProducts = {
      "supplier-1": [
        {
          name: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
          quantity: 100,
          price: 150,
          unit: "—à—Ç",
          supplier_id: "supplier-1"
        },
        {
          name: "–ú–∏–∫—Ä–æ—Å—Ö–µ–º—ã",
          quantity: 50,
          price: 300,
          unit: "—à—Ç", 
          supplier_id: "supplier-1"
        }
      ],
      "supplier-2": [
        {
          name: "–ü—Ä–æ–≤–æ–¥–Ω–∏–∫–∏",
          quantity: 200,
          price: 25,
          unit: "–º",
          supplier_id: "supplier-2"
        },
        {
          name: "–ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä—ã",
          quantity: 75,
          price: 80,
          unit: "—à—Ç",
          supplier_id: "supplier-2"
        }
      ],
      "echo-supplier-1": [
        {
          name: "–≠—Ö–æ —Ç–æ–≤–∞—Ä 1",
          quantity: 10,
          price: 1000,
          unit: "—à—Ç",
          supplier_id: "echo-supplier-1"
        },
        {
          name: "–≠—Ö–æ —Ç–æ–≤–∞—Ä 2",
          quantity: 5,
          price: 2000,
          unit: "—à—Ç",
          supplier_id: "echo-supplier-1"
        }
      ]
    }
    
    return mockSupplierProducts[supplierId as keyof typeof mockSupplierProducts] || []
  }

  // –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–æ–≤ IV –∏ V –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–∞ II
  const autoFillStepsFromSupplier = async (stepData: any) => {
    console.log('=== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –®–ê–ì–û–í IV –∏ V ===')
    console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', stepData)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –¥–∞–Ω–Ω—ã—Ö
    if (stepData && stepData.items && stepData.items.length > 0) {
      console.log('–ù–∞–π–¥–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã:', stepData.items)
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
      const firstItem = stepData.items[0]
      
      // –ò—â–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –ø–æ supplier
      if (stepData.supplier) {
        console.log('üîç –ò—â–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', stepData.supplier)
        
        const echoData = await getEchoSupplierData(stepData.supplier)
        
        if (echoData) {
          console.log('üé≠ –ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ:', echoData)
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
          setEchoDataModal({
            show: true,
            supplierName: stepData.supplier,
            echoData: echoData,
            projectInfo: echoData.project_info
          })
          
          console.log('üìã –ü–æ–∫–∞–∑–∞–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏')
          return true
        } else {
          console.log('‚ùå –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', stepData.supplier)
          console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —à–∞–≥–∏ 4 –∏ 5')
          return false
        }
      } else {
        console.log('‚ùå supplier –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö')
        return false
      }
    } else {
      console.log('‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∞–Ω–Ω—ã—Ö')
      return false
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–∞ II –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–æ–≤ IV –∏–ª–∏ V
  const autoFillStepFromRequisites = (stepData: any, stepId: number) => {
    console.log(`=== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –®–ê–ì–ê II –ù–ê –û–°–ù–û–í–ï –®–ê–ì–ê ${stepId} ===`)
    console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', stepData)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ supplier_id –≤ –¥–∞–Ω–Ω—ã—Ö
    let supplierId = stepData.supplier_id
    if (!supplierId) {
      console.log('supplier_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–∞', stepId)
      return false
    }
    
    console.log('–ù–∞–π–¥–µ–Ω supplier_id:', supplierId)
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    const supplierData = getSupplierDataFromCatalog(supplierId)
    
    if (supplierData) {
      console.log('–î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∞–π–¥–µ–Ω—ã:', supplierData)
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –∫–∞—Ç–∞–ª–æ–≥—É)
      const supplierProducts = getSupplierProducts(supplierId)
      
      if (supplierProducts && supplierProducts.length > 0) {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —à–∞–≥ II (—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤)
        setManualData(prev => ({
          ...prev,
          2: {
            supplier: supplierData.name,
            currency: 'RUB',
            items: supplierProducts.map(product => ({
              ...product,
              supplier_id: supplierId
            })),
            auto_filled: true
          }
        }))
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–≥–∞ II
        setStepConfigs(prev => ({
          ...prev,
          2: "catalog"
        }))
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏
        setAutoFillNotification({
          show: true,
          message: `–¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é`,
          supplierName: supplierData.name,
          filledSteps: [2]
        })
        
        // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
          setAutoFillNotification(null)
        }, 5000)
        
        // üîÑ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ 4-5 –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
        console.log('üîç [AUTO-FILL FROM CATALOG] –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierData.name)
        console.log('üö® [AUTO-FILL FROM CATALOG] –≠—Ç–æ—Ç –ª–æ–≥ –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –í–°–ï–ì–î–ê!')
        alert(`üö® [AUTO-FILL] –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è: ${supplierData.name}`)
        getEchoSupplierData(supplierData.name).then(echoData => {
          if (echoData) {
            console.log('‚úÖ [AUTO-FILL FROM CATALOG] –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', echoData)
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º Step IV (–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã)
            setManualData(prev => ({
              ...prev,
              4: {
                payment_method: echoData.payment_method?.method || 'bank_transfer',
                auto_filled: true,
                supplier_name: supplierData.name,
                echo_source: echoData.project_info?.project_name,
                user_choice: true
              }
            }))
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º Step V (–†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)  
            setManualData(prev => ({
              ...prev,
              5: {
                supplier_name: supplierData.name,
                requisites: echoData.requisites || {},
                auto_filled: true,
                echo_source: echoData.project_info?.project_name,
                user_choice: true
              }
            }))
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–≥–æ–≤ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
            setStepConfigs(prev => ({
              ...prev,
              4: 'echoData',
              5: 'echoData'
            }))
            
            console.log('‚úÖ [AUTO-FILL FROM CATALOG] –®–∞–≥–∏ 4-5 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞')
          } else {
            console.log('‚ùå [AUTO-FILL FROM CATALOG] –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:', supplierData.name)
          }
        }).catch(error => {
          console.error('‚ùå [AUTO-FILL FROM CATALOG] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
        })
        
        console.log('‚úÖ –®–∞–≥ II –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω —Ç–æ–≤–∞—Ä–∞–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
        return true
      } else {
        console.log('‚ùå –¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      }
    } else {
      console.log('‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è ID:', supplierId)
    }
    return false
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞
  const getTemplateDataForStep = async (stepId: number) => {
    console.log('–ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —à–∞–≥–∞:', stepId)
    
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–∑ —Ö—É–∫–∞
      if (!templates || templates.length === 0) {
        console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤')
        return null
      }
      
      console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:', templates.length)
      
      // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä)
      const template = templates[0]
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞
      switch (stepId) {
        case 1: // –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
          return {
            name: template.company_name || '',
            legalName: template.company_legal || '',
            inn: template.company_inn || '',
            kpp: template.company_kpp || '',
            ogrn: template.company_ogrn || '',
            address: template.company_address || '',
            bankName: template.company_bank || '',
            bankAccount: template.company_account || '',
            bankCorrAccount: template.company_corr || '',
            bankBik: template.company_bik || '',
            email: template.company_email || '',
            phone: template.company_phone || '',
            website: template.company_website || ''
          }
          
        case 2: // –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
          return {
            supplier: template.supplier_name || '',
            currency: template.currency || 'RUB',
            items: template.specification || []
          }
          
        default:
          return null
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞:', error)
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞')
    }
  }



  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
  const getEchoSupplierData = async (supplierName: string) => {
    console.log('üîç –ü–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierName)
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–µ—Å—Å–∏–∏
      const { data: { user } } = await supabase.auth.getUser()
      
      if (!user) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
        return null
      }
      
      // 1. –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–µ–∫—Ç—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö
      const { data: specifications, error: specsError } = await supabase
        .from("project_specifications")
        .select(`project_id, supplier_name, created_at`)
        .eq("user_id", user.id)
        .ilike("supplier_name", `%${supplierName}%`)
        .order("created_at", { ascending: false })
      
      if (specsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π:', specsError)
        return null
      }
      
      if (!specifications || specifications.length === 0) {
        console.log('‚ùå –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
        return null
      }
      
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏:', specifications.length)
      
      // 2. –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–µ–∫—Ç–æ–≤
      const projectIds = specifications.map(s => s.project_id)
      
      // 3. –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è —ç—Ç–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
      const { data: projectRequisites, error: requisitesError } = await supabase
        .from("project_requisites")
        .select(`project_id, type, data, created_at`)
        .in("project_id", projectIds)
        .eq("user_id", user.id)
        .order("created_at", { ascending: false })
      
      if (requisitesError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:', requisitesError)
        return null
      }
      
      if (!projectRequisites || projectRequisites.length === 0) {
        console.log('‚ùå –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
        return null
      }
      
      // 4. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
      const { data: projects, error: projectsError } = await supabase
        .from("projects")
        .select(`id, name, payment_method, status, amount, currency, created_at, updated_at`)
        .in("id", projectIds)
        .eq("user_id", user.id)
        .order("updated_at", { ascending: false })
      
      if (projectsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤:', projectsError)
        return null
      }
      
      // 5. –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
      console.log('üîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:')
      
      // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
      const projectsMap = new Map(projects.map(p => [p.id, p]))
      
      // –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç —Å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–ª–Ω—ã–º–∏ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      let bestProject = null
      let bestRequisite = null
      let bestScore = 0
      
      for (const requisite of projectRequisites) {
        const project = projectsMap.get(requisite.project_id)
        if (!project) continue
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ —Ç–∏–ø–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
        const paymentMethodMap: { [key: string]: string } = {
          'bank-transfer': 'bank',
          'p2p': 'p2p',
          'crypto': 'crypto'
        }
        
        const expectedRequisiteType = paymentMethodMap[project.payment_method] || 'bank'
        const actualRequisiteType = requisite.type
        
        // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
        if (expectedRequisiteType !== actualRequisiteType) {
          console.log(`‚ùå –ü–†–û–ü–£–°–ö–ê–ï–ú –ø—Ä–æ–µ–∫—Ç "${project.name}": –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï payment_method="${project.payment_method}" vs —Ç–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤="${actualRequisiteType}"`)
          continue // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
        }
        
        // –í—ã—á–∏—Å–ª—è–µ–º "—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å" –ø—Ä–æ–µ–∫—Ç–∞
        let score = 0
        
        // –ë–∞–∑–æ–≤—ã–π –±–∞–ª–ª –∑–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        score += 10
        
        // –ë–æ–Ω—É—Å –∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –∏ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã (—Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ +50)
        score += 50
        console.log(`‚úÖ –ü—Ä–æ–µ–∫—Ç "${project.name}": payment_method="${project.payment_method}" —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–∏–ø—É —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤="${actualRequisiteType}"`)
        
        // –ë–æ–Ω—É—Å –∑–∞ –±–æ–ª–µ–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
        const daysSinceUpdate = (Date.now() - new Date(project.updated_at).getTime()) / (1000 * 60 * 60 * 24)
        if (daysSinceUpdate < 30) score += 20
        else if (daysSinceUpdate < 90) score += 10
        
        // –ë–æ–Ω—É—Å –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
        if (project.status === 'completed') score += 15
        
        // –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–æ–µ–∫—Ç—ã —Å —Å—É–º–º–æ–π
        if (project.amount && project.amount > 0) score += 5
        
        console.log(`üìä –ü—Ä–æ–µ–∫—Ç "${project.name}": —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å = ${score}`)
        
        if (score > bestScore) {
          bestScore = score
          bestProject = project
          bestRequisite = requisite
        }
      }
      
      if (!bestProject || !bestRequisite) {
        console.log('‚ùå –ü–æ–¥—Ö–æ–¥—è—â–∏–π –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
        return null
      }
      
      // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
      const finalPaymentMethodMap: { [key: string]: string } = {
        'bank-transfer': 'bank',
        'p2p': 'p2p',
        'crypto': 'crypto'
      }
      
      const finalExpectedType = finalPaymentMethodMap[bestProject.payment_method] || 'bank'
      const finalActualType = bestRequisite.type
      
      if (finalExpectedType !== finalActualType) {
        console.error(`üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç "${bestProject.name}" –∏–º–µ–µ—Ç –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ!`)
        console.error(`   –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${bestProject.payment_method} (–æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–∏–ø: ${finalExpectedType})`)
        console.error(`   –¢–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤: ${finalActualType}`)
        console.error(`   –ù–ï –í–û–ó–í–†–ê–©–ê–ï–ú –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–£–Æ–©–ò–ï –î–ê–ù–ù–´–ï!`)
        return null
      }
      
      const requisiteData = bestRequisite.data
      
      console.log('‚úÖ –í—ã–±—Ä–∞–Ω –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç:', bestProject.name)
      console.log('üìã –î–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞:', requisiteData)
      console.log('üìã –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞:', bestProject)
      console.log('üîç –¢–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–∞:', bestRequisite.type)
      console.log('üîç –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞:', bestProject.payment_method)
      console.log('üèÜ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å:', bestScore)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ —Ç–∏–ø–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
      const paymentMethodMap: { [key: string]: string } = {
        'bank-transfer': 'bank',
        'p2p': 'p2p',
        'crypto': 'crypto'
      }
      
      const expectedRequisiteType = paymentMethodMap[bestProject.payment_method] || 'bank'
      const actualRequisiteType = bestRequisite.type
      
      if (expectedRequisiteType !== actualRequisiteType) {
        console.warn(`‚ö†Ô∏è –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï: –ü—Ä–æ–µ–∫—Ç –∏–º–µ–µ—Ç payment_method="${bestProject.payment_method}" (–æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–∏–ø="${expectedRequisiteType}"), –Ω–æ —Ä–µ–∫–≤–∏–∑–∏—Ç –∏–º–µ–µ—Ç —Ç–∏–ø="${actualRequisiteType}"`)
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
      let requisites: any = {}
      
      if (actualRequisiteType === 'bank') {
        requisites = {
          bankName: requisiteData.bankName || requisiteData.details?.bankName || '–ë–∞–Ω–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
          accountNumber: requisiteData.accountNumber || requisiteData.details?.accountNumber || '****0000',
          swift: requisiteData.swift || requisiteData.details?.swift || 'PHANTOM',
          recipientName: requisiteData.recipientName || requisiteData.details?.recipientName || '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
          supplier_id: `phantom-${bestProject.id}`
        }
      } else if (actualRequisiteType === 'p2p') {
        requisites = {
          card_bank: requisiteData.bank || requisiteData.details?.bank || '–ë–∞–Ω–∫ –∫–∞—Ä—Ç—ã',
          card_number: requisiteData.card_number || requisiteData.details?.card_number || '****0000',
          card_holder: requisiteData.holder_name || requisiteData.details?.holder_name || '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
          supplier_id: `phantom-${bestProject.id}`
        }
      } else if (actualRequisiteType === 'crypto') {
        requisites = {
          crypto_network: requisiteData.network || requisiteData.details?.network || 'BTC',
          crypto_address: requisiteData.address || requisiteData.details?.address || '–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞',
          supplier_id: `phantom-${bestProject.id}`
        }
      }
      
      const result = {
        // –®–∞–≥ IV: –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        payment_method: {
          method: bestProject.payment_method || 'bank-transfer',
          supplier_id: `phantom-${bestProject.id}`
        },
        
        // –®–∞–≥ V: –†–µ–∫–≤–∏–∑–∏—Ç—ã (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞)
        requisites: {
          ...requisites,
          type: actualRequisiteType // –Ø–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
        },
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        project_info: {
          project_name: bestProject.name,
          project_date: bestProject.updated_at,
          amount: bestProject.amount,
          currency: bestProject.currency,
          status: bestProject.status
        }
      }
      
      console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ getEchoSupplierData:')
      console.log('  - –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', result.payment_method)
      console.log('  - –¢–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:', result.requisites.type)
      console.log('  - –†–µ–∫–≤–∏–∑–∏—Ç—ã:', result.requisites)
      console.log('  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è:', result.payment_method.method === 'crypto' && result.requisites.type === 'crypto' ? '‚úÖ –ö–†–ò–ü–¢–û' : 
                                                      result.payment_method.method === 'p2p' && result.requisites.type === 'p2p' ? '‚úÖ P2P' :
                                                      result.payment_method.method === 'bank-transfer' && result.requisites.type === 'bank' ? '‚úÖ –ë–ê–ù–ö' : '‚ùå –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï')
      
      return result
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error)
      return null
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞
  const getProfileData = async (stepId: number) => {
    console.log('üîç –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —à–∞–≥–∞:', stepId)
    
    if (stepId === 1) {
      // –î–ª—è —à–∞–≥–∞ 1 (–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏) –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞
      if (clientProfilesLoading) {
        console.log('‚è≥ –ü—Ä–æ—Ñ–∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...')
        return null
      }
      
      if (!clientProfiles || clientProfiles.length === 0) {
        console.log('‚ùå –ù–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤')
        return null
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ –Ω–µ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
      if (clientProfiles.length > 1 && !selectedProfileId) {
        console.log('üîç –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä')
        setShowProfileSelector(true)
        return null
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
      let targetProfile
      if (selectedProfileId) {
        targetProfile = clientProfiles.find(p => p.id === selectedProfileId)
      } else {
        targetProfile = clientProfiles.find(p => p.is_default) || clientProfiles[0]
      }
      
      if (!targetProfile) {
        console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞')
        return null
      }
      
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞:', targetProfile.name)
      
      return {
        name: targetProfile.name,
        legalName: targetProfile.legal_name || '',
        inn: targetProfile.inn || '',
        kpp: targetProfile.kpp || '',
        ogrn: targetProfile.ogrn || '',
        address: targetProfile.legal_address || '',
        bankName: targetProfile.bank_name || '',
        bankAccount: targetProfile.bank_account || '',
        bankCorrAccount: targetProfile.corr_account || '',
        bankBik: targetProfile.bik || '',
        email: targetProfile.email || '',
        phone: targetProfile.phone || '',
        website: targetProfile.website || ''
      }
    }
    
    // –î–ª—è —à–∞–≥–æ–≤ 2, 4, 5 –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
    if ([2, 4, 5].includes(stepId)) {
      if (supplierProfilesLoading) {
        console.log('‚è≥ –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...')
        return null
      }
      
      if (!supplierProfiles || supplierProfiles.length === 0) {
        console.log('‚ùå –ù–µ—Ç –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤')
        return null
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ –Ω–µ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
      if (supplierProfiles.length > 1 && !selectedSupplierProfileId) {
        console.log('üîç –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä')
        setShowSupplierProfileSelector(true)
        return null
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
      let targetProfile
      if (selectedSupplierProfileId) {
        targetProfile = supplierProfiles.find(p => p.id === selectedSupplierProfileId)
      } else {
        targetProfile = supplierProfiles.find(p => p.is_default) || supplierProfiles[0]
      }
      
      if (!targetProfile) {
        console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
        return null
      }
      
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', targetProfile.name)
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∞–≥–∞
      if (stepId === 2) {
        // –®–∞–≥ 2: –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –≤–∞–ª—é—Ç–∞
        return {
          supplier: targetProfile.name,
          currency: targetProfile.transfer_currency || 'USD'
        }
      } else if (stepId === 4) {
        // –®–∞–≥ 4: –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã
        return {
          method: targetProfile.payment_methods || 'bank-transfer'
        }
      } else if (stepId === 5) {
        // –®–∞–≥ 5: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
        return {
          bankName: targetProfile.bank_name || '',
          accountNumber: targetProfile.account_number || '',
          swift: targetProfile.swift || '',
          iban: targetProfile.iban || '',
          recipientName: targetProfile.recipient_name || '',
          transferCurrency: targetProfile.transfer_currency || 'USD',
          paymentPurpose: targetProfile.payment_purpose || ''
        }
      }
    }
    
    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤ –ø–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    console.log('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —à–∞–≥–∞', stepId, '–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã')
    return null
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞ (—Å–∏–º—É–ª—è—Ü–∏—è)
  const getTemplateData = (templateId: string) => {
    // –ù–∞—Ö–æ–¥–∏–º —Ä–µ–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const template = templates?.find(t => t.id === templateId)
    
    if (!template) {
      console.error('–®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω:', templateId)
      return null
    }
    
    console.log('=== –î–ê–ù–ù–´–ï –®–ê–ë–õ–û–ù–ê –î–õ–Ø –°–ü–ï–¶–ò–§–ò–ö–ê–¶–ò–ò ===')
    console.log('template:', template)
    console.log('template.items:', template.items)
    console.log('template.specification:', template.specification)
    console.log('template.data?.specification:', template.data?.specification)
    
    return {
      id: template.id,
      name: template.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      availableSteps: [1, 2], // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —à–∞–±–ª–æ–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —à–∞–≥–∏ 1 –∏ 2
              data: {
          1: {
            name: template.company_name || '',
            legalName: template.company_legal_name || '',
            inn: template.company_inn || '',
            kpp: template.company_kpp || '',
            ogrn: template.company_ogrn || '',
            address: template.company_address || '',
            bankName: template.company_bank || '',
            bankAccount: template.company_account || '',
            bankCorrAccount: template.company_corr_account || template.company_corr || '',
            bankBik: template.company_bik || '',
            email: template.company_email || '',
            phone: template.company_phone || '',
            website: template.company_website || ''
          },
        2: {
          supplier: template.supplier_name || template.data?.supplier_name || template.data?.supplier || '',
          currency: template.currency || 'RUB',
          items: template.items || template.specification || template.data?.specification || []
        }
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —à–∞–≥—É
  const applyTemplateStep = (stepId: number, templateData: any) => {
    console.log(`=== –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –®–ê–ë–õ–û–ù–ê –î–õ–Ø –®–ê–ì–ê ${stepId} ===`)
    console.log('templateData:', templateData)
    console.log('templateData.data:', templateData.data)
    console.log(`templateData.data[${stepId}]:`, templateData.data[stepId as keyof typeof templateData.data])
    
    if (templateData.data[stepId as keyof typeof templateData.data]) {
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞
      setStepConfigs(prev => ({
        ...prev,
        [stepId]: "template"
      }))
      const stepData = templateData.data[stepId as keyof typeof templateData.data]
      setManualData(prev => ({
        ...prev,
        [stepId]: stepData
      }))
      setSelectedSource(null)
      setTemplateStepSelection(null)
      console.log(`‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —à–∞–≥–∞ ${stepId}:`, stepData)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ —à–∞–≥ II)
      if (stepId === 2) {
        autoFillStepsFromSupplier(stepData)
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ —à–∞–≥–∏ IV –∏–ª–∏ V)
      if (stepId === 4 || stepId === 5) {
        autoFillStepFromRequisites(stepData, stepId)
      }
    } else {
      console.log(`‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —à–∞–≥–∞ ${stepId}`)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —à–∞–±–ª–æ–Ω–∞
  const handleTemplateSelect = (templateId: string) => {
    const templateData = getTemplateData(templateId)
    if (!templateData) return
    
    const availableSteps = templateData.availableSteps
    
    // –ï—Å–ª–∏ —à–∞–±–ª–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    if (availableSteps.length > 1) {
      setTemplateStepSelection({
        templateId: templateId,
        availableSteps: availableSteps
      })
      setTemplateSelection(false)
    } else if (availableSteps.length === 1) {
      // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —à–∞–≥, –ø—Ä–∏–º–µ–Ω—è–µ–º –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      applyTemplateStep(availableSteps[0], templateData)
      setTemplateSelection(false)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —à–∞–≥–∞ –≤ —à–∞–±–ª–æ–Ω–µ
  const handleTemplateStepSelect = (stepId: number) => {
    if (templateStepSelection) {
      const templateData = getTemplateData(templateStepSelection.templateId)
      if (templateData) {
        applyTemplateStep(stepId, templateData)
      }
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —à–∞–≥–æ–≤ –∏–∑ —à–∞–±–ª–æ–Ω–∞
  const handleFillAllTemplateSteps = () => {
    if (templateStepSelection) {
      const templateData = getTemplateData(templateStepSelection.templateId)
      if (!templateData) return
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–≥–æ–≤
      templateStepSelection.availableSteps.forEach(stepId => {
        if (templateData.data[stepId as keyof typeof templateData.data]) {
          const stepData = templateData.data[stepId as keyof typeof templateData.data]
          setStepConfigs(prev => ({
            ...prev,
            [stepId]: "template"
          }))
          setManualData(prev => ({
            ...prev,
            [stepId]: stepData
          }))
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ —à–∞–≥ II)
          if (stepId === 2) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º setTimeout, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            setTimeout(async () => {
              await autoFillStepsFromSupplier(stepData)
            }, 100)
          }
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ (–µ—Å–ª–∏ —ç—Ç–æ —à–∞–≥–∏ IV –∏–ª–∏ V)
          if (stepId === 4 || stepId === 5) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º setTimeout, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            setTimeout(() => {
              autoFillStepFromRequisites(stepData, stepId)
            }, 100)
          }
        }
      })
      
      setSelectedSource(null)
      setTemplateStepSelection(null)
      console.log(`–ü—Ä–∏–º–µ–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —à–∞–≥–æ–≤: ${templateStepSelection.availableSteps.join(', ')}`)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∫—É–±–∏–∫
  const handleStepHover = (stepId: number) => {
    if (isStepEnabled(stepId)) {
      setHoveredStep(stepId)
      setLastHoveredStep(stepId)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫—É–±–∏–∫—É (—Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã–±–æ—Ä –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ Block 2)
  const handleStepClick = (stepId: number) => {
    console.log(`üñ±Ô∏è –ö–ª–∏–∫ –ø–æ —à–∞–≥—É ${stepId}`)
    console.log(`üìä manualData[${stepId}]:`, manualData[stepId])
    console.log(`üìä stepConfigs[${stepId}]:`, stepConfigs[stepId])
    
    // –î–ª—è —à–∞–≥–æ–≤ 4 –∏ 5: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
    if (stepId === 4 || stepId === 5) {
      console.log(`üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫ –ø–æ —à–∞–≥—É ${stepId}`)
      
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏—á–µ–≥–æ (–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –±–ª–æ–∫–µ 2)
      if (manualData[stepId]?.user_choice && stepConfigs[stepId] === 'echoData') {
        console.log('‚úÖ –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã, –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –±–ª–æ–∫–µ 2')
        return
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ
      if (manualData[stepId]?.echo_data) {
        console.log('üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏')
        setEchoDataModal({
          show: true,
          supplierName: manualData[stepId]?.supplier_name || '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
          echoData: manualData[stepId]?.echo_data,
          projectInfo: manualData[stepId]?.echo_data?.project_info
        })
        return
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–∏—Å–∫
      console.log('üìã –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö')
      
      // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–∞ 2
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–≥–∞ 2:')
      console.log('manualData[2]:', manualData[2])
      console.log('stepConfigs[2]:', stepConfigs[2])
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —à–∞–≥–∞ 2
      const step2Data = manualData[2]
      console.log('üîç step2Data:', step2Data)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Å—Ç–∞, –≥–¥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å supplier
      let supplierName = null
      if (step2Data) {
        if (step2Data.supplier) {
          supplierName = step2Data.supplier
          console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ step2Data.supplier:', supplierName)
        } else if (step2Data.items && step2Data.items.length > 0) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
          const firstItem = step2Data.items[0]
          console.log('üîç –ü–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä:', firstItem)
          if (firstItem.supplier_name) {
            supplierName = firstItem.supplier_name
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ –ø–µ—Ä–≤–æ–º —Ç–æ–≤–∞—Ä–µ:', supplierName)
          } else if (firstItem.supplier) {
            supplierName = firstItem.supplier
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω supplier –≤ –ø–µ—Ä–≤–æ–º —Ç–æ–≤–∞—Ä–µ (supplier):', supplierName)
          }
        }
      }
      
      if (supplierName) {
        console.log('üîç –ò—â–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierName)
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
        setEchoDataLoading(true)

        getEchoSupplierData(supplierName).then(echoData => {
          if (echoData) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ')
            setEchoDataModal({
              show: true,
              supplierName: supplierName,
              echoData: echoData,
              projectInfo: echoData.project_info
            })
          } else {
            console.log('‚ùå –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ')
            alert(`–≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ "${supplierName}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç —Å —ç—Ç–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö.`)
          }
        }).catch(error => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö:', error)
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö: ' + (error as Error).message)
        }).finally(() => {
          // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
          setEchoDataLoading(false)
        })
      } else {
        console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ —à–∞–≥–µ 2')
        console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è –≤ step2Data:', step2Data ? Object.keys(step2Data) : 'step2Data is null')
        alert('–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —à–∞–≥ 2 (—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è) —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ.')
      }
      
      return
    }
    
    // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ hover
    handleStepHover(stepId)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const handleSourceSelect = (source: string) => {
    if (lastHoveredStep) {
      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (source === "template") {
        setTemplateSelection(true)
        return
      }
      
      // –î–ª—è –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É
      setStepConfigs(prev => ({
        ...prev,
        [lastHoveredStep]: source
      }))
      setSelectedSource(source)
      
      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–∞—Ç–∞–ª–æ–≥, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞–ø—Ä—è–º—É—é
      if (source === "catalog") {
        console.log("–í—ã–±—Ä–∞–Ω –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —à–∞–≥–∞", lastHoveredStep)
        setShowCatalogModal(true)
        return
      }
      
      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º OCR —Ñ–æ—Ä–º—É
      if (source === "upload") {
        console.log("–í—ã–±—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —à–∞–≥–∞", lastHoveredStep)
        setSelectedSource("upload")
        return
      }
      
      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å, –ø—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
      if (source === "profile") {
        console.log('üîç –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —à–∞–≥–∞:', lastHoveredStep)
        getProfileData(lastHoveredStep).then(profileData => {
        if (profileData) {
          setManualData(prev => ({
            ...prev,
            [lastHoveredStep]: profileData
          }))
            console.log(`‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —à–∞–≥–∞ ${lastHoveredStep}`)
          } else {
            console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è —à–∞–≥–∞ ${lastHoveredStep}`)
        }
        }).catch(error => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è:', error)
        })
      }
      
      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã —à–∞–±–ª–æ–Ω—ã, –ø—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤
      if (source === "template") {
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
          if (!templates || templates.length === 0) {
            setTemplateError('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤. –°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç".')
            return
          }
          
          // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω
          const template = templates[0]
          let templateData = null
          
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞
          if (lastHoveredStep === 1) {
            templateData = {
              name: template.company_name || '',
              legalName: template.company_legal || '',
              inn: template.company_inn || '',
              kpp: template.company_kpp || '',
              ogrn: template.company_ogrn || '',
              address: template.company_address || '',
              bankName: template.company_bank || '',
              bankAccount: template.company_account || '',
              bankCorrAccount: template.company_corr || '',
              bankBik: template.company_bik || '',
              email: template.company_email || '',
              phone: template.company_phone || '',
              website: template.company_website || ''
            }
          } else if (lastHoveredStep === 2) {
            templateData = {
              supplier: template.supplier_name || '',
              currency: template.currency || 'RUB',
              items: template.specification || []
            }
          }
          
          if (templateData) {
            setManualData(prev => ({
              ...prev,
              [lastHoveredStep]: templateData
            }))
            console.log(`‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —à–∞–≥–∞ ${lastHoveredStep}`)
            
            // –ï—Å–ª–∏ —ç—Ç–æ —à–∞–≥ II (—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è), –∏—â–µ–º —Ñ–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
            if (lastHoveredStep === 2 && templateData.supplier) {
              console.log('üîç –ò—â–µ–º —Ñ–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', templateData.supplier)
              
                      getEchoSupplierData(templateData.supplier).then(echoData => {
          if (echoData) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ:', echoData)
                  
                  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —à–∞–≥–∏ IV –∏ V —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏
                  setManualData(prev => ({
                    ...prev,
                    4: echoData.payment_method,
                    5: echoData.requisites
                  }))
                  
                  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                  setStepConfigs(prev => ({
                    ...prev,
                    4: "echoData",
                    5: "echoData"
                  }))
                  
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                  setAutoFillNotification({
                    show: true,
                    message: `–ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ "${echoData.project_info.project_name}" (${echoData.project_info.status})`,
                    supplierName: templateData.supplier,
                    filledSteps: [4, 5]
                  })
                  
                  setTimeout(() => {
                    setAutoFillNotification(null)
                  }, 5000)
                } else {
                  console.log('‚ùå –§–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
                }
              }).catch(error => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö:', error)
              })
            }
          } else {
            setTemplateError(`–®–∞–±–ª–æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–≥–∞ ${lastHoveredStep}`)
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞:', error)
          setTemplateError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–∞')
        }
      }
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞
  const getCurrentStage = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ —ç—Ç–∞–ø–∞ 1
    const step1Filled = isStepFilledByUser(1)
    const step2Filled = isStepFilledByUser(2)
    const step4Filled = isStepFilledByUser(4)
    const step5Filled = isStepFilledByUser(5)
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç—Ç–∞–ø–∞:', { step1Filled, step2Filled, step4Filled, step5Filled })
    
    const stage1Completed = step1Filled && step2Filled && step4Filled && step5Filled
    
    if (stage1Completed && currentStage === 1) {
      console.log('‚úÖ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2')
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —ç—Ç–∞–ø–∞ 1
      setTimeout(() => {
        console.log('üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —ç—Ç–∞–ø–∞ 1')
        checkSummaryReadiness()
      }, 100)
      
      return 2 // –≠—Ç–∞–ø 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    } else {
      console.log('‚è≥ –≠—Ç–∞–ø 1 –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω –∏–ª–∏ —É–∂–µ –≤ —ç—Ç–∞–ø–µ 2')
      return currentStage // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
  const getActiveScenario = () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –≤ isStepFilledByUser
    if (isStepFilledByUser(1)) {
      return 'A'
    }
    
    if (isStepFilledByUser(2)) {
      return 'B1'
    }
    
    if (isStepFilledByUser(4) || isStepFilledByUser(5)) {
      return 'B2'
    }
    
    return 'none' // –°—Ü–µ–Ω–∞—Ä–∏–π –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–Ω–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏)
  const isStepFilledByUser = (stepId: number) => {
    // –®–∞–≥ 1: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –ò –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    if (stepId === 1) {
      const hasSource = stepConfigs[1] && stepConfigs[1] !== ''
      const hasData = manualData[1] && Object.keys(manualData[1]).length > 0
      const result = hasSource && hasData
      
      console.log(`üîç –®–∞–≥ 1: hasSource=${hasSource}, hasData=${hasData}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç=${result}`)
      console.log(`üîç stepConfigs[1]:`, stepConfigs[1])
      console.log(`üîç manualData[1]:`, manualData[1])
      
      return result
    }
    
    // –®–∞–≥ 2: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –ò –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã
    if (stepId === 2) {
      const hasSource = stepConfigs[2] && stepConfigs[2] !== ''
      const hasItems = manualData[2] && manualData[2].items && manualData[2].items.length > 0
      const result = hasSource && hasItems
      
      console.log(`üîç –®–∞–≥ 2: hasSource=${hasSource}, hasItems=${hasItems}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç=${result}`)
      console.log(`üîç stepConfigs[2]:`, stepConfigs[2])
      console.log(`üîç manualData[2]:`, manualData[2])
      
      return result
    }
    
    // –®–∞–≥ 3: —Å—á–∏—Ç–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –µ—Å–ª–∏ —á–µ–∫ –æ–¥–æ–±—Ä–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    if (stepId === 3) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º receiptApprovalStatus (–ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
      const result = receiptApprovalStatus === 'approved' || receiptApprovalStatus === 'waiting'
      
      console.log(`üîç –®–∞–≥ 3: receiptApprovalStatus=${receiptApprovalStatus}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç=${result}`)
      
      return result
    }
    
    // –®–∞–≥ 6: —Å—á–∏—Ç–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –µ—Å–ª–∏ –µ—Å—Ç—å —á–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    if (stepId === 6) {
      const result = hasManagerReceipt
      
      console.log(`üîç –®–∞–≥ 6: hasManagerReceipt=${hasManagerReceipt}, managerReceiptUrl=${managerReceiptUrl}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç=${result}`)
      console.log(`üîç –®–∞–≥ 6: projectRequestId=${projectRequestId}, currentStage=${currentStage}`)
      
      return result
    }
    
    // –®–∞–≥ 7: —Å—á–∏—Ç–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª —á–µ–∫ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤
    if (stepId === 7) {
      const result = !!clientReceiptUrl
      
      console.log(`üîç –®–∞–≥ 7: clientReceiptUrl=${clientReceiptUrl}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç=${result}`)
      
      return result
    }
    
    // –®–∞–≥–∏ 4, 5: —Å—á–∏—Ç–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –≤—ã–±—Ä–∞–ª (–≤–∫–ª—é—á–∞—è —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ)
    if (stepId === 4 || stepId === 5) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–∫–ª—é—á–∞—è –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ)
      const hasUserChoice = manualData[stepId] && manualData[stepId].user_choice
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
      const source = stepConfigs[stepId]
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
      const hasData = manualData[stepId] && Object.keys(manualData[stepId]).length > 0
      
      // –°—á–∏—Ç–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –µ—Å–ª–∏:
      // 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–Ω–æ –≤—ã–±—Ä–∞–ª (user_choice: true)
      // 2. –ò–õ–ò –µ—Å—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (–≤–∫–ª—é—á–∞—è echoData)
      // 3. –ò–õ–ò –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ manualData
      const result = hasUserChoice || source || hasData
      
      console.log(`üîç –®–∞–≥ ${stepId}: user_choice=${hasUserChoice}, source=${source}, hasData=${hasData}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç=${result}`)
      console.log(`üîç manualData[${stepId}]:`, manualData[stepId])
      return result
    }
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ —à–∞–≥–∏
    return stepConfigs[stepId] || manualData[stepId]
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
  const goToNextStage = async () => {
    console.log('üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É')
    console.log('  - –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø:', currentStage)
    console.log('  - stageTransitionShown:', stageTransitionShown)
    console.log('  - dontShowStageTransition:', dontShowStageTransition)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    if (showSummaryModal) {
      console.log('üìã –ú—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
      setShowSummaryModal(false)
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫—Ä—ã—Ç–æ')
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —ç—Ç–∞–ø—É 2 —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
      if (!stageTransitionShown && !dontShowStageTransition) {
        console.log('üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∞')
        setShowStageTransitionModal(true)
        setStageTransitionShown(true)
      } else {
        // –ï—Å–ª–∏ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ - —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2
        console.log('‚ö° –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2')
        await proceedToStage2()
      }
    } else if (currentStage === 2) {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 3: –ê–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏
      setCurrentStage(3)
      console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç—Ç–∞–ø—É 3: –ê–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏')
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–¥–µ–ª–∫–∏
      startDealAnimation()
    } else {
      console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞')
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —ç—Ç–∞–ø—É 2 (–ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞)
  const proceedToStage2 = async () => {
    console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç—Ç–∞–ø—É 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã')
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
    setShowStageTransitionModal(false)
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 2
    setCurrentStage(2)
    console.log('‚úÖ –≠—Ç–∞–ø –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 2')
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞
    setStageTransitionShown(false)
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –∞–ø—Ä—É–≤–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    setManagerApprovalStatus('pending')
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ pending')
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É (—Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫)
    console.log('üì§ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —ç—Ç–∞–ø—É 2')
    try {
      await handleSendToManager()
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É:', error)
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
      setManagerNotification({
        show: true,
        type: 'error',
        message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram, –Ω–æ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —ç—Ç–∞–ø—É 2 –≤—ã–ø–æ–ª–Ω–µ–Ω'
      })
    }
  }

  const openStageTransitionModal = () => {
    setShowStageTransitionModal(true)
    setStageTransitionShown(true)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–ø–µ
  const returnToStage1Editing = () => {
    console.log('üîÑ –í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–ø–µ')
    console.log('  - –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø –¥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞:', currentStage)
    console.log('  - showSummaryModal –¥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞:', showSummaryModal)
    console.log('  - showStageTransitionModal –¥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞:', showStageTransitionModal)
    
    setShowSummaryModal(false)
    setShowStageTransitionModal(false)
    setCurrentStage(1)
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞
    setStageTransitionShown(false)
    
    console.log('‚úÖ –í—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã, —ç—Ç–∞–ø —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 1, —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω—ã')
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏
  const startDealAnimation = () => {
    console.log('üé¨ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–¥–µ–ª–∫–∏...')
    setDealAnimationStep(0)
    setDealAnimationStatus('–ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é...')
    setDealAnimationComplete(false)
    
    // –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–∞—á–∏–Ω–∞—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ
    setTimeout(() => {
      setDealAnimationStep(1)
      setDealAnimationStatus('–ö–ª–∏–µ–Ω—Ç –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∏–¥—É—Ç –∫ —Ü–µ–Ω—Ç—Ä—É...')
    }, 1000)
    
    // –®–∞–≥ 2: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–≤–æ–¥
    setTimeout(() => {
      setDealAnimationStep(2)
      setDealAnimationStatus('–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–≤–æ–¥...')
    }, 3000)
    
    // –®–∞–≥ 3: –í—Å–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ
    setTimeout(() => {
      setDealAnimationStep(3)
      setDealAnimationStatus('–°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
      setDealAnimationComplete(true)
    }, 5000)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ç–µ–ø–µ—Ä–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  const startInfrastructureStepper = () => {
    console.log('üèóÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–µ–ø–µ—Ä –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...')
    setInfrastructureStepperStep(0)
    setInfrastructureStepperStatus('–ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...')
    
    // –®–∞–≥ 1: –î–æ–∫—É–º–µ–Ω—Ç—ã
    setTimeout(() => {
      setInfrastructureStepperStep(1)
      setInfrastructureStepperStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...')
    }, 1500)
    
    // –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
    setTimeout(() => {
      setInfrastructureStepperStep(2)
      setInfrastructureStepperStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤...')
    }, 3000)
    
    // –®–∞–≥ 3: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    setTimeout(() => {
      setInfrastructureStepperStep(3)
      setInfrastructureStepperStatus('–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞!')
    }, 4500)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
  const confirmRequisites = () => {
    console.log('‚úÖ –†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É —ç—Ç–∞–ø–∞ 2')
    setShowRequisitesConfirmationModal(false)
    setShowStage2SummaryModal(true)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
  const editRequisites = () => {
    console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤')
    setShowRequisitesConfirmationModal(false)
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —à–∞–≥–∞ 5 (—Ä–µ–∫–≤–∏–∑–∏—Ç—ã)
    setCurrentStage(1) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–µ—Ä–≤–æ–º—É —ç—Ç–∞–ø—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ç—Ä–µ—Ç—å–µ–º—É —ç—Ç–∞–ø—É
  const proceedToStage3 = () => {
    console.log('üé¨ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç—Ç–∞–ø—É 3: –ê–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏')
    setShowStage2SummaryModal(false)
    setCurrentStage(3)
    startDealAnimation()
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const getSourceDisplayName = (source: string) => {
    switch (source) {
      case 'profile':
        return '–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
      case 'template':
        return '–®–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∞'
      case 'catalog':
        return '–ö–∞—Ç–∞–ª–æ–≥ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤'
      case 'blue_room':
        return '–°–∏–Ω—è—è –∫–æ–º–Ω–∞—Ç–∞'
      case 'orange_room':
        return '–û—Ä–∞–Ω–∂–µ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞'
      case 'echo_cards':
        return '–≠—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏'
      case 'manual':
        return '–†—É—á–Ω–æ–π –≤–≤–æ–¥'
      case 'upload':
        return '–ó–∞–≥—Ä—É–∑–∏—Ç—å (Yandex Vision OCR)'
      case 'automatic':
        return '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
      default:
        return source || '–†—É—á–Ω–æ–π –≤–≤–æ–¥'
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —à–∞–≥–∞
  const isStepEnabled = (stepId: number) => {
    // –≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    if (currentStage === 1) {
      // –ê–∫—Ç–∏–≤–Ω—ã–µ —à–∞–≥–∏ –≤ —ç—Ç–∞–ø–µ 1: 1, 2, 4, 5
      if ([1, 2, 4, 5].includes(stepId)) {
        return true
      }
      
      // –ó–∞–∫—Ä—ã—Ç—ã–µ —à–∞–≥–∏ –≤ —ç—Ç–∞–ø–µ 1: 3, 6, 7
      if ([3, 6, 7].includes(stepId)) {
        return false
      }
    }
    
    // –≠—Ç–∞–ø 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    if (currentStage === 2) {
      // –í—Å–µ —à–∞–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —ç—Ç–∞–ø–µ 2
      return true
    }
    
    // –≠—Ç–∞–ø 3: –ê–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏
    if (currentStage === 3) {
      // –í—Å–µ —à–∞–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —ç—Ç–∞–ø–µ 3
      return true
    }
    
    return false
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  const getProgress = () => {
    // –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —à–∞–≥–∏, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–Ω–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏)
    const filledSteps = [1, 2, 3, 4, 5, 6, 7].filter(stepId => isStepFilledByUser(stepId)).length
    return Math.round((filledSteps / 7) * 100)
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤
    const getConfiguredStepsSummary = () => {
    const summary = []

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —à–∞–≥–∏
    for (let stepId = 1; stepId <= 7; stepId++) {
      const isFilled = isStepFilledByUser(stepId)

      if (isFilled) {
        const step = constructorSteps.find(s => s.id === stepId)
        const source = stepConfigs[stepId]

        const sourceInfo = source ? dataSources[source as keyof typeof dataSources] : null

        const item = {
          stepId: stepId,
          stepName: step?.name,
          sourceName: sourceInfo?.name || '–í—Ä—É—á–Ω—É—é',
          source: source,
          data: manualData[stepId]
        }

        summary.push(item)
      }
    }

    return summary.sort((a, b) => a.stepId - b.stepId)
  }

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø–æ–∫–∞–∑—É —Å–≤–æ–¥–∫–∏
  const checkSummaryReadiness = () => {
    const requiredSteps = [1, 2, 4, 5]
    const filledSteps = requiredSteps.filter(stepId => isStepFilledByUser(stepId))
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Å–≤–æ–¥–∫–µ:')
    console.log('  - –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø:', currentStage)
    console.log('  - –¢—Ä–µ–±—É–µ–º—ã–µ —à–∞–≥–∏:', requiredSteps)
    console.log('  - –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —à–∞–≥–∏:', filledSteps)
    console.log('  - manualData:', manualData)
    console.log('  - stepConfigs:', stepConfigs)
    
    // –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –µ—Å–ª–∏ –º—ã —É–∂–µ –Ω–∞ —ç—Ç–∞–ø–µ 2 –∏–ª–∏ –≤—ã—à–µ
    if (currentStage >= 2) {
      console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ - —É–∂–µ –Ω–∞ —ç—Ç–∞–ø–µ 2+')
      return
    }
    
    // –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    if (showSummaryModal || showStageTransitionModal) {
      console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ - —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞')
      return
    }
    
    requiredSteps.forEach(stepId => {
      const isFilled = isStepFilledByUser(stepId)
      console.log(`  - –®–∞–≥ ${stepId}: ${isFilled ? '‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω' : '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω'}`)
    })
    
    if (filledSteps.length === requiredSteps.length) {
      console.log('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É')
      setShowSummaryModal(true)
    } else {
      console.log(`‚ùå –ù–µ –≤—Å–µ —à–∞–≥–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã: ${filledSteps.length}/${requiredSteps.length}`)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
  const handleManualDataSave = (stepId: number, data: any) => {
    console.log('=== –°–û–•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• ===')
    console.log('stepId:', stepId)
    console.log('data –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', data)
    
    setManualData(prev => {
      console.log('–¢–µ–∫—É—â–∏–µ manualData:', prev)
      
      // –î–ª—è —à–∞–≥–∞ 1 –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏
      if (stepId === 1) {
        const existingData = prev[stepId] || {}
        const mergedData = { ...existingData, ...data }
        console.log('–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', mergedData)
        const newData = { ...prev, [stepId]: mergedData }
        
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–≤–æ–¥–∫–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ —ç—Ç–∞–ø–µ 2+)
      setTimeout(() => {
        if (currentStage < 2) {
          checkSummaryReadiness()
        }
      }, 100)
      return newData
      }
      
      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤ –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ–Ω—è–µ–º
      const newData = { ...prev, [stepId]: data }
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ IV –∏ V –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–∞ II
      if (stepId === 2) {
        autoFillStepsFromSupplier(data)
      }
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞ II –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–æ–≤ IV –∏–ª–∏ V
      if (stepId === 4 || stepId === 5) {
        autoFillStepFromRequisites(data, stepId)
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–≤–æ–¥–∫–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ —ç—Ç–∞–ø–µ 2+)
      setTimeout(() => {
        if (currentStage < 2) {
          checkSummaryReadiness()
        }
      }, 100)
      return newData
    })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
    setTimeout(() => {
      const currentStage = getCurrentStage()
      const previousStage = getCurrentStage() // –≠—Ç–æ –±—É–¥–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç—Ç–∞–ø
      
      if (currentStage === 2 && previousStage === 1) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —ç—Ç–∞–ø—É 2
        setAutoFillNotification({
          show: true,
          message: 'üéâ –≠—Ç–∞–ø 1 –∑–∞–≤–µ—Ä—à–µ–Ω! –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã —à–∞–≥–∏ 3, 6, 7 –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏.',
          supplierName: '',
          filledSteps: [3, 6, 7]
        })
      }
    }, 100)
    
    setSelectedSource(null) // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    setEditingType('') // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∏–ø —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
  const handleFileUpload = async (stepId: number, file: File) => {
    // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    setOcrAnalyzing(prev => ({ ...prev, [stepId]: true }));
    setOcrError(prev => ({ ...prev, [stepId]: '' }));
    
    try {
      console.log(`üîç –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –¥–ª—è —à–∞–≥–∞ ${stepId}:`, file.name)
      console.log(`üìÑ –¢–∏–ø —Ñ–∞–π–ª–∞: ${file.type}`)
      console.log(`üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${file.size} –±–∞–π—Ç`)
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤');
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º bucket –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∞–≥–∞
      const bucketMap = {
        1: 'step-a1-ready-company',    // –ö–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–π
        2: 'step2-ready-invoices',     // –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –∏–Ω–≤–æ–π—Å—ã (–∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ)
        3: 'step3-supplier-receipts',  // –ß–µ–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
        4: 'project-files',            // –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –æ–ø–ª–∞—Ç–µ
        5: 'project-files',            // –†–µ–∫–≤–∏–∑–∏—Ç—ã
        6: 'step6-client-receipts',    // –ß–µ–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        7: 'step7-client-confirmations' // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      };

      const bucket = bucketMap[stepId as keyof typeof bucketMap] || 'project-files';
      console.log(`üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º bucket: ${bucket}`)
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ (–∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ)
      const sender = 'atomic-constructor';
      const date = new Date().toISOString().slice(0,10).replace(/-/g, '');
      const timestamp = Date.now();
      const cleanName = file.name.replace(/[^\w.-]+/g, '_').substring(0, 50);
      const fileName = `invoices/atomic/${date}_${timestamp}_${sender}_${cleanName}`;
      
      console.log(`üìÅ –ü—É—Ç—å —Ñ–∞–π–ª–∞: ${fileName}`)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
      const { data, error } = await supabase.storage
        .from(bucket)
        .upload(fileName, file, {
          upsert: true // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        });

      if (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage:", error);
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${error.message}`);
      }

      console.log("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Storage:", data);

      // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
      const { data: urlData } = supabase.storage
        .from(bucket)
        .getPublicUrl(fileName);

      const fileUrl = urlData?.publicUrl;
      if (!fileUrl) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª');
      }

      console.log(`üîó –ü—É–±–ª–∏—á–Ω—ã–π URL: ${fileUrl}`);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
      setUploadedFiles(prev => ({ ...prev, [stepId]: fileUrl }))
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–≥–∞ –∫–∞–∫ upload
      setStepConfigs(prev => ({ ...prev, [stepId]: 'upload' }))

      // üîç OCR –ê–ù–ê–õ–ò–ó –í –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –û–¢ –®–ê–ì–ê
      console.log(`üîç –ù–∞—á–∏–Ω–∞–µ–º OCR –∞–Ω–∞–ª–∏–∑ –¥–ª—è —à–∞–≥–∞ ${stepId}...`)
      if (stepId === 1) {
        // –ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
        await analyzeCompanyCard(fileUrl, file.type);
      } else if (stepId === 2) {
        // –ê–Ω–∞–ª–∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏/–∏–Ω–≤–æ–π—Å–∞
        await analyzeSpecification(fileUrl, file.type);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      setOcrError(prev => ({ ...prev, [stepId]: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` }));
    }
  }

  // üîç –ê–ù–ê–õ–ò–ó –ö–ê–†–¢–û–ß–ö–ò –ö–û–ú–ü–ê–ù–ò–ò
  const analyzeCompanyCard = async (fileUrl: string, fileType: string) => {
    const stepId = 1;
    // setOcrAnalyzing —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ handleFileUpload
    setOcrError(prev => ({ ...prev, [stepId]: '' }));
    
    try {
      console.log("üîç –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏...");
      
      const analysisResponse = await fetch('/api/document-analysis', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          fileUrl: fileUrl,
          fileType: fileType,
          documentType: 'company_card'
        })
      });

      if (!analysisResponse.ok) {
        const errorText = await analysisResponse.text();
        console.error("‚ùå –û—à–∏–±–∫–∞ API:", analysisResponse.status, errorText);
        throw new Error(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${analysisResponse.status} - ${errorText}`);
      }

      const analysisResult = await analysisResponse.json();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞
      if (!analysisResult.success) {
        console.log("‚ö†Ô∏è –ê–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è:", analysisResult.error);
        setOcrError(prev => ({ 
          ...prev, 
          [stepId]: analysisResult.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞' 
        }));
        return;
      }
      
      const extractedData = analysisResult.suggestions;
      
      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã:", extractedData);
      console.log("üìä –ö–ª—é—á–∏ –≤ extractedData:", Object.keys(extractedData));
      console.log("üìä extractedData.companyName:", extractedData.companyName);
      console.log("üìä extractedData.inn:", extractedData.inn);
      console.log("üìä extractedData.phone:", extractedData.phone);
      console.log("üìä extractedData.email:", extractedData.email);
      console.log("üìä extractedData.bankBik:", extractedData.bankBik);
      console.log("üìä extractedData.bankCorrAccount:", extractedData.bankCorrAccount);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      setOcrDebugData(prev => ({ ...prev, [stepId]: extractedData }));
      
      // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏
      if (extractedData && Object.keys(extractedData).length > 0) {
        const companyData = {
          name: extractedData.companyName || extractedData.name || '',
          legalName: extractedData.legalName || extractedData.companyName || '',
          inn: extractedData.inn || '',
          kpp: extractedData.kpp || '',
          ogrn: extractedData.ogrn || '',
          address: extractedData.address || '',
          phone: extractedData.phone || '',
          email: extractedData.email || '',
          website: extractedData.website || '',
          director: extractedData.director || '',
          bankName: extractedData.bankName || '',
          bankAccount: extractedData.bankAccount || '',
          bik: extractedData.bankBik || extractedData.bik || '',
          correspondentAccount: extractedData.bankCorrAccount || extractedData.correspondentAccount || ''
        };
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ
        const hasData = Object.values(companyData).some(value => value && value.toString().trim() !== '');
        
        if (hasData) {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          setManualData(prev => ({ ...prev, [stepId]: companyData }));
          console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω—ã:", companyData);
          console.log("üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:");
          console.log("üìä companyData.phone:", companyData.phone);
          console.log("üìä companyData.email:", companyData.email);
        } else {
          console.log("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã, –Ω–æ –≤—Å–µ –ø–æ–ª—è –ø—É—Å—Ç—ã–µ");
          setOcrError(prev => ({ ...prev, [stepId]: '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞' }));
        }
      } else {
        console.log("‚ö†Ô∏è extractedData –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö");
        setOcrError(prev => ({ ...prev, [stepId]: '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞' }));
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏:", error);
      setOcrError(prev => ({ ...prev, [stepId]: '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º' }));
    } finally {
      setOcrAnalyzing(prev => ({ ...prev, [stepId]: false }));
    }
  }

  // üîç –ê–ù–ê–õ–ò–ó –°–ü–ï–¶–ò–§–ò–ö–ê–¶–ò–ò/–ò–ù–í–û–ô–°–ê (—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞)
  const analyzeSpecification = async (fileUrl: string, fileType: string) => {
    const stepId = 2;
    // setOcrAnalyzing —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ handleFileUpload
    setOcrError(prev => ({ ...prev, [stepId]: '' }));
    
    try {
      console.log("üîç –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏...");
      
      const analysisResponse = await fetch('/api/document-analysis', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          fileUrl: fileUrl,
          fileType: fileType,
          documentType: 'invoice'
        })
      });

      if (!analysisResponse.ok) {
        const errorText = await analysisResponse.text();
        console.error("‚ùå –û—à–∏–±–∫–∞ API:", analysisResponse.status, errorText);
        throw new Error(`–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${analysisResponse.status} - ${errorText}`);
      }

      const analysisResult = await analysisResponse.json();
      const extractedData = analysisResult.suggestions;
      const analysisText = analysisResult.extractedText;
        
        console.log("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω—ã:", extractedData);
        console.log("üìä –ö–ª—é—á–∏ –≤ extractedData:", Object.keys(extractedData));
        console.log("üìä extractedData.items:", extractedData.items);
        console.log("üìä extractedData.invoiceInfo:", extractedData.invoiceInfo);
        console.log("üìä extractedData.bankInfo:", extractedData.bankInfo);
        console.log("üìä –î–µ—Ç–∞–ª–∏ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:");
        console.log("   - invoiceInfo:", extractedData.invoiceInfo);
        console.log("   - seller:", extractedData.invoiceInfo?.seller);
        console.log("   - items count:", extractedData.items?.length || 0);
        console.log("   - items:", extractedData.items);
        console.log("   - bankInfo:", extractedData.bankInfo);
        console.log("   - analysisText (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):", analysisText?.substring(0, 500));
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        setOcrDebugData(prev => ({ ...prev, [stepId]: extractedData }));
        
        // –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–≤—Å–µ–≥–¥–∞)
        let supplierName = extractedData.invoiceInfo?.seller || extractedData.seller || '';
        
        if (supplierName) {
          // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã —Ç–∏–ø–∞ "| Agent: ", "| Buyer:", "–ü–æ—Å—Ç–∞–≤—â–∏–∫:", "–ü—Ä–æ–¥–∞–≤–µ—Ü:" –∏ —Ç.–¥.
          supplierName = supplierName
            .replace(/^\|\s*(Agent|Buyer|Seller|–ü–æ—Å—Ç–∞–≤—â–∏–∫|–ü—Ä–æ–¥–∞–≤–µ—Ü|–ü–æ–∫—É–ø–∞—Ç–µ–ª—å):\s*/i, '')
            .replace(/^\|\s*/g, '')
            .trim();
        }
        
        console.log("üè¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ OCR:", supplierName);
        
        // üî• –ù–û–í–û–ï: –ò–∑–≤–ª–µ–∫–∞–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏–∑ –∏–Ω–≤–æ–π—Å–∞
        const bankRequisites = extractBankRequisitesFromInvoice(extractedData, analysisText);
        console.log("üè¶ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:", bankRequisites);
        
        // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ)
        if (extractedData && extractedData.items && extractedData.items.length > 0) {
          const specificationItems = extractedData.items.map((invoiceItem: any) => ({
            name: invoiceItem.name || "–¢–æ–≤–∞—Ä –∏–∑ –∏–Ω–≤–æ–π—Å–∞", // –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ name
            item_name: invoiceItem.name || "–¢–æ–≤–∞—Ä –∏–∑ –∏–Ω–≤–æ–π—Å–∞", // –î—É–±–ª–∏—Ä—É–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å UI
            item_code: invoiceItem.code || "", // –ò—Å–ø–æ–ª—å–∑—É–µ–º item_code –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å UI
            code: invoiceItem.code || "", // –î—É–±–ª–∏—Ä—É–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            quantity: Number(invoiceItem.quantity) || 1,
            unit: "—à—Ç", // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
            price: Number(invoiceItem.price) || 0,
            total: Number(invoiceItem.total) || 0,
            description: invoiceItem.description || ""
          }));
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          const specificationData = {
            supplier: supplierName,
            items: specificationItems,
            totalAmount: extractedData.invoiceInfo?.totalAmount || 
              extractedData.items.reduce((sum: number, item: any) => sum + (Number(item.total) || 0), 0),
            currency: extractedData.invoiceInfo?.currency || extractedData.currency || 'RUB'
          };
          
          setManualData(prev => {
            const newData = { ...prev, [stepId]: specificationData };
            console.log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º manualData –¥–ª—è —à–∞–≥–∞", stepId);
            console.log("üìä –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:", newData);
            console.log("üìä manualData –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", newData);
            return newData;
          });
          console.log("‚úÖ –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∞:", specificationData);
          console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${specificationItems.length} –ø–æ–∑–∏—Ü–∏–π –Ω–∞ —Å—É–º–º—É ${specificationData.totalAmount} —Ä—É–±.`);
          
          // üî• –ù–û–í–û–ï: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
          if (bankRequisites.hasRequisites) {
            suggestPaymentMethodAndRequisites(bankRequisites, supplierName);
          }
        } else {
          // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë
          if (extractedData && extractedData.invoiceInfo && supplierName) {
            const specificationData = {
              supplier: supplierName,
              items: [],
              totalAmount: 0,
              currency: extractedData.invoiceInfo?.currency || extractedData.currency || 'RUB'
            };
            
            setManualData(prev => ({ ...prev, [stepId]: specificationData }));
            console.log("‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:", specificationData);
            setOcrError(prev => ({ ...prev, [stepId]: '–ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω–≤–æ–π—Å–µ, –Ω–æ —Ç–æ–≤–∞—Ä—ã –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ –≤—Ä—É—á–Ω—É—é.' }));
            
            // üî• –ù–û–í–û–ï: –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤
            if (bankRequisites.hasRequisites) {
              suggestPaymentMethodAndRequisites(bankRequisites, supplierName);
            }
          } else {
            console.log("‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ");
            setOcrError(prev => ({ ...prev, [stepId]: '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–æ–≤–∞—Ä—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞' }));
          }
        }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏:", error);
      setOcrError(prev => ({ ...prev, [stepId]: '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º' }));
    } finally {
      setOcrAnalyzing(prev => ({ ...prev, [stepId]: false }));
    }
  }

  // üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –∏–∑ –∏–Ω–≤–æ–π—Å–∞
  const extractBankRequisitesFromInvoice = (extractedData: any, analysisText: string) => {
    console.log("üè¶ –ù–∞—á–∏–Ω–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –∏–∑ –∏–Ω–≤–æ–π—Å–∞...");
    
    const requisites = {
      bankName: '',
      accountNumber: '',
      swift: '',
      recipientName: '',
      recipientAddress: '',
      transferCurrency: '',
      hasRequisites: false
    };

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
    if (extractedData.bankInfo) {
      requisites.bankName = extractedData.bankInfo.bankName || '';
      requisites.accountNumber = extractedData.bankInfo.accountNumber || '';
      requisites.swift = extractedData.bankInfo.swift || '';
      requisites.recipientName = extractedData.bankInfo.recipientName || '';
      requisites.recipientAddress = extractedData.bankInfo.recipientAddress || '';
      requisites.transferCurrency = extractedData.bankInfo.currency || '';
    }

    // üî• –ù–û–í–û–ï: –û—á–∏—â–∞–µ–º recipientName –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
    if (requisites.recipientName) {
      requisites.recipientName = requisites.recipientName
        .replace(/\(Ë¥¶Êà∑ÂêçÁß∞\):\s*/i, '') // –£–±–∏—Ä–∞–µ–º –∫–∏—Ç–∞–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç
        .replace(/\(Account Name\):\s*/i, '') // –£–±–∏—Ä–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç
        .replace(/^[^a-zA-Z0-9]*/, '') // –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã –≤ –Ω–∞—á–∞–ª–µ
        .trim();
      console.log("üßπ –û—á–∏—â–µ–Ω–Ω–æ–µ recipientName:", requisites.recipientName);
    }

    // –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—â–µ–º –≤ —Ç–µ–∫—Å—Ç–µ
    if (!requisites.accountNumber && analysisText) {
      // –ü–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–∞ (USD A/C NO., EUR A/C NO., Account Number)
      const accountPatterns = [
        /USD\s*A\/C\s*NO\.?\s*:?\s*(\d+)/i,
        /EUR\s*A\/C\s*NO\.?\s*:?\s*(\d+)/i,
        /Account\s*Number\s*:?\s*(\d+)/i,
        /A\/C\s*NO\.?\s*:?\s*(\d+)/i,
        /–ù–æ–º–µ—Ä\s*—Å—á–µ—Ç–∞\s*:?\s*(\d+)/i
      ];
      
      for (const pattern of accountPatterns) {
        const match = analysisText.match(pattern);
        if (match) {
          requisites.accountNumber = match[1];
          console.log("‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞:", requisites.accountNumber);
          break;
        }
      }

      // –ü–æ–∏—Å–∫ SWIFT –∫–æ–¥–∞
      const swiftPatterns = [
        /SWIFT\s*CODE\s*:?\s*([A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?)/i,
        /SWIFT\s*:?\s*([A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?)/i,
        /BIC\s*:?\s*([A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?)/i
      ];
      
      for (const pattern of swiftPatterns) {
        const match = analysisText.match(pattern);
        if (match) {
          requisites.swift = match[1];
          console.log("‚úÖ –ù–∞–π–¥–µ–Ω SWIFT –∫–æ–¥:", requisites.swift);
          break;
        }
      }

      // –ü–æ–∏—Å–∫ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è (ACCOUNT NAME, BENEFICIARY)
      const recipientPatterns = [
        /ACCOUNT\s*NAME\s*:?\s*([^\n]+)/i,
        /BENEFICIARY\s*NAME\s*:?\s*([^\n]+)/i,
        /–ü–æ–ª—É—á–∞—Ç–µ–ª—å\s*:?\s*([^\n]+)/i
      ];
      
      for (const pattern of recipientPatterns) {
        const match = analysisText.match(pattern);
        if (match) {
          requisites.recipientName = match[1].trim();
          console.log("‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è:", requisites.recipientName);
          break;
        }
      }

      // –ü–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      const addressPatterns = [
        /BENEFICIARY'?S?\s*ADDRESS\s*:?\s*([^\n]+(?:\n[^\n]+)*)/i,
        /ADDRESS\s*:?\s*([^\n]+(?:\n[^\n]+)*)/i,
        /–ê–¥—Ä–µ—Å\s*:?\s*([^\n]+(?:\n[^\n]+)*)/i
      ];
      
      for (const pattern of addressPatterns) {
        const match = analysisText.match(pattern);
        if (match) {
          requisites.recipientAddress = match[1].trim();
          console.log("‚úÖ –ù–∞–π–¥–µ–Ω –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è:", requisites.recipientAddress);
          break;
        }
      }

      // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏–∑ –Ω–æ–º–µ—Ä–∞ —Å—á–µ—Ç–∞
      if (analysisText.includes('USD A/C NO.') || analysisText.includes('USD')) {
        requisites.transferCurrency = 'USD';
      } else if (analysisText.includes('EUR A/C NO.') || analysisText.includes('EUR')) {
        requisites.transferCurrency = 'EUR';
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
    requisites.hasRequisites = !!(requisites.accountNumber || requisites.swift || requisites.recipientName);
    
    console.log("üè¶ –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:", requisites);
    return requisites;
  };

  // üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
  const suggestPaymentMethodAndRequisites = (bankRequisites: any, ocrSupplierName: string) => {
    console.log("üí° –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:", bankRequisites);
    console.log("üè¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ OCR (–ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π):", ocrSupplierName);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∏–º—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    let supplierName = ocrSupplierName || '';
    
    // –ï—Å–ª–∏ OCR –Ω–µ –Ω–∞—à–µ–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –ø—Ä–æ–±—É–µ–º –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    if (!supplierName) {
      supplierName = bankRequisites.recipientName || '';
      console.log("üîç –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ (fallback):", supplierName);
    }
    
    // Fallback to step 2 data if still empty (though it should be passed now)
    if (!supplierName && manualData[2]?.supplier) {
      supplierName = manualData[2].supplier;
      console.log("üîç –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏–∑ —à–∞–≥–∞ 2 (fallback):", supplierName);
    }
    
    console.log("üè¢ –§–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –¥–ª—è —à–∞–≥–∞ 4:", supplierName);
    
    console.log("üè¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:", supplierName);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥" –∫–∞–∫ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
    const paymentMethodData = {
      method: 'bank-transfer',
      supplier: supplierName,
      suggested: true,
      source: 'ocr_invoice'
    };
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    const requisitesData = {
      bankName: bankRequisites.bankName || '',
      accountNumber: bankRequisites.accountNumber || '',
      swift: bankRequisites.swift || '',
      recipientName: bankRequisites.recipientName || '',
      recipientAddress: bankRequisites.recipientAddress || '',
      transferCurrency: bankRequisites.transferCurrency || 'USD',
      suggested: true,
      source: 'ocr_invoice'
    };
    
    // üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê
    console.log("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –†–ï–ö–í–ò–ó–ò–¢–û–í:");
    console.log("   - bankRequisites.bankName:", bankRequisites.bankName);
    console.log("   - bankRequisites.accountNumber:", bankRequisites.accountNumber);
    console.log("   - bankRequisites.swift:", bankRequisites.swift);
    console.log("   - bankRequisites.recipientName:", bankRequisites.recipientName);
    console.log("   - requisitesData.bankName:", requisitesData.bankName);
    console.log("   - requisitesData.accountNumber:", requisitesData.accountNumber);
    console.log("   - requisitesData.swift:", requisitesData.swift);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ manualData
    setManualData(prev => {
      const newData = {
        ...prev,
        4: paymentMethodData,  // –®–∞–≥ 4 - –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        5: requisitesData      // –®–∞–≥ 5 - –†–µ–∫–≤–∏–∑–∏—Ç—ã
      };
      console.log("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ manualData[5]:", newData[5]);
      return newData;
    });
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    setStepConfigs(prev => ({
      ...prev,
      4: 'ocr_suggestion',
      5: 'ocr_suggestion'
    }));
    
    console.log("‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:");
    console.log("   - –®–∞–≥ 4 (–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã):", paymentMethodData);
    console.log("   - –®–∞–≥ 5 (–†–µ–∫–≤–∏–∑–∏—Ç—ã):", requisitesData);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
  const handleCancelSource = () => {
    setSelectedSource(null)
    setEditingType('')
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —à–∞–≥–∞
  const handleViewStepData = (stepId: number) => {
    const stepData = manualData[stepId]
    if (stepData) {
      setStepDataToView({ stepId, data: stepData })
      setShowStepDataModal(true)
    }
  }

  const handleRemoveSource = (stepId: number) => {
    // –£–¥–∞–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–≥–∞
    setStepConfigs(prev => {
      const newConfigs = { ...prev }
      delete newConfigs[stepId]
      return newConfigs
    })
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    setManualData(prev => {
      const newData = { ...prev }
      delete newData[stepId]
      return newData
    })
    
    // –û—á–∏—â–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    setUploadedFiles(prev => {
      const newFiles = { ...prev }
      delete newFiles[stepId]
      return newFiles
    })
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫
    setSelectedSource(null)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
  const handlePreviewData = (type: string, data: any) => {
    console.log('=== –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ô –ü–†–û–°–ú–û–¢–† ===')
    console.log('type:', type)
    console.log('data –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', data)
    console.log('manualData[1]:', manualData[1])
    
    // üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –î–õ–Ø –†–ï–ö–í–ò–ó–ò–¢–û–í
    if (type === 'requisites') {
      console.log('üîç –û–¢–õ–ê–î–ö–ê –†–ï–ö–í–ò–ó–ò–¢–û–í:')
      console.log('   - bankName:', data.bankName)
      console.log('   - accountNumber:', data.accountNumber)
      console.log('   - swift:', data.swift)
      console.log('   - recipientName:', data.recipientName)
      console.log('   - supplier:', data.supplier)
      console.log('   - suggested:', data.suggested)
      console.log('   - source:', data.source)
    }
    
    // üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –î–õ–Ø –°–ü–û–°–û–ë–ê –û–ü–õ–ê–¢–´
    if (type === 'payment') {
      console.log('üîç –û–¢–õ–ê–î–ö–ê –°–ü–û–°–û–ë–ê –û–ü–õ–ê–¢–´:')
      console.log('   - method:', data.method)
      console.log('   - supplier:', data.supplier)
      console.log('   - suggested:', data.suggested)
      console.log('   - source:', data.source)
    }
    
    setPreviewType(type)
    setPreviewData(data)
    setShowPreviewModal(true)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleEditData = (type: string) => {
    setSelectedSource("manual")
    setShowPreviewModal(false)
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º—É
    if (type === 'bank') {
      setEditingType('bank')
    } else if (type === 'contacts') {
      setEditingType('contacts')
    } else {
      setEditingType('company')
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ - —Å—á–µ—Ç—á–∏–∫–∏ —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ CatalogModal

  const handleAddProductsFromCatalog = () => {
    console.log('üõí –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞')
    setShowCatalogModal(true)
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
  const handleCatalogProductsAdd = (products: any[]) => {
    try {
      console.error('üö®üö®üö® ATOMIC CATALOG ADD CALLED! Products:', products?.length || 0)
      alert('üö® ATOMIC: –¢–æ–≤–∞—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ' + (products?.length || 0))
      console.log('üî• [ATOMIC] –í–´–ó–û–í handleCatalogProductsAdd —Ñ—É–Ω–∫—Ü–∏–∏!', products?.length || 0, '—Ç–æ–≤–∞—Ä–æ–≤')
      console.log('üì¶ [ATOMIC] –ü–æ–ª—É—á–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞:', products)
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–æ–≤–∞—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç Step II
    const catalogItems = products.map(product => ({
      name: product.name || product.item_name || '–¢–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞',
      quantity: product.quantity || 1,
      price: parseFloat(product.price) || 0,
      currency: product.currency || 'USD',
      supplier_id: product.supplier_id,
      supplier_name: product.supplier_name,
      image_url: product.image_url || product.images?.[0] || '',
      sku: product.sku || product.item_code || ''
    }))
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ Step II
    setManualData(prev => ({
      ...prev,
      2: {
        ...prev[2],
        supplier: catalogItems[0]?.supplier_name || prev[2]?.supplier,
        currency: catalogItems[0]?.currency || prev[2]?.currency || 'USD',
        items: [...(prev[2]?.items || []), ...catalogItems]
      }
    }))
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Step II
    setStepConfigs(prev => ({
      ...prev,
      2: 'catalog'
    }))
    
    console.log(`‚úÖ [ATOMIC] –î–æ–±–∞–≤–ª–µ–Ω–æ ${catalogItems.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é`)
    
    // –í—ã–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è Step II –¥–∞–Ω–Ω—ã—Ö (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å)
    const step2Data = {
      supplier: catalogItems[0]?.supplier_name,
      currency: catalogItems[0]?.currency || 'USD',
      items: catalogItems,
      supplier_id: catalogItems[0]?.supplier_id // –î–æ–±–∞–≤–ª—è–µ–º supplier_id –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã autoFillStepFromRequisites
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º setTimeout –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
    setTimeout(() => {
      if (catalogItems[0]?.supplier_id) {
        autoFillStepFromRequisites(step2Data, 2)
      }
    }, 100)
    
    // üéØ –ê–í–¢–û–ó–ê–ü–û–õ–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• –ü–û–°–¢–ê–í–©–ò–ö–ê –î–õ–Ø –®–ê–ì–û–í IV –ò V
    const firstProduct = products[0]
    if (firstProduct?.supplier_id) {
      console.log('üîç [ATOMIC] –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', firstProduct.supplier_name)
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      getEchoSupplierData(firstProduct.supplier_name).then(echoData => {
        if (echoData) {
          console.log('‚úÖ [ATOMIC] –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', echoData)
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º Steps IV –∏ V –Ω–∞–ø—Ä—è–º—É—é
          console.log('üéØ [ATOMIC] –ü—Ä—è–º–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ 4 –∏ 5 —Å —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏')
          
          // –ó–∞–ø–æ–ª–Ω—è–µ–º Step IV (–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã)
          setManualData(prev => ({
            ...prev,
            4: {
              payment_method: echoData.payment_method?.method || 'bank_transfer',
              auto_filled: true,
              supplier_name: firstProduct.supplier_name,
              echo_source: echoData.project_info?.project_name,
              user_choice: true
            }
          }))
          
          // –ó–∞–ø–æ–ª–Ω—è–µ–º Step V (–†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)  
          setManualData(prev => ({
            ...prev,
            5: {
              supplier_name: firstProduct.supplier_name,
              requisites: echoData.requisites || {},
              auto_filled: true,
              echo_source: echoData.project_info?.project_name,
              user_choice: true
            }
          }))
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–≥–æ–≤ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
          setStepConfigs(prev => ({
            ...prev,
            4: 'echoData',
            5: 'echoData'
          }))
          
          console.log('‚úÖ [ATOMIC] –®–∞–≥–∏ 4 –∏ 5 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–º–∏')
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          setAutoFillNotification({
            show: true,
            message: `–î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ "${echoData.project_info.project_name}" –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã`,
            supplierName: firstProduct.supplier_name,
            filledSteps: [4, 5]
          })
          
          // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
          setTimeout(() => {
            setAutoFillNotification(null)
          }, 5000)
        } else {
          console.log('‚ÑπÔ∏è [ATOMIC] –§–∞–Ω—Ç–æ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞')
          
          // FALLBACK: –ó–∞–≥—Ä—É–∂–∞–µ–º –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
          console.log('üéØ [ATOMIC] –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', firstProduct.supplier_name)
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ verified_suppliers
          fetch(`/api/catalog/verified-suppliers?search=${encodeURIComponent(firstProduct.supplier_name)}`)
            .then(response => response.json())
            .then(suppliers => {
              const supplier = suppliers.find((s: any) => 
                s.name.toLowerCase().includes(firstProduct.supplier_name.toLowerCase())
              )
              
              if (supplier) {
                console.log('‚úÖ [ATOMIC] –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ:', supplier)
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º Step IV —Å –†–ï–ê–õ–¨–ù–´–ú–ò –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
                setManualData(prev => ({
                  ...prev,
                  4: {
                    payment_method: supplier.payment_methods?.[0] || 'bank_transfer',
                    available_methods: supplier.payment_methods || ['bank_transfer'],
                    auto_filled: true,
                    supplier_name: supplier.name,
                    supplier_data: supplier,
                    catalog_source: 'verified_supplier',
                    user_choice: true
                  }
                }))
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º Step V —Å –†–ï–ê–õ–¨–ù–´–ú–ò —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞  
                setManualData(prev => ({
                  ...prev,
                  5: {
                    supplier_name: supplier.name,
                    supplier_data: supplier,
                    bank_accounts: supplier.bank_accounts || [],
                    crypto_wallets: supplier.crypto_wallets || [],
                    p2p_cards: supplier.p2p_cards || [],
                    requisites: {
                      bank_accounts: supplier.bank_accounts || [],
                      crypto_wallets: supplier.crypto_wallets || [],
                      p2p_cards: supplier.p2p_cards || []
                    },
                    auto_filled: true,
                    catalog_source: 'verified_supplier',
                    user_choice: false
                  }
                }))
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–∞–∫ –∫–∞—Ç–∞–ª–æ–∂–Ω—É—é
                setStepConfigs(prev => ({
                  ...prev,
                  4: 'catalog',
                  5: 'catalog'  
                }))
                
                console.log('‚úÖ [ATOMIC] –®–∞–≥–∏ 4 –∏ 5 –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –†–ï–ê–õ–¨–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –∫–∞—Ç–∞–ª–æ–≥–∞')
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                setAutoFillNotification({
                  show: true,
                  message: `–î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ "${supplier.name}" –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã. –î–æ—Å—Ç—É–ø–Ω–æ –º–µ—Ç–æ–¥–æ–≤: ${supplier.payment_methods?.length || 0}`,
                  supplierName: supplier.name,
                  filledSteps: [4, 5]
                })
                
              } else {
                console.log('‚ùå [ATOMIC] –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ')
                
                // Fallback —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                setManualData(prev => ({
                  ...prev,
                  4: {
                    payment_method: 'bank_transfer',
                    auto_filled: true,
                    supplier_name: firstProduct.supplier_name,
                    catalog_source: 'unknown_supplier',
                    user_choice: true
                  }
                }))
                
                setStepConfigs(prev => ({
                  ...prev,
                  4: 'catalog'
                }))
              }
              
              // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 7 —Å–µ–∫—É–Ω–¥
              setTimeout(() => {
                setAutoFillNotification(null)
              }, 7000)
            })
            .catch(error => {
              console.error('‚ùå [ATOMIC] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–∞:', error)
            })
        }
      }).catch(error => {
        console.error('‚ùå [ATOMIC] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error)
      })
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞—Ç–∞–ª–æ–≥–∞
    setShowCatalogModal(false)
    } catch (error) {
      console.error('‚ùå [ATOMIC] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ handleCatalogProductsAdd:', error)
      alert('üö® –û–®–ò–ë–ö–ê: ' + error)
    }
  }

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–≤–∞–π–ø–∞
  const handleTouchStart = (e: React.TouchEvent) => {
    setTouchStart(e.targetTouches[0].clientX)
  }

  const handleTouchMove = (e: React.TouchEvent) => {
    setTouchEnd(e.targetTouches[0].clientX)
  }

  const handleTouchEnd = () => {
    if (!touchStart || !touchEnd || !lastHoveredStep) return
    
    const distance = touchStart - touchEnd
    const isLeftSwipe = distance > 50
    const isRightSwipe = distance < -50
    const items = manualData[lastHoveredStep]?.items

    if (isLeftSwipe && items && items.length > 3) {
      // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–∏–π –Ω–∞–±–æ—Ä
      setCurrentItemIndex(prev => 
        prev < Math.max(0, items.length - 3) ? prev + 1 : prev
      )
    }
    
    if (isRightSwipe && items && items.length > 3) {
      // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π –Ω–∞–±–æ—Ä
      setCurrentItemIndex(prev => prev > 0 ? prev - 1 : prev)
    }

    // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π
    setTouchStart(0)
    setTouchEnd(0)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const testEchoData = async () => {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö...')
    
    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const supplierName = '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫'
      const echoData = await getEchoSupplierData(supplierName)
      
      if (echoData) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        setEchoDataModal({
          show: true,
          supplierName: supplierName,
          echoData: echoData,
          projectInfo: echoData.project_info
        })
        
        console.log('üìã –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å—Å—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏')
      } else {
        console.log('‚ùå –†–µ–∞–ª—å–Ω—ã–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
        alert('–†–µ–∞–ª—å–Ω—ã–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.')
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö: ' + (error as Error).message)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞)
  const applyEchoData = (echoData: any) => {
    console.log('‚úÖ –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ:', echoData)
    console.log('üîç –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', echoData.payment_method)
    console.log('üîç –†–µ–∫–≤–∏–∑–∏—Ç—ã:', echoData.requisites)
    console.log('üîç –¢–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:', echoData.requisites?.type)
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–æ–≤ 4 –∏ 5
    const step4Data = {
      ...echoData.payment_method,
      user_choice: true,
      source: 'echoData',
      supplier_name: echoData.supplier_name,
      project_info: echoData.project_info
    }
    
    const step5Data = {
      ...echoData.requisites,
      user_choice: true,
      source: 'echoData',
      supplier_name: echoData.supplier_name,
      project_info: echoData.project_info,
      // –Ø–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
      type: echoData.requisites?.type || 
            (echoData.payment_method?.method === 'crypto' ? 'crypto' : 
             echoData.payment_method?.method === 'p2p' ? 'p2p' : 'bank')
    }
    
    console.log('üîç –¢–∏–ø —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ step5Data:', step5Data.type)
    console.log('üîç –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', echoData.payment_method?.method)
    
    console.log('üìã Step 4 Data:', step4Data)
    console.log('üìã Step 5 Data:', step5Data)
    
    setManualData(prev => {
      const newData = {
      ...prev,
      4: step4Data,
      5: step5Data
      }
      console.log('üîÑ –ù–æ–≤—ã–µ manualData:', newData)
      return newData
    })
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
    setStepConfigs(prev => ({
      ...prev,
      4: 'echoData',
      5: 'echoData'
    }))
    
    // –û—á–∏—â–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö (–∑–≤–µ–∑–¥–æ—á–∫–∏ –∏—Å—á–µ–∑–Ω—É—Ç)
    setEchoDataAvailable(prev => ({
      ...prev,
      4: false,
      5: false
    }))
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
    setEchoDataTooltips(prev => ({
      ...prev,
      4: false,
      5: false
    }))
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setEchoDataModal(null)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert('–≠—Ö–æ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!')
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const rejectEchoData = () => {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ')
    
    // –û—á–∏—â–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö (–∑–≤–µ–∑–¥–æ—á–∫–∏ –∏—Å—á–µ–∑–Ω—É—Ç)
    setEchoDataAvailable(prev => ({
      ...prev,
      4: false,
      5: false
    }))
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
    setEchoDataTooltips(prev => ({
      ...prev,
      4: false,
      5: false
    }))
    
    setEchoDataModal(null)
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ª—é–±–æ–≥–æ —à–∞–≥–∞
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –ª—é–±–æ–º –∏–∑ —à–∞–≥–æ–≤ 2, 4, 5
    const hasAnyStepData = manualData[2] || manualData[4] || manualData[5] || selectedSupplierData
    
    if (hasAnyStepData) {
      checkEchoDataAvailability()
    } else {
      setEchoDataAvailable({})
    }
  }, [manualData[2], manualData[4], manualData[5], selectedSupplierData])
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–æ–≤ 1 –∏ 2 –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ª—é–±–æ–≥–æ —à–∞–≥–∞
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –ª—é–±–æ–º –∏–∑ —à–∞–≥–æ–≤ 2, 4, 5
    const hasAnyStepData = manualData[2] || manualData[4] || manualData[5] || selectedSupplierData
    
    if (hasAnyStepData && !(manualData as any).echoSuggestions?.step1) {
      // –ò—â–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–æ–≤ 1 –∏ 2
      suggestEchoDataForSteps()
    }
  }, [manualData[2], manualData[4], manualData[5], selectedSupplierData])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ —à–∞–≥–∞ –≤ –±–ª–æ–∫–µ 2
  const handleStepCardClick = (item: any) => {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –±–ª–æ–∫–µ 2
    handlePreviewData(getPreviewType(item.stepId), item.data)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  const getPreviewType = (stepId: number) => {
    switch (stepId) {
      case 1: return 'company'
      case 2: return 'product'
      case 4: return 'payment'
      case 5: return 'requisites'
      default: return 'company'
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
  const closeEchoDataTooltip = (stepId: number) => {
    setEchoDataTooltips(prev => ({
      ...prev,
      [stepId]: false
    }))
  }

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∫–∞—Ç–∞–ª–æ–≥–∞
  const handleBlueRoomSource = async () => {
    if (!catalogSourceStep) return
    
    console.log('üîµ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —à–∞–≥–∞:', catalogSourceStep)
    
    setBlueRoomLoading(true)
    setShowCatalogSourceModal(false)
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      console.log('üîç [DEBUG] –°–µ—Å—Å–∏—è:', session ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
      
      if (!session) {
        console.error('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã');
        alert('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
        return;
      }

      console.log('üîç [DEBUG] –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞:', session.access_token ? '–ï—Å—Ç—å' : '–ù–µ—Ç');
      console.log('üîç [DEBUG] User ID:', session.user?.id);

      const response = await fetch('/api/catalog/user-suppliers', {
        headers: {
          'Authorization': `Bearer ${session.access_token}`,
        },
      });
      
      console.log('üîç [DEBUG] –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      console.log('üîç [DEBUG] –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', Object.fromEntries(response.headers.entries()));
      
      const data = await response.json();
      console.log('üîç [DEBUG] –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
      
      if (data.suppliers && data.suppliers.length > 0) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –≤ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç–µ:', data.suppliers.length)
        setBlueRoomSuppliers(data.suppliers)
        setShowBlueRoomSupplierModal(true)
      } else {
        console.log('‚ùå –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç–µ')
        console.log('üîç [DEBUG] –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', data);
        alert('–í —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥.')
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã:', error)
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã')
    } finally {
      setBlueRoomLoading(false)
    }
  }

  const handleOrangeRoomSource = async () => {
    if (!catalogSourceStep) return
    
    console.log('üü† –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —à–∞–≥–∞:', catalogSourceStep)
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        console.error('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã');
        alert('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
        return;
      }

      const response = await fetch('/api/catalog/verified-suppliers', {
        headers: {
          'Authorization': `Bearer ${session.access_token}`,
        },
      });
      const data = await response.json();
      
      if (data.suppliers && data.suppliers.length > 0) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –≤ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ:', data.suppliers.length)
        setOrangeRoomSuppliers(data.suppliers)
        setShowOrangeRoomSupplierModal(true)
      } else {
        console.log('‚ùå –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ')
        alert('–í –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤.')
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã:', error)
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã')
    }
    
    setShowCatalogSourceModal(false)
  }

  const handleEchoCardsSource = async () => {
    if (!catalogSourceStep) return
    
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è —à–∞–≥–∞:', catalogSourceStep)
    
    try {
      const response = await fetch('/api/catalog/echo-cards')
      const data = await response.json()
      
      if (data.echoCards && data.echoCards.length > 0) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏:', data.echoCards.length)
        // TODO: –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
      } else {
        console.log('‚ùå –ù–µ—Ç —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫')
        // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–µ–∫:', error)
    }
    
    setShowCatalogSourceModal(false)
  }

  // –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã
  // –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
  const handlePaymentMethodSelect = (method: string, supplier: any) => {
    console.log('üéØ –í—ã–±—Ä–∞–Ω –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:', method)
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥ 4 - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π
    setManualData(prev => ({
      ...prev,
      4: {
        type: 'single',
        method: method,
        selectedMethod: method,
        defaultMethod: method
      }
    }))
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —à–∞–≥ 5 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
    let requisitesData = {}
    
    if (method === 'crypto' && supplier.payment_methods?.crypto) {
      requisitesData = {
        type: 'crypto',
        crypto_name: supplier.payment_methods.crypto.network || 'ETH',
        crypto_address: supplier.payment_methods.crypto.address,
        crypto_network: supplier.payment_methods.crypto.network || 'ETH'
      }
    } else if (method === 'p2p' && supplier.payment_methods?.card) {
      requisitesData = {
        type: 'p2p',
        card_bank: supplier.payment_methods.card.bank,
        card_number: supplier.payment_methods.card.number,
        card_holder: supplier.payment_methods.card.holder,
        card_expiry: supplier.payment_methods.card.expiry || ''
      }
    } else if (method === 'bank' && supplier.payment_methods?.bank) {
      requisitesData = {
        type: 'bank',
        bankName: supplier.payment_methods.bank.bank_name,
        recipientName: supplier.name,
        accountNumber: supplier.payment_methods.bank.account_number,
        swift: supplier.payment_methods.bank.swift_code,
        iban: supplier.payment_methods.bank.iban || '',
        transferCurrency: supplier.currency || 'RUB'
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤ —à–∞–≥–µ 5
    setManualData(prev => ({
      ...prev,
      5: requisitesData
    }))
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–≥–∞ 5
    setStepConfigs(prev => ({
      ...prev,
      5: 'catalog'
    }))
    
    console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –º–µ—Ç–æ–¥–∞:', method)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert(`–í—ã–±—Ä–∞–Ω –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: ${method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞' : method === 'p2p' ? 'P2P –ø–µ—Ä–µ–≤–æ–¥' : '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥'}. –†–µ–∫–≤–∏–∑–∏—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.`)
  }

  const handleSelectBlueRoomSupplier = async (supplier: any) => {
    console.log('üéØ === –ù–ê–ß–ê–õ–û handleSelectBlueRoomSupplier ===')
    console.log('üéØ supplier:', supplier)
    console.log('üéØ catalogSourceStep:', catalogSourceStep)
    console.log('üéØ lastHoveredStep:', lastHoveredStep)
    
    if (!catalogSourceStep) {
      console.log('‚ùå catalogSourceStep –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤—ã—Ö–æ–¥–∏–º')
      return
    }
    
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∞–ø—Ä—è–º—É—é (–æ–Ω–∏ —É–∂–µ –≤–∫–ª—é—á–∞—é—Ç catalog_user_products)
      const fullSupplier = supplier
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —à–∞–≥–∞—Ö
      setSelectedSupplierData(fullSupplier)
      
      // –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —à–∞–≥–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞!
      console.log('üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', fullSupplier.name)
      
      // –®–∞–≥ 2: –¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!)
      const specificationData = {
        supplier: fullSupplier.name,
        currency: fullSupplier.currency || 'USD',
        items: fullSupplier.catalog_user_products?.map((product: any) => ({
          name: product.name,
          description: product.description || '',
          quantity: 1,
          price: product.price || 0,
          unit: product.unit || '—à—Ç'
        })) || [],
        user_choice: true
      }
      
      // –®–∞–≥ 4: –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      const paymentMethods = []
      if (fullSupplier.payment_methods?.bank) {
        paymentMethods.push('bank')
      }
      if (fullSupplier.payment_methods?.card) {
        paymentMethods.push('p2p')
      }
      if (fullSupplier.payment_methods?.crypto) {
        paymentMethods.push('crypto')
      }
      
      const paymentData = {
        type: 'multiple',
        methods: paymentMethods,
        defaultMethod: paymentMethods[0] || 'bank',
        supplier: fullSupplier.name,
        user_choice: true
      }
      
      // –®–∞–≥ 5: –†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
      const allRequisites = []
      if (fullSupplier.payment_methods?.bank) {
        allRequisites.push({
          type: 'bank',
          bankName: fullSupplier.payment_methods.bank.bank_name,
          accountNumber: fullSupplier.payment_methods.bank.account_number,
          bik: fullSupplier.payment_methods.bank.bik,
          correspondentAccount: fullSupplier.payment_methods.bank.correspondent_account,
          supplier: fullSupplier.name
        })
      }
      if (fullSupplier.payment_methods?.card) {
        allRequisites.push({
          type: 'p2p',
          card_number: fullSupplier.payment_methods.card.number,
          card_bank: fullSupplier.payment_methods.card.bank,
          card_holder: fullSupplier.payment_methods.card.holder,
          supplier: fullSupplier.name
        })
      }
      if (fullSupplier.payment_methods?.crypto) {
        allRequisites.push({
          type: 'crypto',
          crypto_address: fullSupplier.payment_methods.crypto.address,
          crypto_network: fullSupplier.payment_methods.crypto.network,
          supplier: fullSupplier.name
        })
      }
      
      const requisitesData = {
        type: 'multiple',
        requisites: allRequisites,
        defaultRequisite: allRequisites[0] || null,
        supplier: fullSupplier.name,
        user_choice: true
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–æ–≤ 2, 4, 5 (–ù–ï —à–∞–≥ 1!)
      setManualData(prev => ({
        ...prev,
        2: specificationData,
        4: paymentData,
        5: requisitesData
      }))
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è —à–∞–≥–æ–≤ 2, 4, 5
      setStepConfigs(prev => ({
        ...prev,
        2: 'blue_room',
        4: 'blue_room',
        5: 'blue_room'
      }))
      
      console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:')
      console.log('  - –®–∞–≥ 2 (—Ç–æ–≤–∞—Ä—ã):', specificationData.items.length, '—Ç–æ–≤–∞—Ä–æ–≤')
      console.log('  - –®–∞–≥ 4 (–æ–ø–ª–∞—Ç–∞):', paymentMethods.length, '–º–µ—Ç–æ–¥–æ–≤')
      console.log('  - –®–∞–≥ 5 (—Ä–µ–∫–≤–∏–∑–∏—Ç—ã):', allRequisites.length, '—Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤')
      console.log('  - –®–∞–≥ 1 (–∫–ª–∏–µ–Ω—Ç): –ù–ï –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–µ—Ä–µ—Ç —Å–∞–º)')
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞—Ç–∞–ª–æ–≥–∞
      setShowCatalogSourceModal(false)
      setCatalogSourceStep(null)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏
      console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ "${fullSupplier.name}" —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ –í–°–ï–ú —à–∞–≥–∞–º!`)
      
      console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', fullSupplier.name)
      console.log('üéØ –í—ã–∑—ã–≤–∞–µ–º suggestEchoDataForSteps —Å –¥–∞–Ω–Ω—ã–º–∏:', fullSupplier)
      
      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–æ–≤ 1 –∏ 2
      try {
        await suggestEchoDataForSteps(fullSupplier)
        console.log('üéØ suggestEchoDataForSteps –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ')
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ suggestEchoDataForSteps:', error)
      }
      
      console.log('üéØ –ü–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω')
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞')
    }
    
    setShowBlueRoomSupplierModal(false)
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º
  const findSupplierByRequisites = async (requisites: any) => {
    try {
      console.log('üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', requisites)
      
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
      const response = await fetch('/api/catalog/user-suppliers')
      const suppliers = await response.json()
      
      if (!suppliers || suppliers.length === 0) {
        console.log('‚ùå –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ')
        return null
      }
      
      // –ò—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å —Å–æ–≤–ø–∞–¥–∞—é—â–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
      for (const supplier of suppliers) {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplier.name)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
        if (requisites.type === 'bank' && supplier.payment_methods?.bank) {
          const bankMatch = 
            supplier.payment_methods.bank.account_number === requisites.accountNumber ||
            supplier.payment_methods.bank.bank_name === requisites.bankName
          
          if (bankMatch) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', supplier.name)
            return supplier
          }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º P2P —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
        if (requisites.type === 'p2p' && supplier.payment_methods?.card) {
          const p2pMatch = 
            supplier.payment_methods.card.number === requisites.card_number ||
            supplier.payment_methods.card.bank === requisites.card_bank
          
          if (p2pMatch) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ P2P —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', supplier.name)
            return supplier
          }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏–ø—Ç–æ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
        if (requisites.type === 'crypto' && supplier.payment_methods?.crypto) {
          const cryptoMatch = 
            supplier.payment_methods.crypto.address === requisites.crypto_address ||
            supplier.payment_methods.crypto.network === requisites.crypto_network
          
          if (cryptoMatch) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ –∫—Ä–∏–ø—Ç–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', supplier.name)
            return supplier
          }
        }
      }
      
      console.log('‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return null
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', error)
      return null
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
  const findHistoricalProjectsByRequisites = async (supplierRequisites: any) => {
    try {
      console.log('üîç –ü–æ–∏—Å–∫ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', supplierRequisites)
      
      const { data: projects, error } = await supabase
        .from('projects')
        .select(`
          id,
          project_name,
          created_at,
          status,
          client_profiles!inner(
            id,
            name,
            company_name,
            inn,
            address,
            email,
            phone
          ),
          project_specifications!inner(
            id,
            items
          ),
          project_requisites!inner(
            id,
            type,
            crypto_address,
            crypto_network,
            card_number,
            card_bank,
            account_number,
            bank_name
          )
        `)
        .eq('status', 'completed')
        .order('created_at', { ascending: false })
        .limit(10)
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error)
        return []
      }
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã –ø–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
      const matchingProjects = projects?.filter(project => {
        const projectRequisites = project.project_requisites
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ —Ç–∏–ø—É —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
        return projectRequisites.some((req: any) => {
          if (supplierRequisites.type === 'crypto' && req.type === 'crypto') {
            return req.crypto_network === supplierRequisites.crypto_network
          }
          if (supplierRequisites.type === 'p2p' && req.type === 'p2p') {
            return req.card_bank === supplierRequisites.card_bank
          }
          if (supplierRequisites.type === 'bank' && req.type === 'bank') {
            return req.bank_name === supplierRequisites.bankName
          }
          return false
        })
      }) || []
      
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —Å–æ–≤–ø–∞–¥–∞—é—â–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏:', matchingProjects.length)
      return matchingProjects
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤:', error)
      return []
    }
  }

  // –°–ò–°–¢–ï–ú–ê 1: –ü–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏–º–µ–Ω–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (—Ç–µ–∫—É—â–∞—è)
  const suggestEchoDataByName = async (supplierName: string) => {
    try {
      console.log('üîç === –°–ò–°–¢–ï–ú–ê 1: –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ ===')
      console.log('üîç –ò—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏:', supplierName)
      
      const response = await fetch(`/api/catalog/user-suppliers?search=${encodeURIComponent(supplierName)}`)
      const suppliers = await response.json()
      
      if (suppliers.length > 0) {
        const supplier = suppliers[0]
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ –∏–º–µ–Ω–∏:', supplier.name)
        
        return {
          step1: {
            clients: [{
              name: supplier.contact_person || supplier.name,
              company_name: supplier.company_name,
              inn: supplier.inn,
              address: supplier.address,
              email: supplier.contact_email,
              phone: supplier.contact_phone
            }],
            source: 'nameSearch',
            description: `–î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏: ${supplier.name}`
          }
        }
      }
      
      console.log('‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return null
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∏–º–µ–Ω–∏:', error)
      return null
    }
  }

  // –°–ò–°–¢–ï–ú–ê 2: –ü–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º
  const suggestEchoDataByRequisites = async () => {
    try {
      console.log('üîç === –°–ò–°–¢–ï–ú–ê 2: –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º ===')
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏–∑ —à–∞–≥–∞ 5
      const step5Data = manualData[5]
      if (!step5Data || !step5Data.requisites) {
        console.log('‚ùå –ù–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ —à–∞–≥–µ 5')
        return null
      }
      
      console.log('üîç –†–µ–∫–≤–∏–∑–∏—Ç—ã –∏–∑ —à–∞–≥–∞ 5:', step5Data.requisites)
      
      // –ò—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º
      const supplier = await findSupplierByRequisites(step5Data.requisites[0]) // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π
      
      if (supplier) {
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', supplier.name)
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        const productsResponse = await fetch(`/api/catalog/user-suppliers/${supplier.id}/products`)
        const productsData = await productsResponse.json()
        const products = productsData.products || []
        
        return {
          step2: {
            products: products,
            source: 'requisitesSearch',
            description: `–¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º: ${supplier.name}`
          }
        }
      }
      
      console.log('‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return null
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º:', error)
      return null
    }
  }

  // –°–ò–°–¢–ï–ú–ê 3: –ü–æ–∏—Å–∫ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–µ–∫—Ç–∞–º
  const suggestEchoDataByHistory = async () => {
    try {
      console.log('üîç === –°–ò–°–¢–ï–ú–ê 3: –ü–æ–∏—Å–∫ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ ===')
      
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∏–∑ —à–∞–≥–∞ 5
      const step5Data = manualData[5]
      if (!step5Data || !step5Data.requisites) {
        console.log('‚ùå –ù–µ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ —à–∞–≥–µ 5')
        return null
      }
      
      // –ò—â–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã —Å —Ç–∞–∫–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
      const historicalProjects = await findHistoricalProjectsByRequisites(step5Data.requisites[0])
      
      if (historicalProjects.length > 0) {
        const bestProject = historicalProjects[0] // –ë–µ—Ä–µ–º —Å–∞–º—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç:', bestProject.project_name)
        
        return {
          step1: {
            clients: bestProject.client_profiles ? [bestProject.client_profiles] : [],
            source: 'historySearch',
            description: `–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏: ${bestProject.project_name}`
          },
          step2: {
            products: bestProject.project_specifications?.[0]?.items || [],
            source: 'historySearch',
            description: `–¢–æ–≤–∞—Ä—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏: ${bestProject.project_name}`
          }
        }
      }
      
      console.log('‚ùå –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      return null
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏:', error)
      return null
    }
  }

  // –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞
  const suggestEchoDataForSteps = async (supplierData?: any) => {
    try {
      console.log('üéØ === –ù–ê–ß–ê–õ–û suggestEchoDataForSteps ===')
      console.log('üéØ supplierData:', supplierData)
      console.log('üéØ –¢–µ–∫—É—â–∏–π manualData:', manualData)
      console.log('üéØ –¢–µ–∫—É—â–∏–π stepConfigs:', stepConfigs)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
      setEchoDataLoadingSteps1_2(true)
      
      // –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
      const allResults = {}
      
      // –°–ò–°–¢–ï–ú–ê 1: –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å supplierData)
      if (supplierData) {
        const supplierName = supplierData.name || supplierData.company_name
        console.log('üéØ –ó–∞–ø—É—Å–∫–∞–µ–º –°–ò–°–¢–ï–ú–£ 1 (–ø–æ –∏–º–µ–Ω–∏):', supplierName)
        
        const result1 = await suggestEchoDataByName(supplierName)
        if (result1) {
          Object.assign(allResults, result1)
          console.log('‚úÖ –°–ò–°–¢–ï–ú–ê 1 –¥–∞–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result1)
        }
      }
      
      // –°–ò–°–¢–ï–ú–ê 2: –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º (–µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω —à–∞–≥ 5)
      if (manualData[5] && manualData[5].requisites) {
        console.log('üéØ –ó–∞–ø—É—Å–∫–∞–µ–º –°–ò–°–¢–ï–ú–£ 2 (–ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º)')
        
        const result2 = await suggestEchoDataByRequisites()
        if (result2) {
          Object.assign(allResults, result2)
          console.log('‚úÖ –°–ò–°–¢–ï–ú–ê 2 –¥–∞–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result2)
        }
      }
      
      // –°–ò–°–¢–ï–ú–ê 3: –ü–æ–∏—Å–∫ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ (–µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω —à–∞–≥ 5)
      if (manualData[5] && manualData[5].requisites) {
        console.log('üéØ –ó–∞–ø—É—Å–∫–∞–µ–º –°–ò–°–¢–ï–ú–£ 3 (–ø–æ –∏—Å—Ç–æ—Ä–∏–∏)')
        
        const result3 = await suggestEchoDataByHistory()
        if (result3) {
          Object.assign(allResults, result3)
          console.log('‚úÖ –°–ò–°–¢–ï–ú–ê 3 –¥–∞–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result3)
        }
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ
      if (Object.keys(allResults).length > 0) {
        setManualData(prev => ({
          ...prev,
          echoSuggestions: allResults
        }))
        
        console.log('‚úÖ –í—Å–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', allResults)
      } else {
        console.log('‚ùå –ù–∏ –æ–¥–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞—à–ª–∞ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö')
      }
      
      // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
      setEchoDataLoadingSteps1_2(false)
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ suggestEchoDataForSteps:', error)
      setEchoDataLoadingSteps1_2(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—É
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–∞–¥–µ—Ä–∞ –æ–∂–∏–¥–∞–Ω–∏—è –∞–ø—Ä—É–≤–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  const WaitingApprovalLoader = () => (
    <div className="max-w-2xl mx-auto">
      <div className="bg-white rounded-2xl shadow-lg border border-gray-100 p-8 mb-6">
        <div className="text-center">
          <div className="relative mb-6">
            <div className="w-20 h-20 border-4 border-orange-100 rounded-full flex items-center justify-center">
              <div className="w-12 h-12 border-4 border-orange-500 border-t-transparent rounded-full animate-spin"></div>
            </div>
            <div className="absolute -top-2 -right-2 w-6 h-6 bg-orange-500 rounded-full flex items-center justify-center">
              <div className="w-2 h-2 bg-white rounded-full animate-pulse"></div>
            </div>
          </div>
          
          <h3 className="text-xl font-semibold text-gray-800 mb-3">
            –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
          </h3>
          
          <p className="text-gray-600 mb-6 leading-relaxed">
            –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä—É. 
            –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
          </p>
          
          <div className="bg-gradient-to-r from-orange-50 to-yellow-50 border border-orange-200 rounded-xl p-4">
            <div className="flex items-center justify-between text-sm">
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-orange-500 rounded-full animate-pulse"></div>
                <span className="text-orange-700 font-medium">–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</span>
              </div>
              <div className="text-orange-600 font-mono text-xs">
                ID: {projectRequestId?.slice(-8)}
              </div>
            </div>
            <div className="mt-2 text-xs text-orange-600">
              –°—Ç–∞—Ç—É—Å: <span className="font-medium">waiting_approval</span>
            </div>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center">
              <svg className="w-4 h-4 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <div>
              <p className="text-sm font-medium text-gray-700">–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞</p>
              <p className="text-xs text-gray-500">–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ</p>
            </div>
          </div>
          <div className="text-xs text-gray-400">
            –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã...
          </div>
        </div>
      </div>
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–∞–¥–µ—Ä–∞ –æ–∂–∏–¥–∞–Ω–∏—è —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  const WaitingManagerReceiptLoader = () => (
    <div className="max-w-2xl mx-auto">
      <div className="bg-white rounded-2xl shadow-lg border border-gray-100 p-8 mb-6">
        <div className="text-center">
          <div className="relative mb-6">
            <div className="w-20 h-20 border-4 border-green-100 rounded-full flex items-center justify-center">
              <div className="w-12 h-12 border-4 border-green-500 border-t-transparent rounded-full animate-spin"></div>
            </div>
            <div className="absolute -top-2 -right-2 w-6 h-6 bg-green-500 rounded-full flex items-center justify-center">
              <div className="w-2 h-2 bg-white rounded-full animate-pulse"></div>
            </div>
          </div>
          
          <h3 className="text-xl font-semibold text-gray-800 mb-3">
            –û–∂–∏–¥–∞–Ω–∏–µ —á–µ–∫–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
          </h3>
          
          <p className="text-gray-600 mb-6 leading-relaxed">
            –ê–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —á–µ–∫. 
            –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
          </p>
          
          <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl p-4">
            <div className="flex items-center justify-between text-sm">
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                <span className="text-green-700 font-medium">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</span>
              </div>
              <div className="text-green-600 font-mono text-xs">
                ID: {projectRequestId?.slice(-8)}
              </div>
            </div>
            <div className="mt-2 text-xs text-green-600">
              –°—Ç–∞—Ç—É—Å: <span className="font-medium">waiting_manager_receipt</span>
            </div>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
              <svg className="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
              </svg>
            </div>
            <div>
              <p className="text-sm font-medium text-gray-700">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–≤–æ–¥</p>
              <p className="text-xs text-gray-500">–ê–≥–µ–Ω—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É</p>
            </div>
          </div>
          <div className="text-xs text-gray-400">
            –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥...
          </div>
        </div>
      </div>
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
  const RejectionMessage = () => (
    <div className="flex flex-col items-center justify-center space-y-4 p-8 bg-white rounded-lg shadow-lg">
      <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center">
        <X className="h-8 w-8 text-red-500" />
      </div>
      <div className="text-center">
        <h3 className="text-xl font-semibold text-red-700 mb-2">
          –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω
        </h3>
        <p className="text-sm text-gray-600 mb-4">
          {managerApprovalMessage || '–ú–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'}
        </p>
        <Button 
          onClick={() => {
            setManagerApprovalStatus(null)
            setCurrentStage(1)
          }}
          className="bg-red-500 hover:bg-red-600"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
        </Button>
      </div>
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —à–∞–≥–∞ 3 - –ü–ª–∞—Ç—ë–∂–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ä—Ç–∞–ø –ø—Ä–æ–µ–∫—Ç–æ–≤)
  const PaymentForm = () => {
    const [receiptFile, setReceiptFile] = useState<File | null>(null)
    const [receiptUrl, setReceiptUrl] = useState<string | null>(null)
    const [isUploading, setIsUploading] = useState(false)
    const [projectStatus, setProjectStatus] = useState<string | null>(null)
    const [error, setError] = useState<string | null>(null)
    const fileInputRef = useRef<HTMLInputElement>(null)
    const pollingRef = useRef<NodeJS.Timeout | null>(null)
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–º–µ—Å—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ
    const isWaitingApproval = receiptApprovalStatus === 'waiting'

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–ª–∞—Ç—ë–∂–∫–∏ –∏–∑ –∞—Ç–æ–º–∞—Ä–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
    const companyData = manualData[1] || {}
    const specificationData = manualData[2] || {}
    const items = specificationData.items || []
    const totalAmount = items.reduce((sum: number, item: any) => sum + (item.total || 0), 0)

    // Polling —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–æ–µ–∫—Ç–æ–≤)
    useEffect(() => {
      if (receiptApprovalStatus !== 'waiting' || !projectRequestId) return
      
      const checkStatus = async () => {
        try {
          // –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç –ø–æ atomic_request_id
          const { data, error } = await supabase
            .from('projects')
            .select('status, atomic_moderation_status')
            .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)
            .single()

          if (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error)
            return
          }

          if (data) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ª–æ–≥–∏–∫–∏ —á–µ–∫–æ–≤
            if (data.status === 'receipt_approved') {
              setReceiptApprovalStatus('approved')
              if (pollingRef.current) clearInterval(pollingRef.current)
              
              // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É (–∞–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏)
              setCurrentStage(3)
              console.log('‚úÖ –ß–µ–∫ –æ–¥–æ–±—Ä–µ–Ω - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç—Ç–∞–ø—É 3')
            }
            
            if (data.status === 'receipt_rejected') {
              setReceiptApprovalStatus('rejected')
              if (pollingRef.current) clearInterval(pollingRef.current)
              setError('–ß–µ–∫ –æ—Ç–∫–ª–æ–Ω—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—ã–π —á–µ–∫.')
            }
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ polling —Å—Ç–∞—Ç—É—Å–∞:', error)
        }
      }

      pollingRef.current = setInterval(checkStatus, 4000)
      return () => {
        if (pollingRef.current) clearInterval(pollingRef.current)
      }
    }, [receiptApprovalStatus, projectRequestId, setCurrentStage])

    // –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ä—Ç–∞–ø –ø—Ä–æ–µ–∫—Ç–æ–≤)
    const handleReceiptFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {
      const file = e.target.files?.[0]
      if (!file) return
      
      setIsUploading(true)
      setError(null)
      setReceiptFile(file)
      
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ bucket, —á—Ç–æ –∏ –≤ –æ–±—ã—á–Ω–æ–º —Å—Ç–∞—Ä—Ç–∞–ø–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
        const date = new Date().toISOString().slice(0,10).replace(/-/g, '')
        const cleanName = file.name.replace(/[^a-zA-Z0-9.]/g, '_')
        const filePath = `step3-supplier-receipts/${projectRequestId}/${date}_${cleanName}`
        
        const { data, error } = await supabase.storage
          .from("step3-supplier-receipts")
          .upload(filePath, file)
        
        if (error) {
          throw new Error(error.message)
        }
        
        const { data: urlData } = supabase.storage
          .from("step3-supplier-receipts")
          .getPublicUrl(filePath)
        
        setReceiptUrl(urlData?.publicUrl || "")
        setReceiptApprovalStatus('waiting')
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ waiting_receipt (–∫–∞–∫ –≤ –æ–±—ã—á–Ω–æ–º —Å—Ç–∞—Ä—Ç–∞–ø–µ)
        if (projectRequestId) {
          try {
            const { error: updateError } = await supabase
              .from('projects')
              .update({ 
                status: 'waiting_receipt',
                updated_at: new Date().toISOString()
              })
              .ilike('atomic_request_id', `%${projectRequestId.replace(/[^a-zA-Z0-9]/g, '')}%`)
            
            if (updateError) {
              console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:', updateError)
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É —á–µ—Ä–µ–∑ Telegram
            const response = await fetch('/api/telegram/send-receipt', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                projectRequestId,
                receiptUrl: urlData?.publicUrl,
                fileName: file.name
              })
            })
            
            if (!response.ok) {
              console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –≤ Telegram')
            }
          } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ–∫–∞:', error)
          }
        }
        
      } catch (error: any) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞:', error)
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞: " + error.message)
      } finally {
        console.log('üîç –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, isUploading = false')
        setIsUploading(false)
      }
    }

    const handleRemoveReceiptFile = async () => {
      setReceiptFile(null)
      setReceiptUrl(null)
      setReceiptApprovalStatus(null)
      setProjectStatus(null)
      setError(null)
    }

    // –†–µ–Ω–¥–µ—Ä –ø–ª–∞—Ç—ë–∂–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    const renderPaymentDetails = () => (
      <div className="bg-white rounded-lg p-6 mb-6 border border-gray-200 shadow-md">
        <h3 className="text-xl font-bold mb-6 text-center">–ü–ª–∞—Ç—ë–∂–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</h3>
        <div className="flex flex-col md:flex-row gap-8 mb-6">
          {/* –ü–ª–∞—Ç–µ–ª—å—â–∏–∫ */}
          <div className="flex-1 min-w-[220px]">
            <div className="text-lg font-semibold mb-2 text-gray-700">–ü–ª–∞—Ç–µ–ª—å—â–∏–∫</div>
            <div className="grid grid-cols-1 gap-y-1 text-sm">
              <div><span className="text-gray-500">–ö–æ–º–ø–∞–Ω–∏—è:</span> <span className="font-medium">{companyData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span></div>
              <div><span className="text-gray-500">–ò–ù–ù:</span> {companyData.inn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
              <div><span className="text-gray-500">–ë–∞–Ω–∫:</span> {companyData.bankName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
              <div><span className="text-gray-500">–°—á—ë—Ç:</span> {companyData.bankAccount || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
              <div><span className="text-gray-500">–ë–ò–ö:</span> {companyData.bik || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
            </div>
          </div>
          {/* –ü–æ–ª—É—á–∞—Ç–µ–ª—å */}
          <div className="flex-1 min-w-[220px]">
            <div className="text-lg font-semibold mb-2 text-gray-700">–ü–æ–ª—É—á–∞—Ç–µ–ª—å</div>
            <div className="grid grid-cols-1 gap-y-1 text-sm">
              <div><span className="text-gray-500">–ö–æ–º–ø–∞–Ω–∏—è:</span> <span className="font-medium">–û–û–û "–°—Ç—Ä–æ–π–ú–∞—Ä–∫–µ—Ç-–ú–æ—Å–∫–≤–∞"</span></div>
              <div><span className="text-gray-500">–ë–∞–Ω–∫:</span> –ê–û "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫"</div>
              <div><span className="text-gray-500">–°—á—ë—Ç:</span> 40702810400000012345</div>
              <div><span className="text-gray-500">–ë–ò–ö:</span> 044525593</div>
            </div>
          </div>
        </div>
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ */}
        <div className="bg-gray-50 rounded-lg p-4 mb-4 border border-gray-200">
          <div className="flex flex-col md:flex-row md:items-center md:gap-8 mb-2">
            <div className="flex-1">
              <div className="text-gray-500 text-sm">–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞</div>
              <div className="font-semibold text-blue-700">–û–ø–ª–∞—Ç–∞ –ø–æ –∞—Ç–æ–º–∞—Ä–Ω–æ–π —Å–¥–µ–ª–∫–µ</div>
              <div className="text-gray-500 text-xs mt-1">ID –∑–∞–ø—Ä–æ—Å–∞: {projectRequestId}</div>
            </div>
            <div className="flex-1 flex md:justify-end mt-4 md:mt-0">
              <div>
                <div className="text-gray-500 text-sm">–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ</div>
                <div className="text-2xl font-bold text-green-700">{totalAmount > 0 ? `${totalAmount} USD` : '‚Äî'}</div>
              </div>
            </div>
          </div>
        </div>
        {/* –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è */}
        {items.length > 0 && (
          <>
            <h4 className="font-semibold mt-6 mb-2 text-gray-800">–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è</h4>
            <table className="min-w-full text-sm border rounded overflow-hidden">
              <thead>
                <tr className="bg-gray-100 text-gray-600">
                  <th className="px-3 py-2 text-left font-medium">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
                  <th className="px-3 py-2 text-left font-medium">–ö–æ–¥</th>
                  <th className="px-3 py-2 text-left font-medium">–ö–æ–ª-–≤–æ</th>
                  <th className="px-3 py-2 text-left font-medium">–ï–¥. –∏–∑–º.</th>
                  <th className="px-3 py-2 text-left font-medium">–¶–µ–Ω–∞</th>
                  <th className="px-3 py-2 text-left font-medium">–°—É–º–º–∞</th>
                </tr>
              </thead>
              <tbody>
                {items.map((item: any, idx: number) => (
                  <tr key={idx} className={idx % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                    <td className="px-3 py-2">{item.name}</td>
                    <td className="px-3 py-2">{item.code || '‚Äî'}</td>
                    <td className="px-3 py-2">{item.quantity}</td>
                    <td className="px-3 py-2">{item.unit || '—à—Ç'}</td>
                    <td className="px-3 py-2">{item.price}</td>
                    <td className="px-3 py-2">{item.total}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </>
        )}
      </div>
    )

    return (
      <div className="max-w-2xl mx-auto mt-8 text-gray-900">
        <div className="mb-6">
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
            <span className="text-blue-800">
              {isWaitingApproval
                ? "–ß–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω, –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
                : "–û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ"}
            </span>
          </div>
          
          {/* –ü–ª–∞—Ç—ë–∂–∫–∞ */}
          <div id="payment-details-html">{renderPaymentDetails()}</div>
          
          {/* –§–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ–∫–∞ –∏–ª–∏ –ª–æ—É–¥–µ—Ä */}
          {!isWaitingApproval ? (
            <div className="bg-white rounded-lg p-6 mb-6 flex flex-col items-center border border-gray-200">
              <Label className="mb-2 text-lg font-semibold">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ–∫</Label>
              <input 
                type="file" 
                accept=".pdf,.jpg,.jpeg,.png" 
                className="hidden" 
                ref={fileInputRef} 
                onChange={handleReceiptFileChange}
              />
              {!receiptUrl ? (
                <Button 
                  onClick={() => fileInputRef.current?.click()} 
                  disabled={isUploading} 
                  className="mb-2 bg-blue-500 hover:bg-blue-600 text-white"
                >
                  <Upload className="w-5 h-5 mr-2"/> –ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫
                </Button>
              ) : (
                <div className="flex flex-col items-center gap-2">
                  <a href={receiptUrl} target="_blank" rel="noopener noreferrer" className="text-blue-600 underline">
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ–∫
                  </a>
                  <Button variant="destructive" onClick={handleRemoveReceiptFile}>
                    –£–¥–∞–ª–∏—Ç—å —á–µ–∫
                  </Button>
                </div>
              )}
              {isUploading && <div className="text-blue-500 mt-2">–ó–∞–≥—Ä—É–∑–∫–∞...</div>}
            </div>
          ) : (
            <div className="max-w-2xl mx-auto">
              <div className="bg-white rounded-2xl shadow-lg border border-gray-100 p-8 mb-6">
                <div className="text-center">
                  <div className="relative mb-6">
                    <div className="w-20 h-20 border-4 border-blue-100 rounded-full flex items-center justify-center">
                      <div className="w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
                    </div>
                    <div className="absolute -top-2 -right-2 w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center">
                      <div className="w-2 h-2 bg-white rounded-full animate-pulse"></div>
                    </div>
                  </div>
                  
                  <h3 className="text-xl font-semibold text-gray-800 mb-3">
                    –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
                  </h3>
                  
                  <p className="text-gray-600 mb-6 leading-relaxed">
                    –í–∞—à —á–µ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. 
                    –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.
                  </p>
                  
                  <div className="bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-xl p-4">
                    <div className="flex items-center justify-between text-sm">
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
                        <span className="text-blue-700 font-medium">–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</span>
                      </div>
                      <div className="text-blue-600 font-mono text-xs">
                        ID: {projectRequestId?.slice(-8)}
                      </div>
                    </div>
                    <div className="mt-2 text-xs text-blue-600">
                      –°—Ç–∞—Ç—É—Å: <span className="font-medium">waiting_receipt</span>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
              <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                      <svg className="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                    </div>
                    <div>
                      <p className="text-sm font-medium text-gray-700">–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞</p>
                      <p className="text-xs text-gray-500">–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á–µ–∫</p>
                    </div>
                  </div>
                  <div className="text-xs text-gray-400">
                    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã...
                  </div>
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
              {projectStatus === 'approved' && (
                <div className="mt-6 text-center">
                  <Button 
                    className="bg-green-600 hover:bg-green-700 text-white" 
                    onClick={() => setCurrentStage(3)}
                  >
                    –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏
                  </Button>
                </div>
              )}
              {projectStatus === 'rejected' && (
                <div className="mt-6 text-center">
                  <div className="text-red-600 font-semibold mb-2">–ê—Ç–æ–º–∞—Ä–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º</div>
                  <div className="text-gray-700 text-sm mb-4">
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ.
                  </div>
                  <Button 
                    className="bg-blue-500 hover:bg-blue-600 text-white" 
                    onClick={handleRemoveReceiptFile}
                  >
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —á–µ–∫
                  </Button>
                </div>
              )}
            </div>
          )}
          
          {/* –î–µ–±–∞–≥-–ø–æ–ª–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫ */}
          {error && (
            <div className="mt-6 p-4 bg-red-50 border border-red-200 rounded text-red-800 text-sm whitespace-pre-wrap">
              <b>–û—à–∏–±–∫–∞:</b> {error}
            </div>
          )}
        </div>
      </div>
    )
  }

  const handleSendToManager = async () => {
    try {
      setSendingToManager(true)
      
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—É:', {
        stepConfigs,
        manualData,
        uploadedFiles,
        currentStage: getCurrentStage(),
        activeScenario: getActiveScenario()
      })

      const response = await fetch('/api/atomic-constructor/send-to-manager', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`
        },
        body: JSON.stringify({
          stepConfigs,
          manualData,
          uploadedFiles,
          user,
          currentStage: getCurrentStage(),
          activeScenario: getActiveScenario()
        })
      })

      const result = await response.json()

      if (result.success) {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –∏ ID –∑–∞–ø—Ä–æ—Å–∞
        setManagerApprovalStatus('pending')
        setProjectRequestId(result.requestId || `atomic_${Date.now()}`)
        
        setManagerNotification({
          show: true,
          type: 'success',
          message: `–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É! ID –∑–∞–ø—Ä–æ—Å–∞: ${result.requestId}`
        })
      } else {
        throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É:', error)
      setManagerNotification({
        show: true,
        type: 'error',
        message: `–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
      })
    } finally {
      setSendingToManager(false)
    }
  }

  return (
    <div className="container mx-auto py-8 pb-24">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between mb-8">
        <div className="flex items-center gap-3">
          <Blocks className="h-8 w-8 text-blue-500" />
          <h1 className="text-3xl font-bold">–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∞—Ç–æ–º–∞—Ä–Ω—ã—Ö —Å–¥–µ–ª–æ–∫</h1>
          <div className="text-sm text-gray-600 ml-4">
            –≠—Ç–∞–ø: {currentStage} | –°—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {managerApprovalStatus || 'null'} | –°—Ç–∞—Ç—É—Å —á–µ–∫–∞: {receiptApprovalStatus || 'null'}
          </div>
        </div>
        <div className="flex gap-4 justify-end">
          <Button 
            onClick={handleSendToManager}
            disabled={sendingToManager}
            className="gap-2"
            variant="outline"
          >
            {sendingToManager ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500"></div>
                –û—Ç–ø—Ä–∞–≤–∫–∞...
              </>
            ) : (
              <>
                <Send className="h-4 w-4" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É
              </>
            )}
          </Button>
          <Button className="gap-2">
            –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
            <ArrowRight className="w-4 h-4" />
          </Button>
        </div>
      </div>



      {/* Block 1: 7 –∫—É–±–∏–∫–æ–≤-—à–∞–≥–æ–≤ */}
      <Card className="mb-8">
        <CardContent className="p-6">
          <div className="flex items-center justify-between mb-6">
            <div>
              <h2 className="text-xl font-bold">–®–∞–≥–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞</h2>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞</p>
            </div>
            <div className="flex items-center gap-4">
              <div className="text-sm">
                <span className="font-medium">–≠—Ç–∞–ø {currentStage}: </span>
                <span className="text-gray-600">
                  {currentStage === 1 ? '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö' : 
                   currentStage === 2 ? '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã' : 
                   '–ê–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏'}
                </span>
              </div>
              <div className="text-sm">
                <span className="font-medium">–°—Ü–µ–Ω–∞—Ä–∏–π: </span>
                <span className="text-gray-600">
                  {getActiveScenario() === 'A' ? '–ê (–ö–ª–∏–µ–Ω—Ç-–ø–æ–∫—É–ø–∞—Ç–µ–ª—å)' :
                   getActiveScenario() === 'B1' ? '–ë1 (–ü–æ—Å—Ç–∞–≤—â–∏–∫-—Ç–æ–≤–∞—Ä—ã)' :
                   getActiveScenario() === 'B2' ? '–ë2 (–ü–æ—Å—Ç–∞–≤—â–∏–∫-—Ä–µ–∫–≤–∏–∑–∏—Ç—ã)' : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}
                </span>
              </div>
            </div>
          </div>
          
          {/* –í—Å–µ 7 –∫—É–±–∏–∫–æ–≤ –≤ –æ–¥–Ω–æ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏ */}
          <div className="grid grid-cols-7 gap-4">
            {constructorSteps.map((step) => {
              const isEnabled = isStepEnabled(step.id)
              

              
              return (
              <div
                key={step.id}
                  className={`relative transition-all duration-300 ${
                    isEnabled ? 'cursor-pointer opacity-100' : 'cursor-not-allowed opacity-50'
                  }`}
                onMouseEnter={() => isEnabled ? handleStepHover(step.id) : null}
                  onClick={() => isEnabled ? handleStepClick(step.id) : null}
              >

                
                <div className={`
                    aspect-square rounded-lg border-2 p-4 flex flex-col items-center justify-center relative group
                  ${(stepConfigs[step.id] && manualData[step.id]?.user_choice) || 
                    (stepConfigs[step.id] && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) || 
                    (manualData[step.id] && Object.keys(manualData[step.id]).length > 0 && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) ||
                    (step.id === 3 && receiptApprovalStatus === 'approved') ||
                    (step.id === 6 && hasManagerReceipt) ||
                    (step.id === 7 && clientReceiptUrl)
                                          ? 'border-blue-500 border-dashed bg-blue-50'
                                          : (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && ((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2) && isEnabled
                                            ? 'border-purple-400 bg-purple-50 hover:border-purple-500'
                                            : isEnabled
                                              ? 'border-gray-300 hover:border-blue-400'
                                              : 'border-gray-200 bg-gray-50'
                                        }
                  `}>
                               {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —à–∞–≥–∞ —Å tooltip */}
             {!isEnabled && (
               <div className="absolute inset-0 bg-gray-100/80 rounded-lg flex items-center justify-center group">
                 <div className="text-center">
                   <Lock className="h-6 w-6 text-gray-400 mx-auto mb-1" />
                   <p className="text-xs text-gray-500">–≠—Ç–∞–ø {getCurrentStage() === 1 ? '2' : '1'}</p>
                 </div>
                 
                 {/* Tooltip –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
                 <div className="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-50">
                   <div className="text-center">
                     <p className="font-medium">
                       {step.id === 3 ? '–î–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞' :
                        step.id === 6 ? '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è' :
                        step.id === 7 ? '–ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞' : '–û—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ'}
                     </p>
                     <p className="text-gray-300">
                       {step.id === 3 ? '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π' :
                        step.id === 6 ? '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ª–æ–≤–∏–π –æ–ø–ª–∞—Ç—ã –∏ –¥–æ—Å—Ç–∞–≤–∫–∏' :
                        step.id === 7 ? '–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–¥–µ–ª–∫–∏' : '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —à–∞–≥–∏ 1, 2, 4, 5 –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è'}
                     </p>
                   </div>
                   {/* –°—Ç—Ä–µ–ª–∫–∞ –≤–Ω–∏–∑ */}
                   <div className="absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-800"></div>
                 </div>
               </div>
             )}
                    {/* –ò–∫–æ–Ω–∫–∞ –∑–∞–º–∫–∞ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —à–∞–≥–æ–≤ */}
                    {!isEnabled && (
                      <div className="absolute top-2 left-2">
                        <Lock className="h-4 w-4 text-gray-400" />
                      </div>
                    )}
                    
                    
                                        
                                        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–≥–æ–≤ 1 –∏ 2 */}
                                        {(step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && ((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2) && (
                      <div className="absolute top-2 left-2">
                                            <div className="w-4 h-4 bg-purple-500 rounded-full flex items-center justify-center">
                                              <span className="text-white text-xs">üìä</span>
                                            </div>
                                          </div>
                                        )}
                                        
                                        {/* –õ–æ–∞–¥–µ—Ä —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–∞–≥–æ–≤ 1 –∏ 2 */}
                                        {(step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && echoDataLoadingSteps1_2 && (
                      <div className="absolute top-2 left-2">
                                            <div className="w-4 h-4 bg-purple-500 rounded-full flex items-center justify-center">
                                              <Loader className="w-3 h-3 text-white animate-spin" />
                                            </div>
                                          </div>
                                        )}
                    
                  {/* –†–∏–º—Å–∫–∞—è —Ü–∏—Ñ—Ä–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É */}
                  <div className={`absolute top-2 right-2 w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${
                      isEnabled 
                        ? (stepConfigs[step.id] && manualData[step.id]?.user_choice) || 
                           (stepConfigs[step.id] && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) || 
                           (manualData[step.id] && Object.keys(manualData[step.id]).length > 0 && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) ||
                           (step.id === 3 && receiptApprovalStatus === 'approved') ||
                           (step.id === 6 && hasManagerReceipt) ||
                           (step.id === 7 && clientReceiptUrl)
                          ? 'bg-blue-500 text-white'
                          : (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && ((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2)
                            ? 'bg-purple-500 text-white'
                            : 'bg-gray-400 text-white'
                        : 'bg-gray-300 text-gray-500'
                    }`}>
                    {step.id === 1 ? 'I' : step.id === 2 ? 'II' : step.id === 3 ? 'III' : 
                     step.id === 4 ? 'IV' : step.id === 5 ? 'V' : step.id === 6 ? 'VI' : 'VII'}
                  </div>
                  
                  {/* –ò–∫–æ–Ω–∫–∞ —à–∞–≥–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ */}
                  <div className="mb-2">
                    {stepIcons[step.id] && React.createElement(stepIcons[step.id] as React.ComponentType<any>, { 
                        className: `h-6 w-6 ${
                          isEnabled 
                            ? (stepConfigs[step.id] && manualData[step.id]?.user_choice) || 
                               (stepConfigs[step.id] && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) || 
                               (manualData[step.id] && Object.keys(manualData[step.id]).length > 0 && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) ||
                               (step.id === 3 && receiptApprovalStatus === 'approved')
                              ? 'text-blue-600'
                              : (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && ((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2)
                                ? 'text-purple-600'
                                : 'text-gray-600'
                            : 'text-gray-400'
                        }` 
                    })}
                  </div>
                  
                  {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ */}
                    <div className={`text-sm font-medium text-center ${
                      isEnabled 
                        ? (stepConfigs[step.id] && manualData[step.id]?.user_choice) || 
                           (stepConfigs[step.id] && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) || 
                           (manualData[step.id] && Object.keys(manualData[step.id]).length > 0 && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) ||
                           (step.id === 3 && receiptApprovalStatus === 'approved')
                          ? 'text-gray-800' 
                          : (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && ((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2)
                            ? 'text-purple-800'
                            : 'text-gray-600'
                        : 'text-gray-500'
                    }`}>
                      {step.name}
                    </div>
                    <div className={`text-xs text-center mt-1 ${
                      isEnabled 
                        ? (stepConfigs[step.id] && manualData[step.id]?.user_choice) || 
                           (stepConfigs[step.id] && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) || 
                           (manualData[step.id] && Object.keys(manualData[step.id]).length > 0 && (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5)) ||
                           (step.id === 3 && receiptApprovalStatus === 'approved')
                          ? 'text-gray-500' 
                          : (step.id === 1 || step.id === 2 || step.id === 4 || step.id === 5) && ((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2)
                            ? 'text-purple-600'
                            : 'text-gray-400'
                        : 'text-gray-400'
                    }`}>
                      {step.description}
                    </div>
                  
                  {/* –ë–µ–π–¥–∂ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –¥–∞–Ω–Ω—ã—Ö */}
                  {stepConfigs[step.id] && (
                    <div className="mt-2">
                      <Badge variant="secondary" className="text-xs">
                        {dataSources[stepConfigs[step.id] as keyof typeof dataSources]?.name}
                      </Badge>
                    </div>
                  )}
                    

                </div>
              </div>
              )
            })}
          </div>
        </CardContent>
      </Card>

      {/* Block 2: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏ */}
      <Card className="mb-8">
        <CardContent className="p-6">
          {currentStage === 3 ? (
                            <h2 className="text-xl font-bold mb-6">üìä –ú–æ–Ω–∏—Ç–æ—Ä —Å–¥–µ–ª–∫–∏</h2>
          ) : (
            <h2 className="text-xl font-bold mb-6">–û–±–ª–∞—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
          )}
          
          {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ */}
          {autoFillNotification && currentStage !== 3 && (
            <div className="bg-green-50 border-l-4 border-green-400 p-4 mb-4 rounded-r-lg">
              <div className="flex items-center">
                <CheckCircle className="h-5 w-5 text-green-500 mr-2" />
                <div>
                  <p className="text-green-700 font-medium">{autoFillNotification.message}</p>
                  <p className="text-green-600 text-sm">
                    –ü–æ—Å—Ç–∞–≤—â–∏–∫: {autoFillNotification.supplierName} | 
                    –ó–∞–ø–æ–ª–Ω–µ–Ω—ã —à–∞–≥–∏: {autoFillNotification.filledSteps.map(step => 
                      step === 4 ? 'IV' : step === 5 ? 'V' : step
                    ).join(', ')}
                  </p>
                </div>
                <button 
                  onClick={() => setAutoFillNotification(null)}
                  className="ml-auto text-green-400 hover:text-green-600"
                >
                  <X className="h-4 w-4" />
                </button>
              </div>
            </div>
          )}

          {/* –≠—Ç–∞–ø 2: –û–∂–∏–¥–∞–Ω–∏–µ –∞–ø—Ä—É–≤–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–ª–∏ –ø–ª–∞—Ç–µ–∂–∫–∞ */}
          {currentStage === 2 ? (
            <div className="min-h-[400px] flex items-center justify-center">
                          <div className="text-center">
              <div className="text-lg font-semibold mb-4">–≠—Ç–∞–ø 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã</div>
              <div className="text-sm text-gray-600 mb-4">
                –°—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {managerApprovalStatus || 'null'}
              </div>
              {managerApprovalStatus === 'pending' && <WaitingApprovalLoader />}
              {managerApprovalStatus === 'approved' && <PaymentForm />}
              {managerApprovalStatus === 'rejected' && <RejectionMessage />}
              {!managerApprovalStatus && (
                <div className="text-red-500">
                  –û—à–∏–±–∫–∞: —Å—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                </div>
              )}
            </div>
            </div>
          ) : currentStage === 3 && receiptApprovalStatus !== 'approved' ? (
            <div className="min-h-[400px] bg-gradient-to-br from-blue-50 to-green-50 rounded-lg p-8 relative overflow-hidden">
              {/* –°—Ç–∞—Ç—É—Å –∞–Ω–∏–º–∞—Ü–∏–∏ */}
              <div className="text-center mb-6">
                <div className="text-lg font-semibold text-gray-800 mb-2">
                  {dealAnimationStatus}
                </div>
                <div className="text-sm text-gray-600">
                  –®–∞–≥ {dealAnimationStep + 1} –∏–∑ 4
                </div>
              </div>

              {/* –ê–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ü–µ–Ω–∞ */}
              <div className="relative h-64 bg-white rounded-lg shadow-lg border-2 border-gray-200">
                {/* –ö–ª–∏–µ–Ω—Ç (—Å–∏–Ω–∏–π) - —Å–ª–µ–≤–∞ */}
                <div
                  className="absolute left-4 top-1/2 transform -translate-y-1/2 transition-all duration-2000 ease-in-out"
                  style={{
                    transform: `translateY(-50%) translateX(${dealAnimationStep >= 1 ? 200 : 0}px) translateY(${dealAnimationStep >= 3 ? -20 : 0}px)`
                  }}
                >
                  <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold shadow-lg">
                    üë§
                  </div>
                  <div className="text-center mt-2 text-xs font-medium text-blue-700">
                    –ö–ª–∏–µ–Ω—Ç
                  </div>
                </div>

                {/* –ü–æ—Å—Ç–∞–≤—â–∏–∫ (–∑–µ–ª–µ–Ω—ã–π) - —Å–ø—Ä–∞–≤–∞ */}
                <div
                  className="absolute right-4 top-1/2 transform -translate-y-1/2 transition-all duration-2000 ease-in-out"
                  style={{
                    transform: `translateY(-50%) translateX(${dealAnimationStep >= 1 ? -200 : 0}px) translateY(${dealAnimationStep >= 3 ? -20 : 0}px)`
                  }}
                >
                  <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center text-white font-bold shadow-lg">
                    üè¢
                  </div>
                  <div className="text-center mt-2 text-xs font-medium text-green-700">
                    –ü–æ—Å—Ç–∞–≤—â–∏–∫
                  </div>
                </div>

                {/* –ú–µ–Ω–µ–¥–∂–µ—Ä (–æ—Ä–∞–Ω–∂–µ–≤—ã–π) - –≤ —Ü–µ–Ω—Ç—Ä–µ */}
                <div
                  className="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 transition-all duration-1000 ease-in-out"
                  style={{
                    transform: `translateX(-50%) translateY(-50%) scale(${dealAnimationStep >= 2 ? 1.2 : 1}) translateY(${dealAnimationStep >= 3 ? -20 : 0}px)`
                  }}
                >
                  <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center text-white font-bold shadow-lg">
                    üë®‚Äçüíº
                  </div>
                  <div className="text-center mt-2 text-xs font-medium text-orange-700">
                    –ú–µ–Ω–µ–¥–∂–µ—Ä
                  </div>
                </div>

                {/* –õ–∏–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
                {dealAnimationStep >= 3 && (
                  <div
                    className="absolute inset-0 flex items-center justify-center transition-opacity duration-500"
                    style={{ opacity: 1 }}
                  >
                    <div className="w-full h-0.5 bg-gradient-to-r from-blue-500 via-orange-500 to-green-500 rounded-full"></div>
                  </div>
                )}

                {/* –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ */}
                {dealAnimationComplete && (
                  <div
                    className="absolute inset-0 flex items-center justify-center transition-all duration-500"
                    style={{ opacity: 1, transform: 'scale(1)' }}
                  >
                    <div className="bg-green-100 border-2 border-green-300 rounded-lg p-4 text-center">
                      <div className="text-2xl mb-2">üéâ</div>
                      <div className="text-green-800 font-semibold">–°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</div>
                      <div className="text-green-600 text-sm">–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å</div>
                    </div>
                  </div>
                )}
              </div>

              {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ */}
              <div className="mt-6">
                <div className="flex justify-between text-xs text-gray-600 mb-2">
                  <span>–ù–∞—á–∞–ª–æ</span>
                  <span>–î–≤–∏–∂–µ–Ω–∏–µ</span>
                  <span>–ü—Ä–æ–≤–µ—Ä–∫–∞</span>
                  <span>–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div
                    className="bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-500"
                    style={{ width: `${((dealAnimationStep + 1) / 4) * 100}%` }}
                  />
                </div>
              </div>


            </div>
          ) : currentStage === 3 && receiptApprovalStatus === 'approved' ? (
            <div className="min-h-[400px] bg-gradient-to-br from-green-50 to-blue-50 rounded-lg p-8 relative overflow-hidden">
              <div className="text-center">
                <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center justify-center gap-2">
                  <Download className="h-5 w-5 text-green-600" />
                  –®–∞–≥ 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
                </h3>
                
                {hasManagerReceipt ? (
                  <div className="space-y-4">
                    <div className="bg-green-100 border border-green-300 rounded-lg p-4">
                      <div className="flex items-center gap-2 mb-2">
                        <CheckCircle className="h-5 w-5 text-green-600" />
                        <span className="font-semibold text-green-800">–ß–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≥–æ—Ç–æ–≤!</span>
                      </div>
                      <p className="text-green-700 text-sm mb-3">
                        –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≥—Ä—É–∑–∏–ª —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –µ–≥–æ.
                      </p>
                      {managerReceiptUrl && (
                        <Button 
                          onClick={() => window.open(managerReceiptUrl, '_blank')}
                          className="bg-green-600 hover:bg-green-700 text-white"
                        >
                          <Download className="h-4 w-4 mr-2" />
                          –°–∫–∞—á–∞—Ç—å —á–µ–∫
                        </Button>
                      )}
                      
                      {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ 7-–π —à–∞–≥ */}
                      <div className="mt-4 pt-4 border-t border-green-200">
                        <div className="bg-orange-50 border border-orange-200 rounded-lg p-3">
                          <p className="text-sm text-orange-700 mb-3">
                            –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–≥—Ä—É–∑–∫–µ —á–µ–∫–∞ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                          </p>
                          <Button 
                            onClick={() => setCurrentStage(4)}
                            className="bg-orange-600 hover:bg-orange-700 text-white w-full"
                          >
                            <Upload className="h-4 w-4 mr-2" />
                            –ü–µ—Ä–µ–π—Ç–∏ –∫ –®–∞–≥—É 7: –ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏
                          </Button>
                        </div>
                      </div>
                    </div>


                  </div>
                ) : (
                  <div className="space-y-4">
                    {isRequestSent ? (
                      <div className="space-y-4">
                        {showFullLoader ? (
                          <WaitingManagerReceiptLoader />
                        ) : (
                          <div className="bg-blue-100 border border-blue-300 rounded-lg p-4">
                            <div className="flex items-center gap-2 mb-2">
                              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
                              <span className="font-semibold text-blue-800">–û–∂–∏–¥–∞–µ–º —á–µ–∫ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞</span>
                            </div>
                            <p className="text-blue-700 text-sm">
                              –ê–≥–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —á–µ–∫. –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–æ–≥–¥–∞ —á–µ–∫ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤.
                            </p>
                            <div className="mt-3 text-xs text-blue-600">
                              <strong>ID –ø—Ä–æ–µ–∫—Ç–∞:</strong> {projectRequestId}
                            </div>
                            <Button 
                              variant="outline" 
                              size="sm" 
                              onClick={() => setShowFullLoader(true)}
                              className="mt-3 text-blue-600 border-blue-300 hover:bg-blue-50"
                            >
                              –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
                            </Button>
                          </div>
                        )}
                        {showFullLoader && (
                          <Button 
                            variant="outline" 
                            size="sm" 
                            onClick={() => setShowFullLoader(false)}
                            className="text-gray-600 border-gray-300 hover:bg-gray-50"
                          >
                            –°–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
                          </Button>
                        )}
                      </div>
                    ) : (
                      <div className="bg-yellow-100 border border-yellow-300 rounded-lg p-4">
                        <div className="flex items-center gap-2 mb-2">
                          <div className="w-4 h-4 rounded-full bg-yellow-500"></div>
                          <span className="font-semibold text-yellow-800">–ì–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞</span>
                        </div>
                        <p className="text-yellow-700 text-sm mb-3">
                          –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —á–µ–∫–∞.
                        </p>
                        <Button 
                          onClick={sendManagerReceiptRequest}
                          disabled={isRequestSent}
                          className="bg-yellow-600 hover:bg-yellow-700 text-white"
                        >
                          üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É
                        </Button>
                      </div>
                    )}
                    

                  </div>
                )}
              </div>
            </div>



          ) : currentStage === 4 ? (
            <div className="min-h-[400px] bg-gradient-to-br from-orange-50 to-red-50 rounded-lg p-8 relative overflow-hidden">
              <div className="text-center">
                <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center justify-center gap-2">
                  <Upload className="h-5 w-5 text-orange-600" />
                  –®–∞–≥ 7: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤
                </h3>
                
                <div className="space-y-4">
                  <div className="bg-orange-100 border border-orange-300 rounded-lg p-4">
                    <h4 className="font-semibold mb-3 flex items-center gap-2 text-orange-800">
                      <Upload className="h-4 w-4" />
                      –ó–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ–∫ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤
                    </h4>
                    
                    {!clientReceiptUrl ? (
                      <div className="space-y-3">
                        <p className="text-sm text-orange-700">
                          –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ–∫ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π —á—Ç–æ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.
                        </p>
                        
                        {clientReceiptUploadError && (
                          <div className="text-red-600 text-sm bg-red-50 p-2 rounded">
                            {clientReceiptUploadError}
                          </div>
                        )}
                        
                        <div className="flex flex-col gap-2">
                          <input
                            type="file"
                            accept="image/*,application/pdf"
                            onChange={handleClientReceiptUpload}
                            className="hidden"
                            id="client-receipt-upload-stage4"
                          />
                          
                          <Button
                            onClick={() => document.getElementById('client-receipt-upload-stage4')?.click()}
                            disabled={isUploadingClientReceipt}
                            variant="outline"
                            className="w-full border-orange-300 hover:border-orange-400 text-orange-800"
                          >
                            {isUploadingClientReceipt ? (
                              <>
                                <Clock className="h-4 w-4 mr-2 animate-spin" />
                                –ó–∞–≥—Ä—É–∂–∞—é —á–µ–∫...
                              </>
                            ) : (
                              <>
                                <Upload className="h-4 w-4 mr-2" />
                                –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª —á–µ–∫–∞
                              </>
                            )}
                          </Button>
                          
                          <p className="text-xs text-gray-500 text-center">
                            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, PDF (–º–∞–∫—Å. 50 –ú–ë)
                          </p>
                        </div>
                      </div>
                    ) : (
                      <div className="space-y-3">
                        <div className="flex items-center gap-3">
                          <CheckCircle className="h-5 w-5 text-green-500" />
                          <div className="flex-1">
                            <p className="font-medium text-green-800">–ß–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É</p>
                            <a 
                              href={clientReceiptUrl} 
                              target="_blank" 
                              rel="noopener noreferrer"
                              className="text-orange-600 hover:underline text-sm"
                            >
                              –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —á–µ–∫ ‚Üí
                            </a>
                          </div>
                          <Button
                            onClick={handleRemoveClientReceipt}
                            variant="outline"
                            size="sm"
                            className="text-red-600 border-red-300 hover:border-red-400"
                          >
                            <X className="h-4 w-4 mr-1" />
                            –£–¥–∞–ª–∏—Ç—å
                          </Button>
                        </div>
                        
                        <div className="bg-green-50 border border-green-200 rounded p-3">
                          <p className="text-sm text-green-700">
                            ‚úÖ –í–∞—à —á–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–µ–∫—Ç.
                          </p>
                        </div>
                        
                        {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" */}
                        <div className="flex justify-center mt-4">
                          <Button
                            onClick={handleShowProjectDetails}
                            variant="outline"
                            className="text-blue-600 border-blue-300 hover:border-blue-400 hover:bg-blue-50"
                          >
                            <Eye className="h-4 w-4 mr-2" />
                            –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–µ–∫—Ç–µ
                          </Button>
                        </div>
                      </div>
                    )}
                  </div>
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ 6-–º—É —à–∞–≥—É */}
                  <div className="mt-4">
                    <Button 
                      onClick={() => setCurrentStage(3)}
                      variant="outline"
                      className="text-gray-600 border-gray-300 hover:bg-gray-50"
                    >
                      <ArrowLeft className="h-4 w-4 mr-2" />
                      –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –®–∞–≥—É 6
                    </Button>
                  </div>
                </div>
              </div>
            </div>

          ) : (
            <div className="min-h-[200px] border-2 border-dashed border-gray-300 rounded-lg p-6 relative">
            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
            {lastHoveredStep && stepConfigs[lastHoveredStep] && (
              <div className="absolute top-4 right-4 z-10 flex flex-col gap-2">
                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
                <Button 
                  variant="outline" 
                  size="sm"
                  onClick={() => handleRemoveSource(lastHoveredStep)}
                  className="text-red-500 border-red-200 hover:bg-red-50 hover:border-red-300 hover:text-red-600 transition-all duration-200 shadow-sm hover:shadow-md bg-white"
                >
                  <div className="flex items-center gap-2">
                    <div className="w-5 h-5 rounded-full bg-red-100 flex items-center justify-center">
                      <X className="h-3 w-3 text-red-500" />
                    </div>
                    <span className="font-medium">–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</span>
                  </div>
                </Button>
                

                
                {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —à–∞–≥–∞ 2) */}
                {lastHoveredStep === 2 && (
                  <Button 
                    variant="outline" 
                    size="sm"
                    onClick={() => handleAddProductsFromCatalog()}
                    className="text-orange-600 border-orange-200 hover:bg-orange-50 hover:border-orange-300 hover:text-orange-700 transition-all duration-200 shadow-sm hover:shadow-md bg-white"
                  >
                    <div className="flex items-center gap-2">
                      <div className="w-5 h-5 rounded-full bg-orange-100 flex items-center justify-center">
                        <Plus className="h-3 w-3 text-orange-600" />
                      </div>
                      <span className="font-medium">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã</span>
                    </div>
                  </Button>
                )}
              </div>
            )}
            

            <AnimatePresence>
              {lastHoveredStep && isStepEnabled(lastHoveredStep) ? (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -20 }}
                  style={{ height: '100%' }}
                >
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–≥–∞ */}
                  <div className="text-center mb-6">
                    <div className="flex items-center justify-center gap-3 mb-2">
                      <div className="w-8 h-8 rounded-full bg-blue-500 text-white flex items-center justify-center text-sm font-bold">
                        {lastHoveredStep === 1 ? 'I' : lastHoveredStep === 2 ? 'II' : lastHoveredStep === 3 ? 'III' : 
                         lastHoveredStep === 4 ? 'IV' : lastHoveredStep === 5 ? 'V' : lastHoveredStep === 6 ? 'VI' : 'VII'}
                      </div>
                      <h3 className="text-lg font-semibold">
                        {constructorSteps.find(s => s.id === lastHoveredStep)?.name}
                      </h3>
                    </div>
                    <p className="text-gray-600">
                      {constructorSteps.find(s => s.id === lastHoveredStep)?.description}
                    </p>
                  </div>

                  {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  {templateSelection ? (
                    <div>
                      <div className="flex items-center justify-between mb-4">
                        <h4 className="text-base font-semibold text-gray-800">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω</h4>
                        <div className="flex gap-2">
                          <Button 
                            variant="outline" 
                            size="sm" 
                            onClick={() => fetchTemplates()}
                            disabled={templatesLoading}
                          >
                            {templatesLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û–±–Ω–æ–≤–∏—Ç—å'}
                          </Button>
                          <Button variant="outline" size="sm" onClick={() => setTemplateSelection(false)}>
                            <X className="h-4 w-4" />
                          </Button>
                        </div>
                      </div>
                      
                      <div className="grid gap-4">
                        {templatesLoading ? (
                          <div className="flex items-center justify-center p-8">
                            <div className="w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
                            <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...</span>
                          </div>
                        ) : templatesError ? (
                          <div className="text-center py-8 text-red-500">
                            <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤: {templatesError}</p>
                            <div className="flex gap-2 mt-4 justify-center">
                              <Button 
                                onClick={() => fetchTemplates()}
                                variant="outline" 
                              >
                                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                              </Button>
                              <Button 
                                onClick={async () => {
                                  try {
                                    const response = await fetch('/api/check-project-templates')
                                    const data = await response.json()
                                    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:', data)
                                    alert(`–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã: ${JSON.stringify(data, null, 2)}`)
                                  } catch (error) {
                                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error)
                                    alert('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã')
                                  }
                                }}
                                variant="outline" 
                              >
                                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
                              </Button>
                              <Button 
                                onClick={async () => {
                                  try {
                                    const response = await fetch('/api/create-project-templates-table', {
                                      method: 'POST'
                                    })
                                    const data = await response.json()
                                    console.log('üîß –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:', data)
                                    if (data.success) {
                                      alert('–¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
                                      window.location.reload()
                                    } else {
                                      alert(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: ${data.error}`)
                                    }
                                  } catch (error) {
                                    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è:', error)
                                    alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã')
                                  }
                                }}
                                variant="outline" 
                                className="bg-green-50 hover:bg-green-100"
                              >
                                –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É
                              </Button>
                              <Button 
                                onClick={async () => {
                                  try {
                                    const response = await fetch('/api/analyze-database-structure')
                                    const data = await response.json()
                                    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –ë–î:', data)
                                    alert(`–ê–Ω–∞–ª–∏–∑ –ë–î: ${JSON.stringify(data.summary, null, 2)}`)
                                  } catch (error) {
                                    console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error)
                                    alert('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ë–î')
                                  }
                                }}
                                variant="outline" 
                                className="bg-blue-50 hover:bg-blue-100"
                              >
                                –ê–Ω–∞–ª–∏–∑ –ë–î
                              </Button>
                            </div>
                          </div>
                        ) : getUserTemplates().length === 0 ? (
                          <div className="text-center py-8 text-gray-500">
                            <FileText className="h-12 w-12 mx-auto mb-4 text-gray-300" />
                            <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤</p>
                            <p className="text-sm mt-2">–°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"</p>
                          </div>
                        ) : (
                          getUserTemplates().map((template) => (
                            <div
                              key={template.id}
                              className="flex items-center gap-4 p-4 border-2 border-gray-200 rounded-xl hover:border-blue-400 hover:bg-blue-50 cursor-pointer transition-all duration-200 shadow-sm hover:shadow-md"
                              onClick={() => handleTemplateSelect(template.id)}
                            >
                              <div className="w-12 h-12 rounded-full bg-green-500 flex items-center justify-center shadow-sm">
                                <FileText className="h-6 w-6 text-white" />
                              </div>
                              <div className="flex-1">
                                <div className="text-lg font-semibold text-gray-800 mb-1">{template.name}</div>
                                <div className="text-sm text-gray-600 leading-relaxed">{template.description}</div>
                                <div className="text-xs text-gray-500 mt-1">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: {template.lastUsed}</div>
                              </div>
                              <div className="text-blue-500">
                                <ArrowRight className="h-5 w-5" />
                              </div>
                            </div>
                          ))
                        )}
                      </div>
                    </div>
                  ) : templateStepSelection ? (
                    <div>
                      <div className="flex items-center justify-between mb-4">
                        <h4 className="text-base font-semibold text-gray-800">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–≥ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–∑ —à–∞–±–ª–æ–Ω–∞</h4>
                        <Button variant="outline" size="sm" onClick={() => setTemplateStepSelection(null)}>
                          <X className="h-4 w-4" />
                        </Button>
                      </div>
                      
                      {/* –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ —à–∞–≥–∏" */}
                      {templateStepSelection.availableSteps.length > 1 && (
                        <div className="mb-4">
                          <Button 
                            onClick={handleFillAllTemplateSteps}
                            variant="outline"
                            className="w-full h-10 text-sm font-medium border-green-300 text-green-700 hover:bg-green-50 hover:border-green-400"
                          >
                            <CheckCircle className="h-4 w-4 mr-2" />
                            –ó–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ —à–∞–≥–∏ –∏–∑ —à–∞–±–ª–æ–Ω–∞
                          </Button>
                        </div>
                      )}
                      
                      <div className="grid gap-4">
                        {templateStepSelection.availableSteps.map((stepId) => {
                          const step = constructorSteps.find(s => s.id === stepId)
                          return (
                            <div
                              key={stepId}
                              className="flex items-center gap-4 p-4 border-2 border-gray-200 rounded-xl hover:border-blue-400 hover:bg-blue-50 cursor-pointer transition-all duration-200 shadow-sm hover:shadow-md"
                              onClick={() => handleTemplateStepSelect(stepId)}
                            >
                              <div className="w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center shadow-sm">
                                <span className="text-white font-bold text-lg">
                                  {stepId === 1 ? 'I' : stepId === 2 ? 'II' : stepId === 3 ? 'III' : 
                                   stepId === 4 ? 'IV' : stepId === 5 ? 'V' : stepId === 6 ? 'VI' : 'VII'}
                                </span>
                              </div>
                              <div className="flex-1">
                                <div className="text-lg font-semibold text-gray-800 mb-1">{step?.name}</div>
                                <div className="text-sm text-gray-600 leading-relaxed">{step?.description}</div>
                              </div>
                              <div className="text-blue-500">
                                <ArrowRight className="h-5 w-5" />
                              </div>
                            </div>
                          )
                        })}
                      </div>
                    </div>

                  ) : selectedSource === "manual" ? (
                    <div>
                      <div className="flex items-center justify-between mb-4">
                        <h4 className="text-sm font-medium text-gray-700">–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é</h4>
                        <Button variant="outline" size="sm" onClick={handleCancelSource}>
                          <X className="h-4 w-4" />
                        </Button>
                      </div>
                      
                      {/* –§–æ—Ä–º—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —à–∞–≥–æ–≤ */}
                      {lastHoveredStep === 1 && editingType === 'company' && (
                        <CompanyForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                        />
                      )}
                      
                      {lastHoveredStep === 1 && editingType === 'contacts' && (
                        <ContactsForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                        />
                      )}
                      
                      {lastHoveredStep === 1 && editingType === 'bank' && (
                        <BankForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                        />
                      )}
                      
                      {lastHoveredStep === 1 && !editingType && (
                        <CompanyForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                        />
                      )}
                      
                      {lastHoveredStep === 2 && (
                        <SpecificationForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                        />
                      )}
                      
                      {lastHoveredStep === 3 && (
                        <FileUploadForm 
                          onSave={(data) => {
                            if (data.file) {
                              handleFileUpload(lastHoveredStep, data.file)
                            }
                            handleManualDataSave(lastHoveredStep, data)
                          }}
                          onCancel={handleCancelSource}
                        />
                      )}
                      
                      {lastHoveredStep === 4 && (
                        <PaymentMethodForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                          getStepData={(stepId) => manualData[stepId]}
                        />
                      )}
                      
                      {lastHoveredStep === 5 && (
                        <RequisitesForm 
                          onSave={(data) => handleManualDataSave(lastHoveredStep, data)}
                          onCancel={handleCancelSource}
                          initialData={manualData[lastHoveredStep]}
                        />
                      )}
                    </div>
                  ) : selectedSource === "upload" ? (
                    <div>
                      <div className="flex items-center justify-between mb-4">
                        <h4 className="text-sm font-medium text-gray-700">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞</h4>
                        <Button variant="outline" size="sm" onClick={handleCancelSource}>
                          <X className="h-4 w-4" />
                        </Button>
                      </div>
                      
                      <div className="bg-white rounded-xl p-6 border border-slate-200 shadow-sm">
                        <div className="flex items-center gap-3 mb-4">
                          <div className="w-10 h-10 bg-gradient-to-br from-orange-500 to-orange-600 rounded-lg flex items-center justify-center">
                            <Eye className="w-5 h-5 text-white" />
                          </div>
                          <div>
                            <h3 className="text-lg font-semibold text-slate-800">
                              {lastHoveredStep === 1 ? "–ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏" : "–ê–Ω–∞–ª–∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏"}
                            </h3>
                            <p className="text-sm text-slate-600">
                              {lastHoveredStep === 1 
                                ? "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö" 
                                : "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–Ω–≤–æ–π—Å –∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
                              }
                            </p>
                          </div>
                        </div>
                        
                        <div className="space-y-4">
                          {/* Drag & Drop –∑–æ–Ω–∞ */}
                          <div 
                            className="border-2 border-dashed border-orange-300 rounded-lg p-8 text-center hover:border-orange-400 transition-colors cursor-pointer"
                            onDragOver={(e) => e.preventDefault()}
                            onDrop={(e) => {
                              e.preventDefault();
                              const files = e.dataTransfer.files;
                              if (files.length > 0) {
                                handleFileUpload(lastHoveredStep, files[0]);
                              }
                            }}
                            onClick={() => document.getElementById(`ocr-file-input-${lastHoveredStep}`)?.click()}
                          >
                            <Upload className="w-12 h-12 text-orange-500 mx-auto mb-4" />
                            <p className="text-lg font-medium text-slate-700 mb-2">
                              –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                            </p>
                            <p className="text-sm text-slate-500">
                              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, JPG, PNG, XLSX, DOCX
                            </p>
                            <input 
                              id={`ocr-file-input-${lastHoveredStep}`}
                              type="file" 
                              accept=".pdf,.jpg,.jpeg,.png,.xlsx,.xls,.docx,.doc"
                              className="hidden"
                              onChange={(e) => {
                                const file = e.target.files?.[0];
                                if (file) {
                                  handleFileUpload(lastHoveredStep, file);
                                }
                              }}
                            />
                          </div>
                          
                          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö */}
                          <div className="bg-orange-50 rounded-lg p-4">
                            <h4 className="font-medium text-orange-800 mb-2">
                              {lastHoveredStep === 1 ? "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:" : "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:"}
                            </h4>
                            <ul className="text-sm text-orange-700 space-y-1">
                              {lastHoveredStep === 1 ? (
                                <>
                                  <li>‚Ä¢ –ö–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–π</li>
                                  <li>‚Ä¢ –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</li>
                                  <li>‚Ä¢ –î–æ–≥–æ–≤–æ—Ä—ã —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏</li>
                                  <li>‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</li>
                                </>
                              ) : (
                                <>
                                  <li>‚Ä¢ –ò–Ω–≤–æ–π—Å—ã (—Å—á–µ—Ç–∞-—Ñ–∞–∫—Ç—É—Ä—ã)</li>
                                  <li>‚Ä¢ –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤</li>
                                  <li>‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</li>
                                  <li>‚Ä¢ –ü—Ä–∞–π—Å-–ª–∏—Å—Ç—ã</li>
                                </>
                              )}
                            </ul>
                          </div>
                          
                          {/* –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ */}
                          {ocrAnalyzing[lastHoveredStep] && (
                            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                              <div className="flex items-center gap-2">
                                <Loader className="w-5 h-5 text-blue-600 animate-spin" />
                                <span className="text-blue-800 font-medium">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç...</span>
                              </div>
                              <p className="text-sm text-blue-600 mt-1">
                                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                              </p>
                            </div>
                          )}
                          
                          {/* –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ */}
                          {uploadedFiles[lastHoveredStep] && !ocrAnalyzing[lastHoveredStep] && !ocrError[lastHoveredStep] && (
                            <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                              <div className="flex items-center gap-2">
                                <CheckCircle className="w-5 h-5 text-green-600" />
                                <span className="text-green-800 font-medium">–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω</span>
                              </div>
                              <p className="text-sm text-green-600 mt-1">
                                –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –≤ —Ñ–æ—Ä–º—É
                              </p>
                            </div>
                          )}
                          
                          {/* –°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏ */}
                          {ocrError[lastHoveredStep] && (
                            <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                              <div className="flex items-center gap-2">
                                <X className="w-5 h-5 text-red-600" />
                                <span className="text-red-800 font-medium">–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞</span>
                              </div>
                              <p className="text-sm text-red-600 mt-1">
                                {ocrError[lastHoveredStep]}
                              </p>
                              
                              {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                              {ocrDebugData[lastHoveredStep] && (
                                <details className="mt-3">
                                  <summary className="text-sm text-red-700 cursor-pointer">
                                    –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                                  </summary>
                                  <pre className="text-xs text-red-600 mt-2 bg-red-100 p-2 rounded overflow-auto max-h-32">
                                    {JSON.stringify(ocrDebugData[lastHoveredStep], null, 2)}
                                  </pre>
                                </details>
                                                  )}
                  </div>
                )}

                {/* –ë–ª–æ–∫ –¥–ª—è 7-–≥–æ —à–∞–≥–∞ - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è */}
                {hasManagerReceipt && (
                  <div className="mt-6">
                    <div className="bg-orange-100 border border-orange-300 rounded-lg p-4">
                      <h4 className="font-semibold mb-3 flex items-center gap-2 text-orange-800">
                        <Upload className="h-4 w-4" />
                        –®–∞–≥ 7: –ó–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ–∫ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤
                      </h4>
                      
                      {!clientReceiptUrl ? (
                        <div className="space-y-3">
                          <p className="text-sm text-orange-700">
                            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ–∫ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π —á—Ç–æ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.
                          </p>
                          
                          {clientReceiptUploadError && (
                            <div className="text-red-600 text-sm bg-red-50 p-2 rounded">
                              {clientReceiptUploadError}
                            </div>
                          )}
                          
                          <div className="flex flex-col gap-2">
                            <input
                              type="file"
                              accept="image/*,application/pdf"
                              onChange={handleClientReceiptUpload}
                              className="hidden"
                              id="client-receipt-upload"
                            />
                            
                            <Button
                              onClick={() => document.getElementById('client-receipt-upload')?.click()}
                              disabled={isUploadingClientReceipt}
                              variant="outline"
                              className="w-full border-orange-300 hover:border-orange-400 text-orange-800"
                            >
                              {isUploadingClientReceipt ? (
                                <>
                                  <Clock className="h-4 w-4 mr-2 animate-spin" />
                                  –ó–∞–≥—Ä—É–∂–∞—é —á–µ–∫...
                                </>
                              ) : (
                                <>
                                  <Upload className="h-4 w-4 mr-2" />
                                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª —á–µ–∫–∞
                                </>
                              )}
                            </Button>
                            
                            <p className="text-xs text-gray-500 text-center">
                              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, PDF (–º–∞–∫—Å. 50 –ú–ë)
                            </p>
                          </div>
                        </div>
                      ) : (
                        <div className="space-y-3">
                          <div className="flex items-center gap-3">
                            <CheckCircle className="h-5 w-5 text-green-500" />
                            <div className="flex-1">
                              <p className="font-medium text-green-800">–ß–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É</p>
                              <a 
                                href={clientReceiptUrl} 
                                target="_blank" 
                                rel="noopener noreferrer"
                                className="text-orange-600 hover:underline text-sm"
                              >
                                –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —á–µ–∫ ‚Üí
                              </a>
                            </div>
                            <Button
                              onClick={handleRemoveClientReceipt}
                              variant="outline"
                              size="sm"
                              className="text-red-600 border-red-300 hover:border-red-400"
                            >
                              <X className="h-4 w-4 mr-1" />
                              –£–¥–∞–ª–∏—Ç—å
                            </Button>
                          </div>
                          
                          <div className="bg-green-50 border border-green-200 rounded p-3">
                            <p className="text-sm text-green-700">
                              ‚úÖ –í–∞—à —á–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–µ–∫—Ç.
                            </p>
                          </div>
                          
                          {/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" */}
                          <div className="flex justify-center mt-4">
                            <Button
                              onClick={handleShowProjectDetails}
                              variant="outline"
                              className="text-blue-600 border-blue-300 hover:border-blue-400 hover:bg-blue-50"
                            >
                              <Eye className="h-4 w-4 mr-2" />
                              –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–µ–∫—Ç–µ
                            </Button>
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                )}
              </div>
            </div>
                    </div>
                  ) : stepConfigs[lastHoveredStep] ? (
                    // –¢–æ–ª—å–∫–æ 3 –∫—É–±–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
                    <div className="flex justify-center">
                      {lastHoveredStep === 1 && manualData[lastHoveredStep] && (
                        <div className="grid grid-cols-3 gap-4 w-full max-w-4xl">
                          {/* –ö—É–±–∏–∫ 1: –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ - –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π */}
                          <div 
                            className="bg-white border-2 border-blue-200 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:border-blue-300 hover:scale-105"
                            onClick={() => handlePreviewData('company', manualData[lastHoveredStep])}
                          >
                            <div className="flex items-center gap-2 mb-3">
                              <div className="w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center">
                                <Building className="h-4 w-4 text-white" />
                              </div>
                              <div>
                                <div className="text-sm font-semibold text-gray-800">–î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏</div>
                                <div className="text-xs text-gray-500">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
                              </div>
                            </div>
                            <div className="text-sm text-gray-800 font-medium">{manualData[lastHoveredStep].name}</div>
                            <div className="text-xs text-blue-600 mt-2 flex items-center gap-1">
                              <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                              <Eye className="h-3 w-3" />
                            </div>
                          </div>
                          
                          {/* –ö—É–±–∏–∫ 2: –î–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞ - –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π */}
                          <div 
                            className="bg-white border-2 border-green-200 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:border-green-300 hover:scale-105"
                            onClick={() => handlePreviewData('bank', manualData[lastHoveredStep])}
                          >
                            <div className="flex items-center gap-2 mb-3">
                              <div className="w-8 h-8 rounded-full bg-green-500 flex items-center justify-center">
                                <Banknote className="h-4 w-4 text-white" />
                              </div>
                              <div>
                                <div className="text-sm font-semibold text-gray-800">–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç</div>
                                <div className="text-xs text-gray-500">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</div>
                              </div>
                            </div>
                            <div className="text-sm text-gray-800">{manualData[lastHoveredStep].bankName}</div>
                            {manualData[lastHoveredStep].bankAccount && (
                              <div className="text-xs text-gray-500">{manualData[lastHoveredStep].bankAccount}</div>
                            )}
                            <div className="text-xs text-green-600 mt-2 flex items-center gap-1">
                              <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                              <Eye className="h-3 w-3" />
                            </div>
                          </div>
                          
                          {/* –ö—É–±–∏–∫ 3: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π */}
                          <div 
                            className="bg-white border-2 border-purple-200 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:border-purple-300 hover:scale-105"
                            onClick={() => handlePreviewData('contacts', manualData[lastHoveredStep])}
                          >
                            <div className="flex items-center gap-2 mb-3">
                              <div className="w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center">
                                <Mail className="h-4 w-4 text-white" />
                              </div>
                              <div>
                                <div className="text-sm font-semibold text-gray-800">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</div>
                                <div className="text-xs text-gray-500">–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –¥–µ—Ç–∞–ª–∏</div>
                              </div>
                            </div>
                            <div className="text-sm text-gray-800">{manualData[lastHoveredStep].email}</div>
                            {manualData[lastHoveredStep].phone && (
                              <div className="text-sm text-gray-800 mt-1">{manualData[lastHoveredStep].phone}</div>
                            )}
                            <div className="text-xs text-purple-600 mt-2 flex items-center gap-1">
                              <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                              <Eye className="h-3 w-3" />
                            </div>
                          </div>
                        </div>
                      )}
                      
                      {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–∞ */}
                      {lastHoveredStep === 1 && manualData[lastHoveredStep] && (
                        <div className="mt-6 flex justify-center">
                          <Button
                            onClick={() => handleViewStepData(lastHoveredStep)}
                            variant="outline"
                            className="flex items-center gap-2"
                          >
                            <Eye className="h-4 w-4" />
                            –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —à–∞–≥–∞
                          </Button>
                        </div>
                      )}
                      

                      
                      {/* –≠—Ö–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —à–∞–≥–∞ 2 */}
                      {lastHoveredStep === 2 && (manualData as any).echoSuggestions?.step2 && (
                        <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                          <div className="flex items-center gap-2 mb-3">
                            <div className="w-6 h-6 rounded-full bg-yellow-500 flex items-center justify-center">
                              <span className="text-white text-xs">üìä</span>
                            </div>
                            <div>
                              <div className="text-sm font-semibold text-gray-800">–≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã!</div>
                              <div className="text-xs text-gray-600">{(manualData as any).echoSuggestions.step2.description}</div>
                            </div>
                          </div>
                          <div className="text-sm text-gray-700 mb-3">
                            –ù–∞–π–¥–µ–Ω–æ {(manualData as any).echoSuggestions.step2.products.length} —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                          </div>
                          <div className="flex gap-2">
                            <Button 
                              size="sm" 
                              variant="outline" 
                              onClick={() => {
                                // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö
                                const products = (manualData as any).echoSuggestions.step2.products
                                if (products && products.length > 0) {
                                  setManualData(prev => ({
                                    ...prev,
                                    2: {
                                      supplier: products[0].supplier || products[0].supplier_name,
                                      currency: products[0].currency || 'USD',
                                      items: products.map((product: any) => ({
                                        item_name: product.name,
                                        item_code: product.name,
                                        quantity: 1,
                                        price: product.price || 0,
                                        unit: '—à—Ç'
                                      }))
                                    }
                                  }))
                                  setStepConfigs(prev => ({ ...prev, 2: 'echo' }))
                                  alert('–¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!')
                                  
                                  // üîÑ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ 4-5 –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —ç—Ö–∞
                                  const supplierName = products[0].supplier || products[0].supplier_name
                                  if (supplierName) {
                                    console.log('üîç [ECHO AUTO-FILL] –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierName)
                                    getEchoSupplierData(supplierName).then(echoData => {
                                      if (echoData) {
                                        console.log('‚úÖ [ECHO AUTO-FILL] –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', echoData)
                                        
                                        // –ó–∞–ø–æ–ª–Ω—è–µ–º Step IV (–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã)
                                        setManualData(prev => ({
                                          ...prev,
                                          4: {
                                            payment_method: echoData.payment_method?.method || 'bank_transfer',
                                            auto_filled: true,
                                            supplier_name: supplierName,
                                            echo_source: echoData.project_info?.project_name,
                                            user_choice: true
                                          }
                                        }))
                                        
                                        // –ó–∞–ø–æ–ª–Ω—è–µ–º Step V (–†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)  
                                        setManualData(prev => ({
                                          ...prev,
                                          5: {
                                            supplier_name: supplierName,
                                            requisites: echoData.requisites || {},
                                            auto_filled: true,
                                            echo_source: echoData.project_info?.project_name,
                                            user_choice: true
                                          }
                                        }))
                                        
                                        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–≥–æ–≤ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
                                        setStepConfigs(prev => ({
                                          ...prev,
                                          4: 'echoData',
                                          5: 'echoData'
                                        }))
                                        
                                        console.log('‚úÖ [ECHO AUTO-FILL] –®–∞–≥–∏ 4-5 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã')
                                      } else {
                                        console.log('‚ùå [ECHO AUTO-FILL] –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:', supplierName)
                                      }
                                    }).catch(error => {
                                      console.error('‚ùå [ECHO AUTO-FILL] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
                                    })
                                  }
                                }
                              }}
                            >
                              –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                            </Button>
                            <Button 
                              size="sm" 
                              variant="ghost" 
                              onClick={() => {
                                setManualData(prev => {
                                  const { echoSuggestions, ...rest } = prev as any
                                  return rest
                                })
                              }}
                            >
                              –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                            </Button>
                          </div>
                        </div>
                      )}
                      
                      {/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —ç—Ö–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç lastHoveredStep */}
                      {((manualData as any).echoSuggestions?.step1 || (manualData as any).echoSuggestions?.step2) && (
                        <div className="mt-6 p-4 bg-purple-50 border border-purple-200 rounded-lg">
                          <div className="flex items-center gap-2 mb-3">
                            <div className="w-6 h-6 rounded-full bg-purple-500 flex items-center justify-center">
                              <span className="text-white text-xs">üìä</span>
                            </div>
                            <div>
                              <div className="text-sm font-semibold text-gray-800">–ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ!</div>
                              <div className="text-xs text-gray-600">
                                {(manualData as any).echoSuggestions?.step1 && '–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ ‚Ä¢ '}
                                {(manualData as any).echoSuggestions?.step2 && '–¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'}
                              </div>
                            </div>
                          </div>
                          
                          <div className="space-y-3">
                            {/* –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–∞ 1 */}
                            {(manualData as any).echoSuggestions?.step1 && (
                              <div className="p-3 bg-white rounded border">
                                <div className="text-sm font-medium text-gray-800 mb-2">
                                  üë§ –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞: {(manualData as any).echoSuggestions.step1.description}
                                </div>
                                <div className="text-xs text-gray-600 mb-2">
                                  –ù–∞–π–¥–µ–Ω–æ {(manualData as any).echoSuggestions.step1.clients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤
                                </div>
                                <Button 
                                  size="sm" 
                                  variant="outline" 
                                  onClick={() => {
                                    const firstClient = (manualData as any).echoSuggestions.step1.clients[0]
                                    if (firstClient) {
                                      setManualData(prev => ({
                                        ...prev,
                                        1: {
                                          name: firstClient.name || firstClient.company_name,
                                          legalName: firstClient.company_name || '',
                                          inn: firstClient.inn || '',
                                          address: firstClient.address || '',
                                          email: firstClient.email || '',
                                          phone: firstClient.phone || ''
                                        }
                                      }))
                                      setStepConfigs(prev => ({ ...prev, 1: 'echo' }))
                                      alert('–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —ç—Ö–æ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!')
                                    }
                                  }}
                                >
                                  –ü—Ä–∏–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
                                </Button>
                              </div>
                            )}
                            
                            {/* –≠—Ö–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∞–≥–∞ 2 */}
                            {(manualData as any).echoSuggestions?.step2 && (
                              <div className="p-3 bg-white rounded border">
                                <div className="text-sm font-medium text-gray-800 mb-2">
                                  üì¶ –¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {(manualData as any).echoSuggestions.step2.description}
                                </div>
                                <div className="text-xs text-gray-600 mb-2">
                                  –ù–∞–π–¥–µ–Ω–æ {(manualData as any).echoSuggestions.step2.products.length} —Ç–æ–≤–∞—Ä–æ–≤
                                </div>
                                <Button 
                                  size="sm" 
                                  variant="outline" 
                                  onClick={() => {
                                    const products = (manualData as any).echoSuggestions.step2.products
                                    if (products && products.length > 0) {
                                      setManualData(prev => ({
                                        ...prev,
                                        2: {
                                          supplier: products[0].supplier || products[0].supplier_name,
                                          currency: products[0].currency || 'USD',
                                          items: products.map((product: any) => ({
                                            item_name: product.name,
                                            item_code: product.name,
                                            quantity: 1,
                                            price: product.price || 0,
                                            unit: '—à—Ç'
                                          }))
                                        }
                                      }))
                                      setStepConfigs(prev => ({ ...prev, 2: 'echo' }))
                                      alert('–¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!')
                                      
                                      // üîÑ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤ 4-5 –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —ç—Ö–∞
                                      const supplierName = products[0].supplier || products[0].supplier_name
                                      if (supplierName) {
                                        console.log('üîç [ECHO AUTO-FILL] –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierName)
                                        getEchoSupplierData(supplierName).then(echoData => {
                                          if (echoData) {
                                            console.log('‚úÖ [ECHO AUTO-FILL] –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:', echoData)
                                            
                                            // –ó–∞–ø–æ–ª–Ω—è–µ–º Step IV (–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã)
                                            setManualData(prev => ({
                                              ...prev,
                                              4: {
                                                payment_method: echoData.payment_method?.method || 'bank_transfer',
                                                auto_filled: true,
                                                supplier_name: supplierName,
                                                echo_source: echoData.project_info?.project_name,
                                                user_choice: true
                                              }
                                            }))
                                            
                                            // –ó–∞–ø–æ–ª–Ω—è–µ–º Step V (–†–µ–∫–≤–∏–∑–∏—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)  
                                            setManualData(prev => ({
                                              ...prev,
                                              5: {
                                                supplier_name: supplierName,
                                                requisites: echoData.requisites || {},
                                                auto_filled: true,
                                                echo_source: echoData.project_info?.project_name,
                                                user_choice: true
                                              }
                                            }))
                                            
                                            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–≥–æ–≤ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ
                                            setStepConfigs(prev => ({
                                              ...prev,
                                              4: 'echoData',
                                              5: 'echoData'
                                            }))
                                            
                                            console.log('‚úÖ [ECHO AUTO-FILL] –®–∞–≥–∏ 4-5 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã')
                                          } else {
                                            console.log('‚ùå [ECHO AUTO-FILL] –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:', supplierName)
                                          }
                                        }).catch(error => {
                                          console.error('‚ùå [ECHO AUTO-FILL] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error)
                                        })
                                      }
                                    }
                                  }}
                                >
                                  –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                                </Button>
                              </div>
                            )}
                          </div>
                          
                          <div className="mt-3 pt-3 border-t border-purple-200">
                            <Button 
                              size="sm" 
                              variant="ghost" 
                              onClick={() => {
                                setManualData(prev => {
                                  const { echoSuggestions, ...rest } = prev as any
                                  return rest
                                })
                              }}
                            >
                              –û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Å–µ —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ
                            </Button>
                          </div>
                        </div>
                      )}
                      
                      {/* –®–∞–≥ 2: –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ */}
                      {lastHoveredStep === 2 && manualData[lastHoveredStep] && (
                        <div className="flex justify-center">
                          <div className="w-full max-w-6xl">
                            {/* –°–ª–∞–π–¥–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ */}
                            {manualData[lastHoveredStep]?.items && manualData[lastHoveredStep].items.length > 0 && (
                              <div className="mb-6">
                                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∞–π–¥–µ—Ä–∞ */}
                                <div className="flex items-center justify-between mb-4">
                                  <h3 className="text-lg font-semibold text-gray-800">
                                    –¢–æ–≤–∞—Ä—ã ({manualData[lastHoveredStep].items.length})
                                  </h3>
                                  <div className="flex items-center gap-2">
                                    <span className="text-sm text-gray-500">
                                      {Math.floor(currentProductIndex / productsPerView) + 1} –∏–∑ {Math.ceil(manualData[lastHoveredStep].items.length / productsPerView)}
                                    </span>
                            </div>
                          </div>
                          
                                {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ª–∞–π–¥–µ—Ä–∞ */}
                                <div className="relative">
                                  {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
                                  {currentProductIndex > 0 && (
                                    <button
                                      onClick={() => setCurrentProductIndex(prev => Math.max(0, prev - productsPerView))}
                                      className="absolute left-0 top-1/2 transform -translate-y-1/2 z-10 bg-white border border-gray-300 rounded-full p-2 shadow-md hover:bg-gray-50 transition-all duration-200"
                                    >
                                      <ChevronLeft className="h-5 w-5 text-gray-600" />
                                    </button>
                                  )}
                                  
                                  {/* –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" */}
                                  {currentProductIndex + productsPerView < manualData[lastHoveredStep].items.length && (
                                    <button
                                      onClick={() => setCurrentProductIndex(prev => Math.min(manualData[lastHoveredStep].items.length - productsPerView, prev + productsPerView))}
                                      className="absolute right-0 top-1/2 transform -translate-y-1/2 z-10 bg-white border border-gray-300 rounded-full p-2 shadow-md hover:bg-gray-50 transition-all duration-200"
                                    >
                                      <ChevronRight className="h-5 w-5 text-gray-600" />
                                    </button>
                                  )}
                                  
                                  {/* –¢–µ–∫—É—â–∏–µ —Ç–æ–≤–∞—Ä—ã (–ø–æ 3) */}
                                  <div className="grid grid-cols-3 gap-4 mx-12">
                                    {Array.from({ length: productsPerView }, (_, i) => {
                                      const itemIndex = currentProductIndex + i;
                                      const item = manualData[lastHoveredStep].items[itemIndex];
                                      
                                      if (!item) return null;
                                      
                                      return (
                                        <div 
                                          key={itemIndex}
                                className="bg-white border-2 border-dashed border-gray-300 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:border-blue-400 hover:scale-105"
                                          onClick={() => handlePreviewData('product', item)}
                              >
                                <div className="flex items-center gap-2 mb-3">
                                  <div className="w-8 h-8 rounded-full bg-green-500 flex items-center justify-center">
                                    <Package className="h-4 w-4 text-white" />
                                          </div>
                                          <div>
                                              <div className="text-sm font-semibold text-gray-800">
                                                –¢–æ–≤–∞—Ä {itemIndex + 1}
                                              </div>
                                    <div className="text-xs text-gray-500">–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è</div>
                                          </div>
                                        </div>
                                        
                                        <div className="space-y-2">
                                          <div className="flex items-center gap-2">
                                            <span className="text-gray-400">üì¶</span>
                                              <span className="text-gray-800 font-medium text-sm truncate">
                                                {item.item_name || item.name || '–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}
                                            </span>
                                          </div>
                                          <div className="flex items-center gap-2">
                                            <span className="text-gray-400">üè∑Ô∏è</span>
                                              <span className="text-gray-800 text-sm">
                                                {item.item_code || '–ë–µ–∑ –∞—Ä—Ç–∏–∫—É–ª–∞'}
                                            </span>
                                          </div>
                                          <div className="flex items-center gap-2">
                                            <span className="text-gray-400">üí∞</span>
                                              <span className="text-gray-800 text-sm">
                                                {item.price} {manualData[lastHoveredStep]?.currency || 'RUB'}
                                            </span>
                                          </div>
                                          <div className="flex items-center gap-2">
                                            <span className="text-gray-400">üìä</span>
                                              <span className="text-gray-800 text-sm">
                                                {item.quantity} —à—Ç
                                            </span>
                                          </div>
                                          <div className="flex items-center gap-2">
                                            <span className="text-gray-400">üí≥</span>
                                              <span className="text-gray-800 font-semibold text-sm">
                                                {item.total} {manualData[lastHoveredStep]?.currency || 'RUB'}
                                            </span>
                                          </div>
                                        </div>
                                
                                <div className="text-xs text-green-600 mt-3 flex items-center gap-1">
                                  <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                                  <Eye className="h-3 w-3" />
                                          </div>
                                        </div>
                                      );
                                    })}
                                  </div>
                                </div>
                                
                                {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–µ—Ä–∞ */}
                                <div className="flex justify-center gap-2 mt-4">
                                  {Array.from({ length: Math.ceil(manualData[lastHoveredStep].items.length / productsPerView) }, (_, groupIndex) => (
                                    <button
                                      key={groupIndex}
                                      onClick={() => setCurrentProductIndex(groupIndex * productsPerView)}
                                      className={`w-3 h-3 rounded-full transition-all duration-200 ${
                                        Math.floor(currentProductIndex / productsPerView) === groupIndex
                                          ? 'bg-blue-500' 
                                          : 'bg-gray-300 hover:bg-gray-400'
                                      }`}
                                    />
                                  ))}
                                      </div>
                                  </div>
                                )}
                                
                            {/* –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                            <div className="bg-white border-2 border-dashed border-gray-300 rounded-xl p-4 shadow-sm">
                              <div className="flex items-center gap-2 mb-3">
                                <div className="w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center">
                                  <FileText className="h-4 w-4 text-white" />
                                </div>
                                <div>
                                  <div className="text-sm font-semibold text-gray-800">–°–≤–æ–¥–∫–∞</div>
                                  <div className="text-xs text-gray-500">–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
                                </div>
                              </div>
                              
                              <div className="space-y-2">
                                <div className="flex items-center gap-2">
                                  <span className="text-gray-400">üè™</span>
                                  <span className="text-gray-800 font-medium">
                                    {manualData[lastHoveredStep]?.supplier || 
                                     manualData[lastHoveredStep]?.items?.[0]?.item_name || 
                                     '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                                  </span>
                                </div>
                                <div className="flex items-center gap-2">
                                  <span className="text-gray-400">üì¶</span>
                                  <span className="text-gray-800">
                                    {manualData[lastHoveredStep]?.items?.length || 0} –ø–æ–∑–∏—Ü–∏–π
                                  </span>
                                </div>
                                <div className="flex items-center gap-2">
                                  <span className="text-gray-400">üí∞</span>
                                  <span className="text-gray-800">{manualData[lastHoveredStep]?.currency || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      )}
                      
                                            {/* –®–∞–≥ 4: –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É–±–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞ */}
                      {lastHoveredStep === 4 && manualData[lastHoveredStep] && (
                        <div className="flex justify-center">
                          <div className="grid grid-cols-3 gap-4 w-full">
                            {manualData[lastHoveredStep].type === 'multiple' && manualData[lastHoveredStep].methods ? (
                              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É–±–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
                              manualData[lastHoveredStep].methods.map((method: string, index: number) => (
                                <div 
                                  key={index}
                                  className={`bg-white border-2 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:scale-105 ${
                                    method === 'crypto' ? 'border-green-200 hover:border-green-300' :
                                    method === 'p2p' ? 'border-blue-200 hover:border-blue-300' :
                                    'border-gray-200 hover:border-gray-300'
                                  }`}
                                  onClick={() => handlePaymentMethodSelect(method, selectedSupplierData)}
                                >
                                  <div className="flex items-center gap-2 mb-3">
                                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                                      method === 'crypto' ? 'bg-green-500' :
                                      method === 'p2p' ? 'bg-blue-500' :
                                      'bg-gray-500'
                                    }`}>
                                      <CreditCard className="h-4 w-4 text-white" />
                                    </div>
                                    <div>
                                      <div className="text-sm font-semibold text-gray-800">
                                        {method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞' :
                                         method === 'p2p' ? 'P2P –ø–µ—Ä–µ–≤–æ–¥' :
                                         '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥'}
                                      </div>
                                      <div className="text-xs text-gray-500">
                                        {method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ –ø–ª–∞—Ç–µ–∂' :
                                         method === 'p2p' ? 'P2P –ø–ª–∞—Ç–µ–∂' :
                                         '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–ª–∞—Ç–µ–∂'}
                                      </div>
                                    </div>
                                  </div>
                                  <div className="text-sm text-gray-800">
                                    –°—Ç–∞—Ç—É—Å
                                  </div>
                                  <div className="text-xs text-gray-500">
                                    –î–æ—Å—Ç—É–ø–µ–Ω
                                  </div>
                                  <div className={`text-xs mt-2 flex items-center gap-1 ${
                                    method === 'crypto' ? 'text-green-600' :
                                    method === 'p2p' ? 'text-blue-600' :
                                    'text-gray-600'
                                  }`}>
                                    <span>–í—ã–±—Ä–∞—Ç—å</span>
                                    <CheckCircle className="h-3 w-3" />
                                  </div>
                                </div>
                              ))
                            ) : (
                              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–¥–∏–Ω –∫—É–±–∏–∫ –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
                              <div 
                                className={`bg-white border-2 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:scale-105 col-span-3 ${
                                  manualData[lastHoveredStep].method === 'crypto' ? 'border-green-200 hover:border-green-300' :
                                  manualData[lastHoveredStep].method === 'p2p' ? 'border-blue-200 hover:border-blue-300' :
                                  'border-gray-200 hover:border-gray-300'
                                }`}
                                onClick={() => handlePreviewData('payment', manualData[lastHoveredStep])}
                              >
                                <div className="flex items-center gap-2 mb-3">
                                  <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                                    manualData[lastHoveredStep].method === 'crypto' ? 'bg-green-500' :
                                    manualData[lastHoveredStep].method === 'p2p' ? 'bg-blue-500' :
                                    'bg-gray-500'
                                  }`}>
                                    <CreditCard className="h-4 w-4 text-white" />
                                  </div>
                                  <div>
                                    <div className="text-sm font-semibold text-gray-800">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</div>
                                    <div className="text-xs text-gray-500">–ú–µ—Ç–æ–¥ –ø–ª–∞—Ç–µ–∂–∞</div>
                                  </div>
                                </div>
                                <div className="text-sm text-gray-800 font-medium">
                                  {manualData[lastHoveredStep].method === 'bank' ? '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥' :
                                   manualData[lastHoveredStep].method === 'p2p' ? 'P2P –ø–µ—Ä–µ–≤–æ–¥' :
                                   manualData[lastHoveredStep].method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞' :
                                   manualData[lastHoveredStep].method || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                                </div>
                                <div className={`text-xs mt-2 flex items-center gap-1 ${
                                  manualData[lastHoveredStep].method === 'crypto' ? 'text-green-600' :
                                  manualData[lastHoveredStep].method === 'p2p' ? 'text-blue-600' :
                                  'text-gray-600'
                                }`}>
                                  <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                                  <Eye className="h-3 w-3" />
                                </div>
                              </div>
                            )}
                          </div>
                        </div>
                      )}
                      
                      {/* –®–∞–≥ 5: –†–µ–∫–≤–∏–∑–∏—Ç—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã */}
                      {lastHoveredStep === 5 && manualData[lastHoveredStep] && (
                        <div className="flex justify-center">
                          <div className="grid grid-cols-3 gap-4 w-full">
                            {manualData[lastHoveredStep].type === 'multiple' && manualData[lastHoveredStep].requisites ? (
                              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫—É–±–∏–∫–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
                              manualData[lastHoveredStep].requisites.map((requisite: any, index: number) => (
                                <div 
                                  key={index}
                                  className={`bg-white border-2 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:scale-105 ${
                                    requisite.type === 'crypto' ? 'border-green-200 hover:border-green-300' :
                                    requisite.type === 'p2p' ? 'border-blue-200 hover:border-blue-300' :
                                    'border-gray-200 hover:border-gray-300'
                                  }`}
                                  onClick={() => handlePreviewData('requisites', requisite)}
                                >
                                  <div className="flex items-center gap-2 mb-3">
                                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                                      requisite.type === 'crypto' ? 'bg-green-500' :
                                      requisite.type === 'p2p' ? 'bg-blue-500' :
                                      'bg-gray-500'
                                    }`}>
                                      <Banknote className="h-4 w-4 text-white" />
                                    </div>
                                    <div>
                                      <div className="text-sm font-semibold text-gray-800">
                                        {requisite.type === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫' :
                                         requisite.type === 'p2p' ? '–ö–∞—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞' :
                                         '–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç'}
                                      </div>
                                      <div className="text-xs text-gray-500">
                                        {requisite.type === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ—Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                                         requisite.type === 'p2p' ? 'P2P —Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                                         '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'}
                                      </div>
                                    </div>
                                  </div>
                                  <div className="text-sm text-gray-800">
                                    {requisite.type === 'crypto' ? '–°–µ—Ç—å' :
                                     requisite.type === 'p2p' ? '–ë–∞–Ω–∫ –∫–∞—Ä—Ç—ã' :
                                     '–ë–∞–Ω–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'}
                                  </div>
                                  <div className="text-xs text-gray-500">
                                    {requisite.type === 'crypto' ? (requisite.crypto_network || '–ù–µ —É–∫–∞–∑–∞–Ω–∞') :
                                     requisite.type === 'p2p' ? (requisite.card_bank || '–ù–µ —É–∫–∞–∑–∞–Ω') :
                                     `${requisite.accountNumber || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`}
                                  </div>
                                  <div className={`text-xs mt-2 flex items-center gap-1 ${
                                    requisite.type === 'crypto' ? 'text-green-600' :
                                    requisite.type === 'p2p' ? 'text-blue-600' :
                                    'text-gray-600'
                                  }`}>
                                    <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                                    <Eye className="h-3 w-3" />
                                  </div>
                                </div>
                              ))
                            ) : (
                              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–¥–∏–Ω –∫—É–±–∏–∫ –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ç–∏–ø–∞
                              <div 
                                className="bg-white border-2 border-green-200 rounded-xl p-4 shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer hover:border-green-300 hover:scale-105 col-span-3"
                                onClick={() => handlePreviewData('requisites', manualData[lastHoveredStep])}
                              >
                                <div className="flex items-center gap-2 mb-3">
                                  <div className="w-8 h-8 rounded-full bg-green-500 flex items-center justify-center">
                                    <Banknote className="h-4 w-4 text-white" />
                                  </div>
                                  <div>
                                    <div className="text-sm font-semibold text-gray-800">
                                      {manualData[lastHoveredStep].type === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫' :
                                       manualData[lastHoveredStep].type === 'p2p' ? '–ö–∞—Ä—Ç–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞' :
                                       '–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç'}
                                    </div>
                                    <div className="text-xs text-gray-500">
                                      {manualData[lastHoveredStep].type === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ—Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                                       manualData[lastHoveredStep].type === 'p2p' ? 'P2P —Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                                       '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'}
                                    </div>
                                  </div>
                                </div>
                                <div className="text-sm text-gray-800">
                                  {manualData[lastHoveredStep].type === 'crypto' ? '–°–µ—Ç—å' :
                                   manualData[lastHoveredStep].type === 'p2p' ? '–ë–∞–Ω–∫ –∫–∞—Ä—Ç—ã' :
                                   '–ë–∞–Ω–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'}
                                </div>
                                <div className="text-xs text-gray-500">
                                  {manualData[lastHoveredStep].type === 'crypto' ? (manualData[lastHoveredStep].crypto_network || '–ù–µ —É–∫–∞–∑–∞–Ω–∞') :
                                   manualData[lastHoveredStep].type === 'p2p' ? (manualData[lastHoveredStep].card_bank || '–ù–µ —É–∫–∞–∑–∞–Ω') :
                                   `${manualData[lastHoveredStep].accountNumber || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`}
                                </div>
                                <div className="text-xs text-green-600 mt-2 flex items-center gap-1">
                                  <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                                  <Eye className="h-3 w-3" />
                                </div>
                              </div>
                            )}
                          </div>
                        </div>
                      )}
                      
                      {/* –î–ª—è –¥—Ä—É–≥–∏—Ö —à–∞–≥–æ–≤ - –æ–±—ã—á–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
                      {lastHoveredStep !== 1 && lastHoveredStep !== 2 && lastHoveredStep !== 4 && lastHoveredStep !== 5 && manualData[lastHoveredStep] && (
                        <div 
                          className={`border-2 border-gray-200 rounded-xl p-6 shadow-lg max-w-md w-full transition-all duration-200
                            ${manualData[lastHoveredStep].echo_data 
                              ? 'bg-white/60 backdrop-blur-sm border-indigo-200' 
                              : 'bg-white'}
                          `}
                        >
                          <div className="flex items-center gap-3 mb-4">
                            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                              stepConfigs[lastHoveredStep] === "profile" ? "bg-blue-500" :
                              stepConfigs[lastHoveredStep] === "template" ? "bg-green-500" :
                              (stepConfigs[lastHoveredStep] === "blue_room" || stepConfigs[lastHoveredStep] === "orange_room" || stepConfigs[lastHoveredStep] === "echo_cards") ? "bg-purple-500" :
                              stepConfigs[lastHoveredStep] === "echo" ? "bg-orange-500" :
                              stepConfigs[lastHoveredStep] === "echoData" ? "bg-indigo-500" :
                              stepConfigs[lastHoveredStep] === "manual" ? "bg-gray-500" : "bg-emerald-500"
                            }`}>
                              {stepConfigs[lastHoveredStep] === "profile" ? <Users className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "template" ? <FileText className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "blue_room" ? <Store className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "orange_room" ? <Store className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "echo_cards" ? <Store className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "catalog" ? <Store className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "echo" ? <FileText className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "echoData" ? <Clock className="h-4 w-4 text-white" /> :
                               stepConfigs[lastHoveredStep] === "manual" ? <Plus className="h-4 w-4 text-white" /> : <CheckCircle className="h-4 w-4 text-white" />}
                            </div>
                            <div>
                              <div className="font-semibold text-gray-800">
                                {dataSources[stepConfigs[lastHoveredStep] as keyof typeof dataSources]?.name}
                              </div>
                              {stepConfigs[lastHoveredStep] === "template" && manualData[lastHoveredStep]?.templateName && (
                                <div className="text-xs text-gray-500">{manualData[lastHoveredStep].templateName}</div>
                              )}
                            </div>
                          </div>
                          
                          <div className="space-y-3 mb-4">
                            {lastHoveredStep === 3 && (
                              <div className="flex items-center gap-2">
                                <span className="text-gray-400">üìÑ</span>
                                <span className="text-gray-800">{uploadedFiles[lastHoveredStep]}</span>
                                <span className="text-xs text-green-600 bg-green-100 px-2 py-1 rounded-full ml-auto">
                                  ‚úì –ó–∞–≥—Ä—É–∂–µ–Ω
                                </span>
                              </div>
                            )}
                          </div>
                        </div>
                      )}
                    </div>
                  ) : (
                    <div>
                      <h4 className="text-base font-semibold text-gray-800 mb-4">–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:</h4>
                      <div className="grid gap-4">
                        {constructorSteps.find(s => s.id === lastHoveredStep)?.sources.map((source) => {
                          const sourceInfo = dataSources[source as keyof typeof dataSources]
                          const SourceIcon = sourceInfo?.icon
                          return (
                            <div
                              key={source}
                              className="flex items-center gap-4 p-4 border-2 border-gray-200 rounded-xl hover:border-blue-400 hover:bg-blue-50 cursor-pointer transition-all duration-200 shadow-sm hover:shadow-md"
                              onClick={() => handleSourceSelect(source)}
                            >
                              <div className={`w-12 h-12 rounded-full ${sourceInfo?.color} flex items-center justify-center shadow-sm`}>
                                <SourceIcon className="h-6 w-6 text-white" />
                              </div>
                              <div className="flex-1">
                                <div className="text-lg font-semibold text-gray-800 mb-1">{sourceInfo?.name}</div>
                                <div className="text-sm text-gray-600 leading-relaxed">
                                  {source === "profile" && (lastHoveredStep === 1 ? "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞" : "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞")}
                                  {source === "template" && "–í—ã–±—Ä–∞—Ç—å –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"}
                                  {source === "catalog" && "–ò–∑ —Å–∏–Ω–µ–π –∏ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç –∫–∞—Ç–∞–ª–æ–≥–∞ (–≤–∫–ª—é—á–∞—è —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏)"}
                                  {source === "manual" && "–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ"}
                                  {source === "automatic" && "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"}
                                        </div>
      </div>

      {/* –î–∏–∞–ª–æ–≥ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞ */}
      {projectDetailsDialogOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-2xl font-bold text-gray-900">–î–µ—Ç–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞</h2>
              <Button
                variant="outline"
                size="sm"
                onClick={() => setProjectDetailsDialogOpen(false)}
              >
                <X className="h-4 w-4" />
              </Button>
            </div>

            {projectDetails && (
              <div className="space-y-6">
                {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h3 className="text-lg font-semibold mb-3">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-gray-600">ID –ø—Ä–æ–µ–∫—Ç–∞</p>
                      <p className="font-medium">{projectDetails.id}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">–°—Ç–∞—Ç—É—Å</p>
                      <p className="font-medium">{projectDetails.status}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø</p>
                      <p className="font-medium">{projectDetails.currentStage}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">–°—Ü–µ–Ω–∞—Ä–∏–π</p>
                      <p className="font-medium">{projectDetails.activeScenario}</p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">–°–æ–∑–¥–∞–Ω</p>
                      <p className="font-medium">
                        {new Date(projectDetails.created_at).toLocaleString('ru-RU')}
                      </p>
                    </div>
                    <div>
                      <p className="text-sm text-gray-600">–û–±–Ω–æ–≤–ª–µ–Ω</p>
                      <p className="font-medium">
                        {new Date(projectDetails.updated_at).toLocaleString('ru-RU')}
                      </p>
                    </div>
                  </div>
                </div>

                {/* –î–∞–Ω–Ω—ã–µ —à–∞–≥–æ–≤ */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h3 className="text-lg font-semibold mb-3">–î–∞–Ω–Ω—ã–µ —à–∞–≥–æ–≤</h3>
                  <div className="space-y-4">
                    {Object.entries(projectDetails.manualData || {}).map(([stepId, data]: [string, any]) => (
                      <div key={stepId} className="border border-gray-200 rounded p-3">
                        <h4 className="font-medium mb-2">–®–∞–≥ {stepId}</h4>
                        <pre className="text-sm bg-white p-2 rounded border overflow-x-auto">
                          {JSON.stringify(data, null, 2)}
                        </pre>
                      </div>
                    ))}
                  </div>
                </div>

                {/* –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–≥–æ–≤ */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h3 className="text-lg font-semibold mb-3">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–≥–æ–≤</h3>
                  <div className="space-y-4">
                    {Object.entries(projectDetails.stepConfigs || {}).map(([stepId, config]: [string, any]) => (
                      <div key={stepId} className="border border-gray-200 rounded p-3">
                        <h4 className="font-medium mb-2">–®–∞–≥ {stepId}</h4>
                        <pre className="text-sm bg-white p-2 rounded border overflow-x-auto">
                          {JSON.stringify(config, null, 2)}
                        </pre>
                      </div>
                    ))}
                  </div>
                </div>

                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞ */}
                <div className="bg-gray-50 rounded-lg p-4">
                  <h3 className="text-lg font-semibold mb-3">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
                  <pre className="text-sm bg-white p-2 rounded border overflow-x-auto">
                    {JSON.stringify(projectDetails, null, 2)}
                  </pre>
                </div>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  )
})}
                      </div>
                    </div>
                  )}
                </motion.div>
              ) : lastHoveredStep && !isStepEnabled(lastHoveredStep) ? (
                <div className="text-center py-8">
                  <div className="text-gray-400 mb-4">
                    <Blocks className="h-12 w-12 mx-auto" />
                  </div>
                  <p className="text-gray-500">–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ (I –∏ II)</p>
                </div>
              ) : (
                <div className="text-center py-8 text-gray-500">
                  <Blocks className="h-12 w-12 mx-auto mb-4 text-gray-400" />
                  <p>–ù–∞–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫—É–±–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö</p>
                </div>
              )}
            </AnimatePresence>
          </div>
          )}
        </CardContent>
      </Card>

      {/* Block 3: –°–≤–æ–¥–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ */}
      <Card>
        <CardContent className="p-6">
          <h2 className="text-xl font-bold mb-6">–°–≤–æ–¥–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞</h2>
          
          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä —Å –º–∏–Ω–∏-–∫—É–±–∏–∫–∞–º–∏ */}
          <div className="mb-6">
            <div className="flex items-center justify-between mb-2">
              <span className="text-sm font-medium">–ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span>
              <span className="text-sm text-gray-500">{getProgress()}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div 
                className="bg-blue-500 h-2 rounded-full transition-all duration-300"
                style={{ width: `${getProgress()}%` }}
              />
            </div>
            
            {/* –ú–∏–Ω–∏-–∫—É–±–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
            <div className="flex gap-2 mt-4">
              {constructorSteps.map((step) => (
                <div
                  key={step.id}
                  className={`w-6 h-6 rounded border-2 flex items-center justify-center text-xs font-bold ${
                    stepConfigs[step.id]
                      ? 'border-blue-500 bg-blue-500 text-white'
                      : 'border-gray-300 bg-gray-100 text-gray-400'
                  }`}
                >
                  {step.id}
                </div>
              ))}
            </div>
          </div>

                    {/* –°–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤ */}
          <div className="mb-6">
            <h3 className="text-lg font-medium mb-3">–ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —à–∞–≥–∏:</h3>
            {getConfiguredStepsSummary().length > 0 ? (
              <div className="space-y-2">
                {getConfiguredStepsSummary().map((item) => (
                  <div 
                    key={item.stepId} 
                    className={`flex items-center gap-3 p-3 rounded-lg hover:shadow-md cursor-pointer transition-all duration-200 border-2 relative z-10 ${
                      item.source === 'echoData' 
                        ? 'bg-purple-50 hover:bg-purple-100 border-purple-400 hover:border-purple-500' 
                        : 'bg-gray-50 hover:bg-gray-100 border-blue-400 hover:border-blue-500'
                    }`}
                    style={{ pointerEvents: 'auto' }}
                    onClick={() => handleStepCardClick(item)}
                  >
                    <div className={`w-8 h-8 rounded text-white flex items-center justify-center text-sm font-bold ${
                      item.source === 'echoData' ? 'bg-purple-500' : 'bg-blue-500'
                    }`}>
                      {item.stepId}
                    </div>
                    <div className="flex-1">
                      <div className="font-medium">{item.stepName}</div>
                      <div className={`text-sm ${
                        item.source === 'echoData' ? 'text-purple-600' : 'text-gray-500'
                      }`}>
                        –ò—Å—Ç–æ—á–Ω–∏–∫: {item.sourceName}
                        {item.source === 'echoData' && ' ‚ú®'}
                      </div>

                    </div>
                    <ChevronRight className={`h-4 w-4 ${
                      item.source === 'echoData' ? 'text-purple-400' : 'text-gray-400'
                    }`} />
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8 text-gray-500">
                <Blocks className="h-8 w-8 mx-auto mb-2 text-gray-400" />
                <p>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —à–∞–≥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è</p>
              </div>
            )}
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ */}
          <div className="flex justify-end">
            <Button 
              className="gap-2"
              disabled={getConfiguredStepsSummary().length === 0}
            >
              –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞—Ç–æ–º–∞—Ä–Ω—É—é —Å–¥–µ–ª–∫—É
              <ArrowRight className="w-4 h-4" />
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö */}
      <Dialog open={showPreviewModal} onOpenChange={setShowPreviewModal}>
        <DialogContent className="max-w-7xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              {previewType === 'company' && <Building className="h-5 w-5 text-blue-500" />}
              {previewType === 'bank' && <Banknote className="h-5 w-5 text-green-500" />}
              {previewType === 'contacts' && <Mail className="h-5 w-5 text-purple-500" />}
              {previewType === 'product' && <Package className="h-5 w-5 text-green-500" />}
              {previewType === 'payment' && <CreditCard className="h-5 w-5 text-indigo-500" />}
              {previewType === 'requisites' && <Banknote className="h-5 w-5 text-green-500" />}
              {previewType === 'company' && '–î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏'}
              {previewType === 'bank' && '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'}
              {previewType === 'contacts' && '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'}
              {previewType === 'product' && '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤'}
              {previewType === 'payment' && '–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã'}
              {previewType === 'requisites' && (previewData?.type === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ—Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                                               previewData?.type === 'p2p' ? 'P2P —Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                                               '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã')}
            </DialogTitle>
          </DialogHeader>
          
          <div className="space-y-6">
            {previewType === 'company' && previewData && (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.name && previewData.name.trim() !== '' ? previewData.name : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.legalName && previewData.legalName.trim() !== '' ? previewData.legalName : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ò–ù–ù</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.inn && previewData.inn.trim() !== '' ? previewData.inn : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ö–ü–ü</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.kpp && previewData.kpp.trim() !== '' ? previewData.kpp : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–û–ì–†–ù</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.ogrn && previewData.ogrn.trim() !== '' ? previewData.ogrn : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.address && previewData.address.trim() !== '' ? previewData.address : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {previewType === 'bank' && previewData && (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.bankName && previewData.bankName.trim() !== '' ? previewData.bankName : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.bankAccount && previewData.bankAccount.trim() !== '' ? `${previewData.bankAccount}` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ö–æ—Ä—Ä. —Å—á–µ—Ç</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.bankCorrAccount && previewData.bankCorrAccount.trim() !== '' ? previewData.bankCorrAccount : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ë–ò–ö</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.bankBik && previewData.bankBik.trim() !== '' ? previewData.bankBik : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {previewType === 'contacts' && previewData && (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">Email</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.email && previewData.email.trim() !== '' ? previewData.email : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.phone && previewData.phone.trim() !== '' ? previewData.phone : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div className="col-span-2">
                    <Label className="text-sm font-medium text-gray-600">–í–µ–±-—Å–∞–π—Ç</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.website && previewData.website.trim() !== '' ? previewData.website : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {previewType === 'product' && previewData && (
              <div className="space-y-4">
                {/* üî• –ù–û–í–û–ï: –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
                <div className="bg-blue-50 rounded-lg p-4">
                  <h3 className="text-sm font-semibold text-blue-800 mb-3">–°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏</h3>
                <div className="grid grid-cols-2 gap-4">
                  <div>
                      <Label className="text-sm font-medium text-gray-600">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
                      <div className="mt-1 p-3 bg-white rounded-lg">
                        {(previewData.supplier && previewData.supplier.trim() !== '') || 
                         (previewData.supplier_name && previewData.supplier_name.trim() !== '') ? 
                          (previewData.supplier || previewData.supplier_name) : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                      <Label className="text-sm font-medium text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π</Label>
                      <div className="mt-1 p-3 bg-white rounded-lg">
                        {previewData.items && previewData.items.length > 0 ? 
                          `${previewData.items.length} –ø–æ–∑–∏—Ü–∏–π` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                      <Label className="text-sm font-medium text-gray-600">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</Label>
                      <div className="mt-1 p-3 bg-white rounded-lg">
                        {previewData.items && previewData.items.length > 0 ? 
                          `${previewData.items.reduce((sum: number, item: any) => sum + (Number(item.quantity) || 0), 0)} —à—Ç` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                      <Label className="text-sm font-medium text-gray-600">–û–±—â–∞—è —Å—É–º–º–∞</Label>
                      <div className="mt-1 p-3 bg-white rounded-lg font-semibold">
                        {previewData.totalAmount ? `${previewData.totalAmount} ${previewData.currency || 'RUB'}` : 
                         (previewData.items && previewData.items.length > 0 ? 
                          `${previewData.items.reduce((sum: number, item: any) => sum + (Number(item.total) || 0), 0)} ${previewData.currency || 'RUB'}` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
                    </div>
                  </div>
                    </div>
                  </div>

                {/* üî• –ù–û–í–û–ï: –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
                {previewData.items && previewData.items.length > 0 && (
                  <div className="bg-green-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-green-800 mb-3">–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ ({previewData.items.length})</h3>
                    <div className="space-y-2 max-h-80 overflow-y-auto">
                      {previewData.items.map((item: any, index: number) => (
                        <div key={index} className="bg-white rounded p-2 border text-sm">
                          <div className="flex justify-between items-center">
                            <span className="font-medium">{item.name || item.item_name || `–¢–æ–≤–∞—Ä ${index + 1}`}</span>
                            <span className="text-gray-600">{item.quantity || 0} —à—Ç √ó {item.price || 0} = {item.total || 0}</span>
                          </div>
                        </div>
                      ))}
                </div>
                  </div>
                )}
              </div>
            )}

            {previewType === 'payment' && previewData && (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.method && previewData.method.trim() !== '' ? 
                        (previewData.method === 'bank-transfer' ? '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥' :
                         previewData.method === 'p2p' ? 'P2P –ø–ª–∞—Ç–µ–∂' :
                         previewData.method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞' :
                         previewData.method) : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {(previewData.supplier && previewData.supplier.trim() !== '') || 
                       (previewData.supplier_name && previewData.supplier_name.trim() !== '') ||
                       (previewData.recipientName && previewData.recipientName.trim() !== '') ? 
                        (previewData.supplier || previewData.supplier_name || previewData.recipientName) : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  {previewData.project_info && (
                    <div className="col-span-2">
                      <Label className="text-sm font-medium text-gray-600">–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö</Label>
                      <div className="mt-1 p-3 bg-indigo-50 rounded-lg">
                        <div className="text-indigo-700">
                          <strong>–ü—Ä–æ–µ–∫—Ç:</strong> {previewData.project_info.project_name || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                        <div className="text-indigo-600 text-sm">
                          <strong>–î–∞—Ç–∞:</strong> {previewData.project_info.project_date ? new Date(previewData.project_info.project_date).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            )}

            {previewType === 'requisites' && previewData && (
              <div className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  {/* –ö—Ä–∏–ø—Ç–æ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã */}
                  {previewData.type === 'crypto' ? (
                    <>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–°–µ—Ç—å</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {previewData.crypto_network && previewData.crypto_network.trim() !== '' ? previewData.crypto_network : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {previewData.crypto_address && previewData.crypto_address.trim() !== '' ? previewData.crypto_address : '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                    </>
                  ) : previewData.type === 'p2p' ? (
                    <>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ë–∞–Ω–∫ –∫–∞—Ä—Ç—ã</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {previewData.card_bank && previewData.card_bank.trim() !== '' ? previewData.card_bank : '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {previewData.card_number && previewData.card_number.trim() !== '' ? `${previewData.card_number}` : '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–î–µ—Ä–∂–∞—Ç–µ–ª—å –∫–∞—Ä—Ç—ã</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {previewData.card_holder && previewData.card_holder.trim() !== '' ? previewData.card_holder : '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                    </>
                  ) : (
                    <>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.bankName && previewData.bankName.trim() !== '' ? previewData.bankName : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.accountNumber && previewData.accountNumber.trim() !== '' ? `${previewData.accountNumber}` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">SWIFT/BIC</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.swift && previewData.swift.trim() !== '' ? previewData.swift : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ü–æ–ª—É—á–∞—Ç–µ–ª—å</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {previewData.recipientName && previewData.recipientName.trim() !== '' ? previewData.recipientName : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                    </>
                  )}
                  
                  {/* –û–±—â–∏–µ –ø–æ–ª—è –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ */}
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {(previewData.supplier && previewData.supplier.trim() !== '') || 
                       (previewData.supplier_name && previewData.supplier_name.trim() !== '') ||
                       (previewData.recipientName && previewData.recipientName.trim() !== '') ? 
                        (previewData.supplier || previewData.supplier_name || previewData.recipientName) : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  {previewData.project_info && (
                    <div>
                      <Label className="text-sm font-medium text-gray-600">–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö</Label>
                      <div className="mt-1 p-3 bg-indigo-50 rounded-lg">
                        <div className="text-indigo-700">
                          <strong>–ü—Ä–æ–µ–∫—Ç:</strong> {previewData.project_info.project_name || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                        <div className="text-indigo-600 text-sm">
                          <strong>–î–∞—Ç–∞:</strong> {previewData.project_info.project_date ? new Date(previewData.project_info.project_date).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            )}

            <div className="flex justify-end gap-3 pt-4 border-t">
              <Button variant="outline" onClick={() => setShowPreviewModal(false)}>
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
              <Button onClick={() => handleEditData(previewType)} className="gap-2">
                <Edit className="h-4 w-4" />
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —ç—Ö–æ –¥–∞–Ω–Ω—ã—Ö */}
      <Dialog open={echoDataModal?.show || false} onOpenChange={() => setEchoDataModal(null)}>
        <DialogContent className="max-w-2xl">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Clock className="h-5 w-5 text-indigo-500" />
              –ù–∞–π–¥–µ–Ω—ã —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ
            </DialogTitle>
            <DialogDescription>
              –î–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ <strong>{echoDataModal?.supplierName}</strong> –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-6">
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ */}
            <div className="bg-indigo-50 p-4 rounded-lg">
              <h4 className="font-medium text-indigo-900 mb-2">–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:</h4>
              <p className="text-indigo-700">
                –ü—Ä–æ–µ–∫—Ç: <strong>{echoDataModal?.projectInfo?.project_name}</strong>
              </p>
              <p className="text-indigo-600 text-sm">
                –î–∞—Ç–∞: {echoDataModal?.projectInfo?.project_date ? new Date(echoDataModal.projectInfo.project_date).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
              </p>
            </div>

            {/* –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è */}
            <div className="space-y-4">
              <h4 className="font-medium">–î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</h4>
              
              {/* –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
              <div className="border rounded-lg p-4">
                <h5 className="font-medium text-gray-900 mb-2">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã (–®–∞–≥ IV)</h5>
                <div className="flex items-center gap-2">
                  <CreditCard className="h-4 w-4 text-gray-500" />
                  <span className="text-gray-700">{echoDataModal?.echoData?.payment_method?.method || 'bank-transfer'}</span>
                </div>
              </div>

              {/* –†–µ–∫–≤–∏–∑–∏—Ç—ã (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞) */}
              <div className="border rounded-lg p-4">
                <h5 className="font-medium text-gray-900 mb-2">
                  {echoDataModal?.echoData?.payment_method?.method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ—Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                   echoDataModal?.echoData?.payment_method?.method === 'p2p' ? 'P2P —Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                   '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'} (–®–∞–≥ V)
                </h5>
                <div className="space-y-2 text-sm">
                  {echoDataModal?.echoData?.payment_method?.method === 'crypto' ? (
                    <>
                      <div className="flex items-center gap-2">
                        <Building className="h-4 w-4 text-gray-500" />
                        <span className="text-gray-700">–°–µ—Ç—å: {echoDataModal?.echoData?.requisites?.crypto_network || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <CreditCard className="h-4 w-4 text-gray-500" />
                        <span className="text-gray-700">–ê–¥—Ä–µ—Å: {echoDataModal?.echoData?.requisites?.crypto_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                      </div>
                    </>
                  ) : echoDataModal?.echoData?.payment_method?.method === 'p2p' ? (
                    <>
                      <div className="flex items-center gap-2">
                        <Building className="h-4 w-4 text-gray-500" />
                        <span className="text-gray-700">–ë–∞–Ω–∫: {echoDataModal?.echoData?.requisites?.card_bank || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <CreditCard className="h-4 w-4 text-gray-500" />
                        <span className="text-gray-700">–ö–∞—Ä—Ç–∞: {echoDataModal?.echoData?.requisites?.card_number || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <User className="h-4 w-4 text-gray-500" />
                        <span className="text-gray-700">–î–µ—Ä–∂–∞—Ç–µ–ª—å: {echoDataModal?.echoData?.requisites?.card_holder || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                      </div>
                    </>
                  ) : (
                    <>
                  <div className="flex items-center gap-2">
                    <Building className="h-4 w-4 text-gray-500" />
                    <span className="text-gray-700">{echoDataModal?.echoData?.requisites?.bankName || '–ë–∞–Ω–∫ –Ω–µ —É–∫–∞–∑–∞–Ω'}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CreditCard className="h-4 w-4 text-gray-500" />
                    <span className="text-gray-700">–°—á–µ—Ç: {echoDataModal?.echoData?.requisites?.accountNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <User className="h-4 w-4 text-gray-500" />
                    <span className="text-gray-700">{echoDataModal?.echoData?.requisites?.recipientName || '–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω'}</span>
                  </div>
                    </>
                  )}
                </div>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="flex justify-end gap-3 pt-4 border-t">
              <Button variant="outline" onClick={rejectEchoData}>
                –û—Ç–∫–ª–æ–Ω–∏—Ç—å
              </Button>
              <Button onClick={() => applyEchoData(echoDataModal?.echoData)} className="gap-2">
                <Check className="h-4 w-4" />
                –ü—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ö–æ –¥–∞–Ω–Ω—ã–µ
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∏–µ–Ω—Ç–∞ */}
      <Dialog open={showProfileSelector} onOpenChange={setShowProfileSelector}>
        <DialogContent className="max-w-md">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Users className="h-5 w-5 text-blue-500" />
              –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞
            </DialogTitle>
            <DialogDescription>
              –£ –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏.
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-4">
            {clientProfiles?.map((profile) => (
              <div
                key={profile.id}
                className={`p-4 border rounded-lg cursor-pointer transition-all ${
                  selectedProfileId === profile.id
                    ? 'border-blue-500 bg-blue-50'
                    : 'border-gray-200 hover:border-gray-300'
                }`}
                onClick={() => setSelectedProfileId(profile.id)}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-medium text-gray-900">{profile.name}</h4>
                    <p className="text-sm text-gray-500">
                      {profile.legal_name || '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </p>
                    {profile.is_default && (
                      <span className="inline-block mt-1 px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded">
                        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                      </span>
                    )}
                  </div>
                  {selectedProfileId === profile.id && (
                    <Check className="h-5 w-5 text-blue-500" />
                  )}
                </div>
              </div>
            ))}
          </div>

          <div className="flex justify-end gap-3 pt-4 border-t">
            <Button variant="outline" onClick={() => setShowProfileSelector(false)}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button 
              onClick={async () => {
                if (selectedProfileId) {
                  setShowProfileSelector(false)
                  // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
                  const profileData = await getProfileData(1)
                  if (profileData) {
                    setManualData(prev => ({
                      ...prev,
                      [1]: profileData
                    }))
                    setStepConfigs(prev => ({
                      ...prev,
                      [1]: 'profile'
                    }))
                    console.log('‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞')
                  }
                }
              }}
              disabled={!selectedProfileId}
              className="gap-2"
            >
              <Check className="h-4 w-4" />
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ */}
      <Dialog open={showSupplierProfileSelector} onOpenChange={setShowSupplierProfileSelector}>
        <DialogContent className="max-w-md">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Building className="h-5 w-5 text-orange-500" />
              –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
            </DialogTitle>
            <DialogDescription>
              –£ –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-4">
            {supplierProfiles?.map((profile) => (
              <div
                key={profile.id}
                className={`p-4 border rounded-lg cursor-pointer transition-all ${
                  selectedSupplierProfileId === profile.id
                    ? 'border-orange-500 bg-orange-50'
                    : 'border-gray-200 hover:border-gray-300'
                }`}
                onClick={() => setSelectedSupplierProfileId(profile.id)}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <h4 className="font-medium text-gray-900">{profile.name}</h4>
                    <p className="text-sm text-gray-500">
                      {profile.category || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
                    </p>
                    {profile.is_default && (
                      <span className="inline-block mt-1 px-2 py-1 text-xs bg-orange-100 text-orange-800 rounded">
                        –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                      </span>
                    )}
                  </div>
                  {selectedSupplierProfileId === profile.id && (
                    <Check className="h-5 w-5 text-orange-500" />
                  )}
                </div>
              </div>
            ))}
          </div>

          <div className="flex justify-end gap-3 pt-4 border-t">
            <Button variant="outline" onClick={() => setShowSupplierProfileSelector(false)}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button 
              onClick={async () => {
                if (selectedSupplierProfileId) {
                  setShowSupplierProfileSelector(false)
                  // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                  // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–ª—è –∫–∞–∫–æ–≥–æ —à–∞–≥–∞ –ø—Ä–∏–º–µ–Ω—è—Ç—å
                  console.log('‚úÖ –í—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', selectedSupplierProfileId)
                  // TODO: –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —à–∞–≥–æ–≤ (2, 4, 5)
                }
              }}
              disabled={!selectedSupplierProfileId}
              className="gap-2"
            >
              <Check className="h-4 w-4" />
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Å–≤–æ–¥–∫–∏ */}
      <Dialog open={showSummaryModal} onOpenChange={setShowSummaryModal}>
        <DialogContent className="max-w-4xl max-h-[85vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <CheckCircle className="h-5 w-5 text-green-500" />
              –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞ –∞—Ç–æ–º–∞—Ä–Ω–æ–π —Å–¥–µ–ª–∫–∏
            </DialogTitle>
            <DialogDescription>
              –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-6">
            {/* –®–∞–≥ 1 - –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ */}
            {manualData[1] && (
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <h4 className="font-semibold text-gray-900 flex items-center gap-2">
                    <Building className="h-4 w-4 text-blue-500" />
                    –®–∞–≥ 1: –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
                  </h4>
                  <div className="flex items-center gap-2">
                    <span className="text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded">
                      –ò—Å—Ç–æ—á–Ω–∏–∫: {getSourceDisplayName(stepConfigs[1])}
                    </span>
                  </div>
                </div>
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[1].name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[1].legalName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ò–ù–ù</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[1].inn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">Email</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[1].email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[1].phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ê–¥—Ä–µ—Å</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[1].address || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* –®–∞–≥ 2 - –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ */}
            {manualData[2] && (
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <h4 className="font-semibold text-gray-900 flex items-center gap-2">
                    <FileText className="h-4 w-4 text-green-500" />
                    –®–∞–≥ 2: –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
                  </h4>
                  <div className="flex items-center gap-2">
                    <span className="text-xs px-2 py-1 bg-green-100 text-green-800 rounded">
                      –ò—Å—Ç–æ—á–Ω–∏–∫: {getSourceDisplayName(stepConfigs[2])}
                    </span>
                  </div>
                </div>
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[2].supplier || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–í–∞–ª—é—Ç–∞</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[2].currency || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                    </div>
                  </div>
                </div>
                {manualData[2].items && manualData[2].items.length > 0 && (
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–¢–æ–≤–∞—Ä—ã</Label>
                    <div className="mt-2 space-y-2">
                      {manualData[2].items.map((item: any, index: number) => (
                        <div key={index} className="p-3 bg-gray-50 rounded-lg">
                          <div className="flex justify-between items-center mb-1">
                            <span className="font-medium">{item.name || item.item_name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</span>
                            <span className="text-sm text-gray-600">{item.quantity || 0} —à—Ç.</span>
                          </div>
                          <div className="text-sm text-gray-600">
                            –¶–µ–Ω–∞: {item.price || 0} {manualData[2].currency || 'RUB'}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            )}

            {/* –®–∞–≥ 4 - –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
            {manualData[4] && (
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <h4 className="font-semibold text-gray-900 flex items-center gap-2">
                    <CreditCard className="h-4 w-4 text-purple-500" />
                    –®–∞–≥ 4: –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
                  </h4>
                  <div className="flex items-center gap-2">
                    <span className="text-xs px-2 py-1 bg-purple-100 text-purple-800 rounded">
                      –ò—Å—Ç–æ—á–Ω–∏–∫: {getSourceDisplayName(stepConfigs[4])}
                    </span>
                  </div>
                </div>
                <div>
                  <Label className="text-sm font-medium text-gray-600">–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã</Label>
                  <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                    {manualData[4].method || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                  </div>
                </div>
              </div>
            )}

            {/* –®–∞–≥ 5 - –†–µ–∫–≤–∏–∑–∏—Ç—ã */}
            {manualData[5] && (
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <h4 className="font-semibold text-gray-900 flex items-center gap-2">
                    <Banknote className="h-4 w-4 text-orange-500" />
                    –®–∞–≥ 5: {manualData[5].type === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ—Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                            manualData[5].type === 'p2p' ? 'P2P —Ä–µ–∫–≤–∏–∑–∏—Ç—ã' :
                            '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'}
                  </h4>
                  <div className="flex items-center gap-2">
                    <span className="text-xs px-2 py-1 bg-orange-100 text-orange-800 rounded">
                      –ò—Å—Ç–æ—á–Ω–∏–∫: {getSourceDisplayName(stepConfigs[5])}
                    </span>
                  </div>
                </div>
                <div className="grid grid-cols-2 gap-4">
                  {manualData[5].type === 'crypto' ? (
                    <>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–°–µ—Ç—å</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {manualData[5].crypto_network || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ê–¥—Ä–µ—Å</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg font-mono">
                          {manualData[5].crypto_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                    </>
                  ) : manualData[5].type === 'p2p' ? (
                    <>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ë–∞–Ω–∫</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {manualData[5].card_bank || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg font-mono">
                          {manualData[5].card_number || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–î–µ—Ä–∂–∞—Ç–µ–ª—å</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {manualData[5].card_holder || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                    </>
                  ) : (
                    <>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ë–∞–Ω–∫</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {manualData[5].bankName || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ü–æ–ª—É—á–∞—Ç–µ–ª—å</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {manualData[5].recipientName || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg font-mono">
                          {manualData[5].accountNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">SWIFT</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg font-mono">
                          {manualData[5].swift || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">IBAN</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg font-mono">
                          {manualData[5].iban || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                        </div>
                      </div>
                      <div>
                        <Label className="text-sm font-medium text-gray-600">–í–∞–ª—é—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–∞</Label>
                        <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                          {manualData[5].transferCurrency || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                        </div>
                      </div>
                    </>
                  )}
                </div>
              </div>
            )}

            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–µ–ª–∫–∏ */}
            <div className="bg-blue-50 p-4 rounded-lg">
              <h4 className="font-semibold text-blue-900 mb-2">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–µ–ª–∫–∏</h4>
              <div className="grid grid-cols-3 gap-4 text-sm">
                <div>
                  <span className="font-medium text-blue-700">–ó–∞–ø–æ–ª–Ω–µ–Ω–æ —à–∞–≥–æ–≤:</span>
                  <p className="text-blue-900">4 –∏–∑ 7</p>
                </div>
                <div>
                  <span className="font-medium text-blue-700">–ü—Ä–æ–≥—Ä–µ—Å—Å:</span>
                  <p className="text-blue-900">57%</p>
                </div>
                <div>
                  <span className="font-medium text-blue-700">–°—Ç–∞—Ç—É—Å:</span>
                  <p className="text-blue-900">–ì–æ—Ç–æ–≤–æ –∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã</p>
                </div>
              </div>
            </div>
          </div>

          <div className="flex justify-end gap-3 pt-4 border-t relative z-50">
            <Button 
              variant="outline" 
              onMouseDown={(e) => {
                console.log('üî¥ –ö–ù–û–ü–ö–ê –û–¢–ú–ï–ù–ê MOUSEDOWN!')
                console.log('üî¥ MouseDown Event:', e)
              }}
              onClick={(e) => {
                console.log('üî¥ –ö–ù–û–ü–ö–ê –û–¢–ú–ï–ù–ê –ù–ê–ñ–ê–¢–ê!')
                console.log('üî¥ Event:', e)
                console.log('üî¥ Target:', e.target)
                console.log('üî¥ CurrentTarget:', e.currentTarget)
                returnToStage1Editing()
              }}
              className="relative z-50"
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button 
              onMouseDown={(e) => {
                console.log('üîµ –ö–ù–û–ü–ö–ê –ü–ï–†–ï–•–û–î MOUSEDOWN!')
                console.log('üîµ MouseDown Event:', e)
              }}
              onClick={(e) => {
                console.log('üîµ –ö–ù–û–ü–ö–ê –ü–ï–†–ï–•–û–î –ù–ê–ñ–ê–¢–ê!')
                console.log('üîµ Event:', e)
                console.log('üîµ Target:', e.target)
                console.log('üîµ CurrentTarget:', e.currentTarget)
                goToNextStage()
              }}
              className="gap-2 relative z-50"
            >
              <ArrowRight className="h-4 w-4" />
              –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            </Button>
          </div>
        </DialogContent>
      </Dialog>


      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø */}
      <Dialog open={showStageTransitionModal} onOpenChange={setShowStageTransitionModal}>
        <DialogContent className="max-w-2xl">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <ArrowRight className="h-5 w-5 text-blue-500" />
              –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
            </DialogTitle>
            <DialogDescription>
              {currentStage === 1 
                ? "–í—ã –≥–æ—Ç–æ–≤—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã. –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã!"
                : "–í—ã –≥–æ—Ç–æ–≤—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏. –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
              }
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-6">
            {/* –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø */}
            <div className="bg-gray-50 p-4 rounded-lg">
              <h4 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
                <div className="w-6 h-6 rounded-full bg-gray-500 text-white flex items-center justify-center text-sm font-bold">
                  {currentStage}
                </div>
                –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {currentStage === 1 ? '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö' : '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã'}
              </h4>
              <div className="text-sm text-gray-600 space-y-1">
                {currentStage === 1 ? (
                  <>
                    <p>‚úÖ –®–∞–≥ 1: –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ - –∑–∞–ø–æ–ª–Ω–µ–Ω</p>
                    <p>‚úÖ –®–∞–≥ 2: –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ - –∑–∞–ø–æ–ª–Ω–µ–Ω</p>
                    <p>‚úÖ –®–∞–≥ 4: –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã - –∑–∞–ø–æ–ª–Ω–µ–Ω</p>
                    <p>‚úÖ –®–∞–≥ 5: –†–µ–∫–≤–∏–∑–∏—Ç—ã - –∑–∞–ø–æ–ª–Ω–µ–Ω</p>
                  </>
                ) : (
                  <>
                    <p>‚úÖ –®–∞–≥ 3: –î–æ–∫—É–º–µ–Ω—Ç—ã - –Ω–∞—Å—Ç—Ä–æ–µ–Ω</p>
                    <p>‚úÖ –®–∞–≥ 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ</p>
                    <p>‚úÖ –®–∞–≥ 7: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ</p>
                  </>
                )}
              </div>
            </div>

            {/* –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø */}
            <div className="bg-blue-50 p-4 rounded-lg border-2 border-blue-200">
              <h4 className="font-semibold text-blue-900 mb-3 flex items-center gap-2">
                <div className="w-6 h-6 rounded-full bg-blue-500 text-white flex items-center justify-center text-sm font-bold">
                  {currentStage + 1}
                </div>
                –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø: {currentStage === 1 ? '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã' : '–ê–Ω–∏–º–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏'}
              </h4>
              <div className="text-sm text-blue-700 space-y-1">
                {currentStage === 1 ? (
                  <>
                    <p>üîß –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
                    <p>üîß –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤</p>
                    <p>üîß –®–∞–≥ 7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</p>
                    <p className="font-medium mt-2">–í—Å–µ —à–∞–≥–∏ —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
                  </>
                ) : (
                  <>
                    <p>üé¨ –ë–ª–æ–∫ 2 –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—Å—è –≤ –∞–Ω–∏–º–∞—Ü–∏—é —Å–¥–µ–ª–∫–∏</p>
                    <p>üé¨ –†–µ–∞–ª—å–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞</p>
                    <p>üé¨ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
                    <p className="font-medium mt-2">–°–¥–µ–ª–∫–∞ –ø–µ—Ä–µ–π–¥–µ—Ç –≤ –∞–∫—Ç–∏–≤–Ω—É—é —Ñ–∞–∑—É</p>
                  </>
                )}
              </div>
            </div>

            {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
            <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-200">
              <div className="flex items-start gap-3">
                <div className="w-5 h-5 rounded-full bg-yellow-500 text-white flex items-center justify-center text-xs font-bold mt-0.5">
                  !
                </div>
                <div>
                  <h5 className="font-medium text-yellow-900 mb-1">–í–Ω–∏–º–∞–Ω–∏–µ</h5>
                  <p className="text-sm text-yellow-700">
                    {currentStage === 1 
                      ? "–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
                      : "–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å–¥–µ–ª–∫–∞ —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã."
                    }
                  </p>
                </div>
              </div>
            </div>

            {/* –ì–∞–ª–æ—á–∫–∞ "–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å" */}
            {currentStage === 1 && (
              <div className="flex items-center space-x-2">
                <input
                  type="checkbox"
                  id="dontShowAgain"
                  checked={dontShowStageTransition}
                  onChange={(e) => setDontShowStageTransition(e.target.checked)}
                  className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                />
                <label htmlFor="dontShowAgain" className="text-sm text-gray-600">
                  –ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —ç—Ç–æ –æ–∫–Ω–æ
                </label>
              </div>
            )}
          </div>

          <div className="flex justify-end gap-3 pt-4 border-t">
            <Button 
              variant="outline" 
              onClick={() => {
                console.log('üî¥ –ö–ù–û–ü–ö–ê –û–¢–ú–ï–ù–ê –í –ú–û–î–ê–õ–¨–ù–û–ú –û–ö–ù–ï –ü–ï–†–ï–•–û–î–ê –ù–ê–ñ–ê–¢–ê!')
                returnToStage1Editing()
              }}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button 
              onClick={() => {
                console.log('üü¢ –ö–ù–û–ü–ö–ê –ü–†–û–î–û–õ–ñ–ò–¢–¨ –í –ú–û–î–ê–õ–¨–ù–û–ú –û–ö–ù–ï –ü–ï–†–ï–•–û–î–ê –ù–ê–ñ–ê–¢–ê!')
                proceedToStage2()
              }}
              className="gap-2 bg-blue-600 hover:bg-blue-700"
            >
              <ArrowRight className="h-4 w-4" />
              {currentStage === 1 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏'}
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã */}
      <Dialog open={showBlueRoomSupplierModal} onOpenChange={setShowBlueRoomSupplierModal}>
        <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Users className="h-5 w-5 text-blue-500" />
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ —Å–∏–Ω–µ–π –∫–æ–º–Ω–∞—Ç—ã
            </DialogTitle>
            <DialogDescription>
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–∞ {catalogSourceStep}
            </DialogDescription>
          </DialogHeader>

          {blueRoomLoading ? (
            <div className="flex items-center justify-center py-8">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"></div>
              <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...</span>
            </div>
          ) : (
            <div className="space-y-4">
              {blueRoomSuppliers.map((supplier) => (
                <div
                  key={supplier.id}
                  onClick={() => handleSelectBlueRoomSupplier(supplier)}
                  className="flex items-center gap-4 p-4 border-2 border-gray-200 rounded-xl hover:border-blue-400 hover:bg-blue-50 cursor-pointer transition-all duration-200"
                >
                  <div className="w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center">
                    <Building className="h-6 w-6 text-white" />
                  </div>
                  <div className="flex-1">
                    <div className="text-lg font-semibold text-gray-800 mb-1">
                      {supplier.name}
                    </div>
                    <div className="text-sm text-gray-600 space-y-1">
                      {supplier.contact_email && (
                        <div>üìß {supplier.contact_email}</div>
                      )}
                      {supplier.contact_phone && (
                        <div>üìû {supplier.contact_phone}</div>
                      )}
                      {supplier.category && (
                        <div>üè∑Ô∏è {supplier.category}</div>
                      )}
                      {supplier.city && (
                        <div>üìç {supplier.city}</div>
                      )}
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="text-sm text-gray-500">
                      ID: {supplier.id}
                    </div>
                    <div className="text-xs text-gray-400">
                      {supplier.created_at ? new Date(supplier.created_at).toLocaleDateString() : ''}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}

          <div className="flex justify-end gap-2 mt-6">
            <Button variant="outline" onClick={() => setShowBlueRoomSupplierModal(false)}>
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã */}
      <Dialog open={showOrangeRoomSupplierModal} onOpenChange={setShowOrangeRoomSupplierModal}>
        <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Building className="h-5 w-5 text-orange-500" />
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏–∑ –æ—Ä–∞–Ω–∂–µ–≤–æ–π –∫–æ–º–Ω–∞—Ç—ã
            </DialogTitle>
            <DialogDescription>
              –í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —à–∞–≥–∞ {catalogSourceStep}
            </DialogDescription>
          </DialogHeader>

          {orangeRoomLoading ? (
            <div className="flex items-center justify-center py-8">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-orange-500"></div>
              <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...</span>
            </div>
          ) : (
            <div className="space-y-4">
              {orangeRoomSuppliers.map((supplier) => (
                <div
                  key={supplier.id}
                  onClick={() => handleSelectBlueRoomSupplier(supplier)}
                  className="flex items-center gap-4 p-4 border-2 border-gray-200 rounded-xl hover:border-orange-400 hover:bg-orange-50 cursor-pointer transition-all duration-200"
                >
                  <div className="w-12 h-12 rounded-full bg-orange-500 flex items-center justify-center">
                    <Building className="h-6 w-6 text-white" />
                  </div>
                  <div className="flex-1">
                    <div className="text-lg font-semibold text-gray-800 mb-1">
                      {supplier.name}
                    </div>
                    <div className="text-sm text-gray-600 space-y-1">
                      {supplier.contact_email && (
                        <div>üìß {supplier.contact_email}</div>
                      )}
                      {supplier.contact_phone && (
                        <div>üìû {supplier.contact_phone}</div>
                      )}
                      {supplier.category && (
                        <div>üè∑Ô∏è {supplier.category}</div>
                      )}
                      {supplier.city && (
                        <div>üìç {supplier.city}</div>
                      )}
                      <div className="text-orange-600 font-medium">‚úì –ê–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫</div>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className="text-sm text-gray-500">
                      ID: {supplier.id}
                    </div>
                    <div className="text-xs text-gray-400">
                      {supplier.created_at ? new Date(supplier.created_at).toLocaleDateString() : ''}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}

          <div className="flex justify-end gap-2 mt-6">
            <Button variant="outline" onClick={() => setShowOrangeRoomSupplierModal(false)}>
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —à–∞–≥–∞ */}
      <Dialog open={showStepDataModal} onOpenChange={setShowStepDataModal}>
        <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Eye className="h-5 w-5 text-blue-500" />
              –î–∞–Ω–Ω—ã–µ —à–∞–≥–∞ {stepDataToView?.stepId === 1 ? 'I (–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞)' : stepDataToView?.stepId === 2 ? 'II (–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è)' : stepDataToView?.stepId}
            </DialogTitle>
            <DialogDescription>
              –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–≥–æ —à–∞–≥–∞
            </DialogDescription>
          </DialogHeader>

          {stepDataToView && (
            <div className="space-y-6">
              {/* JSON –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö */}
              <div className="bg-gray-50 rounded-lg p-4">
                <h3 className="text-sm font-semibold text-gray-800 mb-3">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö (JSON)</h3>
                <pre className="text-xs text-gray-700 bg-white p-3 rounded border overflow-auto max-h-64">
                  {JSON.stringify(stepDataToView.data, null, 2)}
                </pre>
              </div>

              {/* –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è —à–∞–≥–∞ 1 */}
              {stepDataToView.stepId === 1 && (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="bg-blue-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-blue-800 mb-3">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                    <div className="space-y-2 text-sm">
                      <div><span className="font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ:</span> {stepDataToView.data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</span> {stepDataToView.data.legalName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–ò–ù–ù:</span> {stepDataToView.data.inn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–ö–ü–ü:</span> {stepDataToView.data.kpp || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–û–ì–†–ù:</span> {stepDataToView.data.ogrn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                  </div>

                  <div className="bg-green-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-green-800 mb-3">–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</h3>
                    <div className="space-y-2 text-sm">
                      <div><span className="font-medium">–ë–∞–Ω–∫:</span> {stepDataToView.data.bankName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç:</span> {stepDataToView.data.bankAccount || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–ë–ò–ö:</span> {stepDataToView.data.bik || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–ö–æ—Ä—Ä. —Å—á–µ—Ç:</span> {stepDataToView.data.correspondentAccount || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                  </div>

                  <div className="bg-purple-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-purple-800 mb-3">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
                    <div className="space-y-2 text-sm">
                      <div><span className="font-medium">Email:</span> {stepDataToView.data.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–¢–µ–ª–µ—Ñ–æ–Ω:</span> {stepDataToView.data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–°–∞–π—Ç:</span> {stepDataToView.data.website || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                      <div><span className="font-medium">–î–∏—Ä–µ–∫—Ç–æ—Ä:</span> {stepDataToView.data.director || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                  </div>

                  <div className="bg-orange-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-orange-800 mb-3">–ê–¥—Ä–µ—Å</h3>
                    <div className="space-y-2 text-sm">
                      <div><span className="font-medium">–ê–¥—Ä–µ—Å:</span> {stepDataToView.data.address || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                  </div>
                </div>
              )}

              {/* –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è —à–∞–≥–∞ 2 */}
              {stepDataToView.stepId === 2 && (
                <div className="space-y-4">
                  <div className="bg-blue-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-blue-800 mb-3">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ</h3>
                    <div className="space-y-2 text-sm">
                      <div><span className="font-medium">–ü–æ—Å—Ç–∞–≤—â–∏–∫:</span> {
                        stepDataToView.data.supplier || 
                        stepDataToView.data.supplier_name || 
                        '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                      }</div>
                      <div><span className="font-medium">–í–∞–ª—é—Ç–∞:</span> {stepDataToView.data.currency || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    </div>
                  </div>

                  {stepDataToView.data.items && stepDataToView.data.items.length > 0 && (
                    <div className="bg-green-50 rounded-lg p-4">
                      <h3 className="text-sm font-semibold text-green-800 mb-3">–¢–æ–≤–∞—Ä—ã ({stepDataToView.data.items.length})</h3>
                      <div className="space-y-3">
                        {stepDataToView.data.items.map((item: any, index: number) => (
                          <div key={index} className="bg-white rounded p-3 border">
                            <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-sm">
                              <div><span className="font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ:</span> {item.name || item.item_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                              <div><span className="font-medium">–ö–æ–¥:</span> {item.code || item.item_code || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                              <div><span className="font-medium">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span> {item.quantity || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                              <div><span className="font-medium">–¶–µ–Ω–∞:</span> {item.price || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                </div>
              )}

              {/* –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è —à–∞–≥–∞ 4 */}
              {stepDataToView.stepId === 4 && (
                <div className="space-y-4">
                  <div className="bg-indigo-50 rounded-lg p-4">
                    <h3 className="text-sm font-semibold text-indigo-800 mb-3">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h3>
                    <div className="space-y-2 text-sm">
                      <div><span className="font-medium">–ú–µ—Ç–æ–¥:</span> {
                        stepDataToView.data.method === 'bank-transfer' ? '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥' :
                        stepDataToView.data.method === 'p2p' ? 'P2P –ø–ª–∞—Ç–µ–∂' :
                        stepDataToView.data.method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞' :
                        stepDataToView.data.method || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                      }</div>
                      <div><span className="font-medium">–ü–æ—Å—Ç–∞–≤—â–∏–∫:</span> {
                        stepDataToView.data.supplier || 
                        stepDataToView.data.supplier_name || 
                        stepDataToView.data.recipientName || 
                        '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                      }</div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          )}

          <div className="flex justify-end gap-2 mt-6">
            <Button variant="outline" onClick={() => setShowStepDataModal(false)}>
              –ó–∞–∫—Ä—ã—Ç—å
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ */}
      <Dialog open={showRequisitesConfirmationModal} onOpenChange={setShowRequisitesConfirmationModal}>
        <DialogContent className="max-w-2xl">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <CheckCircle className="h-5 w-5 text-green-500" />
              –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
            </DialogTitle>
            <DialogDescription>
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã —É–∫–∞–∑–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-6">
            {/* –†–µ–∫–≤–∏–∑–∏—Ç—ã –∏–∑ —à–∞–≥–∞ 5 */}
            {manualData[5] && (
              <div className="space-y-4">
                <h4 className="font-semibold text-gray-900 flex items-center gap-2">
                  <CreditCard className="h-4 w-4 text-purple-500" />
                  –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
                </h4>
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[5].bankName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[5].accountNumber || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">SWIFT/BIC</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[5].swift || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ü–æ–ª—É—á–∞—Ç–µ–ª—å</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[5].recipientName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                  <div className="col-span-2">
                    <Label className="text-sm font-medium text-gray-600">–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è</Label>
                    <div className="mt-1 p-3 bg-gray-50 rounded-lg">
                      {manualData[5].recipientAddress || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è */}
            {manualData[2] && (
              <div className="space-y-4">
                <h4 className="font-semibold text-gray-900 flex items-center gap-2">
                  <Building className="h-4 w-4 text-blue-500" />
                  –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                </h4>
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–ü–æ—Å—Ç–∞–≤—â–∏–∫</Label>
                    <div className="mt-1 p-3 bg-blue-50 rounded-lg">
                      {manualData[2].supplier || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                    </div>
                  </div>
                  <div>
                    <Label className="text-sm font-medium text-gray-600">–í–∞–ª—é—Ç–∞</Label>
                    <div className="mt-1 p-3 bg-blue-50 rounded-lg">
                      {manualData[2].currency || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>

          <div className="flex justify-end gap-2 mt-6">
            <Button variant="outline" onClick={editRequisites}>
              ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </Button>
            <Button onClick={confirmRequisites}>
              ‚úÖ –í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–≤–æ–¥–∫–∏ —ç—Ç–∞–ø–∞ 2 */}
      <Dialog open={showStage2SummaryModal} onOpenChange={setShowStage2SummaryModal}>
        <DialogContent className="max-w-4xl max-h-[85vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <CheckCircle className="h-5 w-5 text-green-500" />
              –°–≤–æ–¥–∫–∞ —ç—Ç–∞–ø–∞ 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            </DialogTitle>
            <DialogDescription>
              –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –æ–¥–æ–±—Ä–µ–Ω—ã! –ì–æ—Ç–æ–≤—ã –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏.
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-6">
            {/* –°—Ç–∞—Ç—É—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è */}
            <div className="bg-green-50 border-l-4 border-green-400 p-4 rounded-r-lg">
              <div className="flex items-center">
                <CheckCircle className="h-5 w-5 text-green-500 mr-2" />
                <div>
                  <p className="text-green-700 font-medium">‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã</p>
                  <p className="text-green-600 text-sm">
                    ‚Ä¢ –ê—Ç–æ–º–∞—Ä–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–¥–æ–±—Ä–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º<br/>
                    ‚Ä¢ –ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω<br/>
                    ‚Ä¢ –†–µ–∫–≤–∏–∑–∏—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
                  </p>
                </div>
              </div>
            </div>

            {/* –ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ —à–∞–≥–∞–º */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* –®–∞–≥ 1 - –ö–æ–º–ø–∞–Ω–∏—è */}
              {manualData[1] && (
                <div className="bg-blue-50 rounded-lg p-4">
                  <h4 className="font-semibold text-blue-900 mb-3 flex items-center gap-2">
                    <Building className="h-4 w-4" />
                    –®–∞–≥ 1: –ö–æ–º–ø–∞–Ω–∏—è
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div><span className="font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ:</span> {manualData[1].name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    <div><span className="font-medium">–ò–ù–ù:</span> {manualData[1].inn || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                    <div><span className="font-medium">Email:</span> {manualData[1].email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                  </div>
                </div>
              )}

              {/* –®–∞–≥ 2 - –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è */}
              {manualData[2] && (
                <div className="bg-green-50 rounded-lg p-4">
                  <h4 className="font-semibold text-green-900 mb-3 flex items-center gap-2">
                    <FileText className="h-4 w-4" />
                    –®–∞–≥ 2: –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div><span className="font-medium">–ü–æ—Å—Ç–∞–≤—â–∏–∫:</span> {manualData[2].supplier || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                    <div><span className="font-medium">–í–∞–ª—é—Ç–∞:</span> {manualData[2].currency || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                    <div><span className="font-medium">–¢–æ–≤–∞—Ä–æ–≤:</span> {manualData[2].items?.length || 0}</div>
                  </div>
                </div>
              )}

              {/* –®–∞–≥ 4 - –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
              {manualData[4] && (
                <div className="bg-indigo-50 rounded-lg p-4">
                  <h4 className="font-semibold text-indigo-900 mb-3 flex items-center gap-2">
                    <CreditCard className="h-4 w-4" />
                    –®–∞–≥ 4: –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div><span className="font-medium">–ú–µ—Ç–æ–¥:</span> {
                      manualData[4].method === 'bank-transfer' ? '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥' :
                      manualData[4].method === 'p2p' ? 'P2P –ø–ª–∞—Ç–µ–∂' :
                      manualData[4].method === 'crypto' ? '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞' :
                      manualData[4].method || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
                    }</div>
                    <div><span className="font-medium">–ü–æ—Å—Ç–∞–≤—â–∏–∫:</span> {manualData[4].supplier || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                  </div>
                </div>
              )}

              {/* –®–∞–≥ 5 - –†–µ–∫–≤–∏–∑–∏—Ç—ã */}
              {manualData[5] && (
                <div className="bg-purple-50 rounded-lg p-4">
                  <h4 className="font-semibold text-purple-900 mb-3 flex items-center gap-2">
                    <CreditCard className="h-4 w-4" />
                    –®–∞–≥ 5: –†–µ–∫–≤–∏–∑–∏—Ç—ã
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div><span className="font-medium">–ë–∞–Ω–∫:</span> {manualData[5].bankName || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                    <div><span className="font-medium">–°—á–µ—Ç:</span> {manualData[5].accountNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                    <div><span className="font-medium">SWIFT:</span> {manualData[5].swift || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                  </div>
                </div>
              )}
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ */}
            <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg">
              <div className="flex items-center">
                <CreditCard className="h-5 w-5 text-yellow-600 mr-2" />
                <div>
                  <p className="text-yellow-800 font-medium">üí≥ –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</p>
                  <p className="text-yellow-700 text-sm">
                    –ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–¥–æ–±—Ä–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º. –í—Å–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏.
                  </p>
                </div>
              </div>
            </div>
          </div>

          <div className="flex justify-end gap-2 mt-6">
            <Button variant="outline" onClick={() => setShowStage2SummaryModal(false)}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button onClick={proceedToStage3} className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700">
              üé¨ –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–¥–µ–ª–∫–∏
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É */}
      {managerNotification && (
        <div className={`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg max-w-md ${
          managerNotification.type === 'success' 
            ? 'bg-green-500 text-white' 
            : 'bg-red-500 text-white'
        }`}>
          <div className="flex items-center gap-2">
            {managerNotification.type === 'success' ? (
              <CheckCircle className="h-5 w-5" />
            ) : (
              <X className="h-5 w-5" />
            )}
            <span className="font-medium">
              {managerNotification.type === 'success' ? '–£—Å–ø–µ—à–Ω–æ!' : '–û—à–∏–±–∫–∞!'}
            </span>
          </div>
          <p className="mt-1 text-sm">{managerNotification.message}</p>
          <button
            onClick={() => setManagerNotification(null)}
            className="absolute top-2 right-2 text-white hover:text-gray-200"
          >
            <X className="h-4 w-4" />
          </button>
        </div>
      )}


      {/* üõí –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
      <CatalogModal
        open={showCatalogModal}
        onClose={() => setShowCatalogModal(false)}
        onAddProducts={handleCatalogProductsAdd}
      />

    </div>
  )
}

