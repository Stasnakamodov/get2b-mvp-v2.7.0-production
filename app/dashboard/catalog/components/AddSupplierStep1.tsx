import React, { useCallback } from "react";
import { useAddSupplierContext } from "../context/AddSupplierContext";
import { useSupplierDraft } from "../hooks/useSupplierDraft";
import { useCategories } from "@/hooks/useCategories";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Save, ArrowRight } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";

export function AddSupplierStep1() {
  const {
    supplierData,
    setSupplierData,
    currentStep,
    setCurrentStep,
    maxStepReached,
    setMaxStepReached,
    validateStep,
    sourceType,
    draftId,
  } = useAddSupplierContext();

  const { saveDraft, saving } = useSupplierDraft();
  const { categories, loading: categoriesLoading } = useCategories();

  const updateField = useCallback((field: string, value: string) => {
    setSupplierData({
      ...supplierData,
      [field]: value,
    });
  }, [supplierData, setSupplierData]);

  const handleNext = () => {
    if (validateStep(1)) {
      const nextStep = 2;
      setCurrentStep(nextStep);
      if (nextStep > maxStepReached) {
        setMaxStepReached(nextStep);
      }
    }
  };

  const handleSaveDraft = async () => {
    if (!supplierData.name) {
      alert("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞");
      return;
    }

    await saveDraft({
      name: `–ß–µ—Ä–Ω–æ–≤–∏–∫: ${supplierData.name}`,
      supplierData,
      products: [],
      currentStep: 1,
      maxStepReached,
      sourceType,
      draftId,
    });
  };

  const isValid = validateStep(1);

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h2 className="text-2xl font-bold text-gray-900">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <p className="text-gray-600 mt-2">
          –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ
        </p>
        {sourceType === 'echo_card' && (
          <Badge variant="secondary" className="mt-2">
            üìä –ò–º–ø–æ—Ä—Ç –∏–∑ —ç—Ö–æ –∫–∞—Ä—Ç–æ—á–∫–∏
          </Badge>
        )}
      </div>

      {/* –§–æ—Ä–º–∞ */}
      <Card>
        <CardHeader>
          <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ</CardTitle>
          <CardDescription>
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ */}
          <div className="space-y-2">
            <Label htmlFor="name">
              –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ <span className="text-red-500">*</span>
            </Label>
            <Input
              id="name"
              value={supplierData.name}
              onChange={(e) => updateField('name', e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
              className={!supplierData.name ? "border-red-200" : ""}
            />
          </div>

          {/* –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
          <div className="space-y-2">
            <Label htmlFor="company_name">
              –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ <span className="text-red-500">*</span>
            </Label>
            <Input
              id="company_name"
              value={supplierData.company_name}
              onChange={(e) => updateField('company_name', e.target.value)}
              placeholder="–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
              className={!supplierData.company_name ? "border-red-200" : ""}
            />
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
          <div className="space-y-2">
            <Label>
              –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ <span className="text-red-500">*</span>
            </Label>
            <Select
              value={supplierData.category}
              onValueChange={(value) => updateField('category', value)}
            >
              <SelectTrigger className={!supplierData.category ? "border-red-200" : ""}>
                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é" />
              </SelectTrigger>
              <SelectContent>
                {categoriesLoading ? (
                  <SelectItem value="loading" disabled>
                    –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...
                  </SelectItem>
                ) : categories.length > 0 ? (
                  categories.map((category) => (
                    <SelectItem key={category.key} value={category.key}>
                      {category.icon} {category.name}
                    </SelectItem>
                  ))
                ) : (
                  <SelectItem value="no-categories" disabled>
                    –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                  </SelectItem>
                )}
              </SelectContent>
            </Select>
          </div>

          {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ */}
          <div className="space-y-2">
            <Label htmlFor="contact_person">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ</Label>
            <Input
              id="contact_person"
              value={supplierData.contact_person}
              onChange={(e) => updateField('contact_person', e.target.value)}
              placeholder="–ò–º—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –∫–æ–º–ø–∞–Ω–∏–∏"
            />
          </div>
        </CardContent>
      </Card>

      {/* –í–∞–ª–∏–¥–∞—Ü–∏—è */}
      {!isValid && (
        <div className="bg-red-50 border border-red-200 rounded-lg p-4">
          <h4 className="font-medium text-red-800 mb-2">–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:</h4>
          <ul className="text-sm text-red-700 space-y-1">
            {!supplierData.name && <li>‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞</li>}
            {!supplierData.company_name && <li>‚Ä¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</li>}
            {!supplierData.category && <li>‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>}
          </ul>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex justify-between items-center pt-6 border-t">
        <Button
          variant="outline"
          onClick={handleSaveDraft}
          disabled={saving || !supplierData.name}
          className="flex items-center gap-2"
        >
          <Save className="h-4 w-4" />
          {saving ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫"}
        </Button>

        <Button
          onClick={handleNext}
          disabled={!isValid}
          className="flex items-center gap-2"
        >
          –î–∞–ª–µ–µ
          <ArrowRight className="h-4 w-4" />
        </Button>
      </div>
    </div>
  );
} 