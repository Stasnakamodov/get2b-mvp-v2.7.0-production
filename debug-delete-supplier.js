console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –ü–û–°–¢–ê–í–©–ò–ö–û–í');
console.log('==================================');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
async function debugDeleteSupplier() {
    const baseUrl = 'http://localhost:3002';
    
    try {
        console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê API ENDPOINT');
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫—É OPTIONS –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API...');
        const optionsResponse = await fetch(`${baseUrl}/api/catalog/user-suppliers`, {
            method: 'OPTIONS'
        });
        
        console.log(`OPTIONS –∑–∞–ø—Ä–æ—Å: ${optionsResponse.status} ${optionsResponse.statusText}`);
        console.log('CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏:', {
            'Access-Control-Allow-Origin': optionsResponse.headers.get('Access-Control-Allow-Origin'),
            'Access-Control-Allow-Methods': optionsResponse.headers.get('Access-Control-Allow-Methods'),
            'Access-Control-Allow-Headers': optionsResponse.headers.get('Access-Control-Allow-Headers')
        });
        
        console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê GET –ó–ê–ü–†–û–°–ê (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
        const getUserSuppliersResponse = await fetch(`${baseUrl}/api/catalog/user-suppliers`);
        const getUserSuppliersResult = await getUserSuppliersResponse.json();
        
        console.log(`GET –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞: ${getUserSuppliersResponse.status}`);
        console.log('–û—Ç–≤–µ—Ç:', getUserSuppliersResult);
        
        if (getUserSuppliersResponse.status === 401) {
            console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - API —Ç—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω');
        } else if (getUserSuppliersResponse.status === 200) {
            console.log('‚ö†Ô∏è API —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã:', getUserSuppliersResult.suppliers?.length || 0);
        }
        
        console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê DELETE –ó–ê–ü–†–û–°–ê (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
        const deleteResponse = await fetch(`${baseUrl}/api/catalog/user-suppliers`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: 'test-id' })
        });
        
        const deleteResult = await deleteResponse.json();
        
        console.log(`DELETE –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞: ${deleteResponse.status}`);
        console.log('–û—Ç–≤–µ—Ç:', deleteResult);
        
        if (deleteResponse.status === 401) {
            console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - DELETE —Ç—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω');
        } else if (deleteResponse.status === 404) {
            console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ)');
        } else {
            console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç DELETE API');
        }
        
        console.log('\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´');
        console.log('==================');
        
        console.log('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º:');
        console.log('1. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        console.log('2. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Å—Å–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'); 
        console.log('3. –ü–æ—Å—Ç–∞–≤—â–∏–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
        console.log('4. –ü–æ—Å—Ç–∞–≤—â–∏–∫ —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω (is_active=false)');
        console.log('5. –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞');
        
        console.log('\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:');
        console.log('1. –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç (–æ–±–Ω–æ–≤–∏—Ç–µ —Å–µ—Å—Å–∏—é)');
        console.log('2. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞');
        console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏');
        console.log('4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø—ã—Ç–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –°–í–û–ò–• –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
    }
}

debugDeleteSupplier();